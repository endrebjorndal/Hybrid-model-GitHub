GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               04/04/22 13:20:43 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  option solprint = off;
   2  option limrow = 100;
   3  option limcol = 100;
   4  option nlp = minos;
   5  option optCR = 1E-02;
   6   
   7  *declare models and assign values to model parameters
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\model_formulations.gms
   9  sets
  10     i nodes
  11     z zones
  12     nodal_set(i) nodes that are in "nodal" pricing areas
  13     zonal_set(i) nodes that are in zones
  14     hybrid_set(i) nodes that are in nodal zones and directly connected to zones
  15     nodal_zone(z) zones that are comprised of nodal_set nodes
  16     l consumers or demand bid curve segments
  17     k producers or supply bid curve segments
  18     con_reg(i,l) consumers that participate in regulation market
  19     gen_reg(i,k) generators that participate in regulation market
  20     line(i,i) whether a line exists between two lines
  21     zconn(z,z) whether there is a connection from zone z to zone x
  22     zconn_hybrid2(i,z) node i is in a nodal area and z is a non-nodal zone
  23     zconn_hybrid3(i,i) lines connecting a nodal area to a non-nodal area
  24     zmem(i,z) whether node i is a member of zone z
  25     agent /gen, con, grid, tot/
  26     case /unc, nodal, zonal,
  27          zonal_sim1, zonal_sim2, zonal_sim3,
  28          zonal_seq1, zonal_seq2, zonal_seq3,
  29          redispatch,
  30          redispatch_sim1, redispatch_sim2, redispatch_sim3,
  31          redispatch_seq1, redispatch_seq2, redispatch_seq3/
  32     cur_case(case) current case
  33     DA_RT(case,case) /zonal.redispatch, zonal_sim1.redispatch_sim1,
  34                      zonal_sim2.redispatch_sim2, zonal_sim3.redispatch_sim3,
  35                      zonal_seq1.redispatch_seq1, zonal_seq2.redispatch_seq2,
  36                      zonal_seq3.redispatch_seq3/
  37     DA(case) /zonal, zonal_sim1, zonal_sim2, zonal_sim3,
  38                      zonal_seq1, zonal_seq2, zonal_seq3/
  39     DA_seq(case) /zonal_seq1, zonal_seq2, zonal_seq3/
  40     RT(case) /redispatch,
  41              redispatch_sim1, redispatch_sim2, redispatch_sim3,
  42              redispatch_seq1, redispatch_seq2, redispatch_seq3/;
  43   
  44  parameters
  45     e(i,k) constant term for supply bid curve
  46     c(i,k) slope for spot market marginal cost curve
  47     cu(i,k) slope for upregulation by generation
  48     cd(i,k) slope for downregulation by generation
  49     gen_ub(i,k) generation upper bound
  50     gen_gamma(i,k) flexibility cost factor for generators
  51     a(i,l) constant term for demand bid curve
  52     b(i,l) slope for demand bid curve in spot market
  53     bu(i,l) slope for upregulation by consumption
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               04/04/22 13:20:43 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  54     bd(i,l) slope for downregulation by consumption
  55     con_ub(i,l) consumption upper bound
  56     con_gamma(i,l) flexibility cost factor for load
  57     lcap(i,i) line capacity
  58     ptdf(i,i,i) ptdf matrix
  59     zcap(z,z,*) capacity for zonal interconnection
  60     zcap_hybrid(i,z,*) capacity between hybrid nodes and zones
  61     zcap_hybrid_3(i,i,*) capacity between hybrid nodes and zonal nodes
  62     status(case)
  63     price(i,case) dual prices for nodes
  64     cost(i,k,case) cost for individual generators
  65     benefit(i,l,case) benefit for individual consumers
  66     paym_tot(agent,case)
  67     paym_gen(i,k,case) payment for individual generators
  68     paym_con(i,l,case) payment for individual consumers
  69     surpl_tot(agent,case) total surplus
  70     surpl_gen(i,k,case) surplus for individual generators
  71     surpl_con(i,l,case) surplus for individual consumers
  72     pflow(i,i,*) physical line flows
  73     cflow(i,i,case) commercial flows
  74     generation(i,k,*)
  75     consumption(i,l,*)
  76     net_inj_store(i,*);
  77   
  78  alias(i,j);
  79  alias(i,jj);
  80  alias(i,jjj);
  81  alias(i,jjjj);
  82  alias(z,x);
  83  alias (case,ccase);
  84   
  85  *load data set
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\6_node_extra_line.gms
  87  sets
  88      i /1*6/
  89      k /1/
  90      l /1/
  91      z /1*2/
  92      nodal_set /4*6/
  93      zmem /1.1, 2.1, 3.1, 4.2, 5.2, 6.2/
  94      line /1.2, 1.3, 1.4, 2.3, 3.4, 3.5, 4.5, 4.6, 5.6/
  95      zconn /1.2/
  96      con_reg /1.1, 4.1, 5.1/
  97      gen_reg /2.1, 3.1, 4.1, 6.1/;
  98   
  99  parameters
 100  a(i,l) /
 101  1.1 100,
 102  4.1 100,
 103  5.1 100 /
 104   
 105  b(i,l) /
 106  1.1 0.05,
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               04/04/22 13:20:43 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 107  4.1 0.1,
 108  5.1 0.1 /
 109   
 110  con_ub(i,l) /
 111  1.1 10000,
 112  4.1 10000,
 113  5.1 10000 /
 114   
 115  e(i,k) /
 116  2.1 0
 117  3.1 0
 118  4.1 0
 119  6.1 0 /
 120   
 121  c(i,k) /
 122  2.1 0.05,
 123  3.1 0.05,
 124  4.1 0.05
 125  6.1 0.025 /
 126   
 127  gen_ub(i,k) /
 128  2.1 10000,
 129  3.1 10000,
 130  4.1 10000,
 131  6.1 10000 /
 132   
 133  con_gamma(i,l) /
 134  1.1 8,
 135  2.1 8,
 136  3.1 8,
 137  4.1 8,
 138  5.1 8,
 139  6.1 8 /
 140   
 141  gen_gamma(i,k) /
 142  1.1 2,
 143  2.1 2,
 144  3.1 2,
 145  4.1 2,
 146  5.1 2,
 147  6.1 2 /
 148   
 149  lcap(i,i) /
 150  1.2 500,
 151  1.3 450,
 152  1.4 400,
 153  2.3 50,
 154  3.4 20,
 155  3.5 50,
 156  4.5 50,
 157  4.6 500,
 158  5.6 200 /
 159   
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               04/04/22 13:20:43 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 160  zcap(z,z,*) /
 161  1.2.'fwd' 0
 162  1.2.'bwd' 0/
 163   
 164  ptdf(i,i,i) /
 165  1.2.2 -0.618182,
 166  1.2.3 -0.236364,
 167  1.2.4 -0.145455,
 168  1.2.5 -0.181818,
 169  1.2.6 -0.163636,
 170  1.3.2 -0.236364,
 171  1.3.3 -0.472727,
 172  1.3.4 -0.290909,
 173  1.3.5 -0.363636,
 174  1.3.6 -0.327273,
 175  1.4.2 -0.145455,
 176  1.4.3 -0.290909,
 177  1.4.4 -0.563636,
 178  1.4.5 -0.454545,
 179  1.4.6 -0.509091,
 180  2.3.2  0.381818,
 181  2.3.3 -0.236364,
 182  2.3.4 -0.145455,
 183  2.3.5 -0.181818,
 184  2.3.6 -0.163636,
 185  3.4.2  0.090909,
 186  3.4.3  0.181818,
 187  3.4.4 -0.272727,
 188  3.4.5 -0.090909,
 189  3.4.6 -0.181818,
 190  3.5.2  0.054545,
 191  3.5.3  0.109091,
 192  3.5.4 -0.163636,
 193  3.5.5 -0.454545,
 194  3.5.6 -0.309091,
 195  4.5.2 -0.036364,
 196  4.5.3 -0.072727,
 197  4.5.4  0.109091,
 198  4.5.5 -0.363636,
 199  4.5.6 -0.127273,
 200  4.6.2 -0.018182,
 201  4.6.3 -0.036364,
 202  4.6.4  0.054545,
 203  4.6.5 -0.181818,
 204  4.6.6 -0.563636,
 205  5.6.2  0.018182,
 206  5.6.3  0.036364,
 207  5.6.4 -0.054545,
 208  5.6.5  0.181818,
 209  5.6.6 -0.436364 /;
 210   
 211  *assign values to regulation market bid curve parameters
 212  cu(i,k) = gen_gamma(i,k)*c(i,k);
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               04/04/22 13:20:43 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 213  cd(i,k) = gen_gamma(i,k)*c(i,k);
 214  bu(i,l) = con_gamma(i,l)*b(i,l);
 215  bd(i,l) = con_gamma(i,l)*b(i,l);
 216   
 217  *define hybrid set
 218  hybrid_set(i) = no;
 219  loop ((i,j)$line(i,j),
 220  hybrid_set(i)$(nodal_set(i) and not nodal_set(j)) = yes;
 221  hybrid_set(j)$(nodal_set(j) and not nodal_set(i)) = yes;
 222      );
 223   
 224  *define nodal zone
 225  nodal_zone(z) = yes;
 226  loop(z,
 227           loop(i$zmem(i,z),
 228           if(not nodal_set(i),nodal_zone(z) = no);
 229           ););
 230   
 231  *zonal set is complement of nodal and hybrid set
 232  zonal_set(i) = not nodal_set(i) and not hybrid_set(i);
 233   
 234   
 235  *define hybrid interconnections
 236   
 237  *hybrid 2
 238  zconn_hybrid2(i,z)$(hybrid_set(i) and not nodal_zone(z)) = yes;
 239  *hybrid 3
 240  zconn_hybrid3(i,j)$(line(i,j) and ((nodal_set(i) and zonal_set(j)) or (nodal_set(j) and zonal_set(i)))) = yes;
 241   
 242  display zconn, zconn_hybrid2, zconn_hybrid3;
 243   
 244  positive variables
 245     qg(i,k) spot market generation quantity
 246     qug(i,k) upregulation generation quantity
 247     qdg(i,k) downregulation generation quantity
 248     qc(i,l) spot market consumption quantity
 249     quc(i,l) upregulation consumption quantity
 250     qdc(i,l) downregulation consumption quantity;
 251   
 252  variables
 253     q(i) net injection quantity
 254     q_imp(i,z) quantity imported into nodal pricing area from zonal area
 255     r(i) net injection quantity at a zonal node
 256     f(i,j) line flow
 257     theta(i) phase angle for node
 258     surplus total benefit minus total cost;
 259   
 260  equations
 261     tot_surplus definition of total surplus
 262     tot_surplus_seq definition of total surplus
 263     net_inj(i) net injection in every node
 264     net_inj_seq(i) net injection at nodal nodes
 265     net_inj_zonal(i) net injection at nodes in zones
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               04/04/22 13:20:43 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 266     net_inj_hybrid(i) net inject at hybrid nodes
 267     gcon_up upper bound on final generation
 268     gcon_lo lower bound on final generation
 269     ccon_up upper bound on final consumption
 270     ccon_lo lower bound on final consumption
 271     gcon_up_seq upper bound on final generation for the sequential model
 272     gcon_lo_seq lower bound on final generation for the sequential model
 273     ccon_up_seq upper bound on final consumption for the sequential model
 274     ccon_lo_seq lower bound on final consumption for the sequential model
 275     gen_redisp_down includes generation participating in downward regulation market
 276     gen_redisp_up   includes generation participating in upward regulation market
 277     con_redisp_down includes consumption participating in downward regulation market
 278     con_redisp_up   includes consumption participating in upward regulation market
 279     sum_NI sum of net injections
 280     sum_NI_seq sum of day ahead zonal line flows at a hybrid node
 281     aggr_net_export sets aggregate constraints between nodal and zonal areas
 282     ptdf_flow calculates physical flows over given line
 283     ptdf_flow_hybrid calculates physical flows over given line connected to hybrid node
 284     zflow(x) links zonal injections to zonal flows
 285     zflow_hybrid calculates zonal ptdf flows for zonal nodes
 286     kirch1 kirchhoffs current law for every node
 287     kirch2 kirchhoffs voltage law for every line
 288     fwd_lconstr forward capacity constraint for line
 289     bwd_lconstr backward capacity constraint for line
 290     fwd_lconstr_zonalsim forward capacity constraint for line
 291     bwd_lconstr_zonalsim backward capacity constraint for line
 292     fwd_zconstr forward capacity constraint for zonal interconnection
 293     bwd_zconstr backward capacity constraint for zonal interconnection
 294     fwd_zconstr_hybrid forward capacity constraint for zonal interconnection
 295     bwd_zconstr_hybrid backward capacity constraint for zonal interconnection
 296     fwd_zconstr_hybrid_2 forward capacity constraint between hybrid nodes and zone
 297     bwd_zconstr_hybrid_2 backward capacity constraint between hybrid nodes and zone
 298     fwd_zconstr_hybrid_3 forward line capacity constraint specific to hybrid nodes and zonal nodes
 299     bwd_zconstr_hybrid_3 backward line capacity constraint specific to hybrid nodes and zonal nodes
 300     fixed_flow_redisp(x,z) fixed flows between zones from zonal day ahead model;
 301   
 302  tot_surplus.. surplus =E=
 303     sum((i,l),
 304        a(i,l)*(qc(i,l) - quc(i,l) + qdc(i,l))
 305        -0.5*b(i,l)*(qc(i,l) - quc(i,l) + qdc(i,l))*(qc(i,l) - quc(i,l) + qdc(i,l))
 306        -0.5*(bu(i,l) - b(i,l))*quc(i,l)*quc(i,l)
 307        -0.5*(bd(i,l) - b(i,l))*qdc(i,l)*qdc(i,l))
 308     -sum((i,k),
 309        e(i,k)*(qg(i,k) + qug(i,k) - qdg(i,k))
 310        +0.5*c(i,k)*(qg(i,k) + qug(i,k) - qdg(i,k))*(qg(i,k) + qug(i,k) - qdg(i,k))
 311        +0.5*(cu(i,k) - c(i,k))*qug(i,k)*qug(i,k)
 312        +0.5*(cd(i,k) - c(i,k))*qdg(i,k)*qdg(i,k));
 313   
 314  tot_surplus_seq.. surplus =E=
 315     sum((i,l)$nodal_set(i),
 316        a(i,l)*(qc(i,l) - quc(i,l) + qdc(i,l))
 317        -0.5*b(i,l)*(qc(i,l) - quc(i,l) + qdc(i,l))*(qc(i,l) - quc(i,l) + qdc(i,l))
 318        -0.5*(bu(i,l) - b(i,l))*quc(i,l)*quc(i,l)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               04/04/22 13:20:43 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 319        -0.5*(bd(i,l) - b(i,l))*qdc(i,l)*qdc(i,l))
 320     -sum((i,k)$nodal_set(i),
 321        e(i,k)*(qg(i,k) + qug(i,k) - qdg(i,k))
 322        +0.5*c(i,k)*(qg(i,k) + qug(i,k) - qdg(i,k))*(qg(i,k) + qug(i,k) - qdg(i,k))
 323        +0.5*(cu(i,k) - c(i,k))*qug(i,k)*qug(i,k)
 324        +0.5*(cd(i,k) - c(i,k))*qdg(i,k)*qdg(i,k));
 325   
 326   
 327  gcon_up(i,k).. qg(i,k) + qug(i,k) - qdg(i,k) =L= gen_ub(i,k);
 328   
 329  gcon_lo(i,k).. qg(i,k) + qug(i,k) - qdg(i,k) =G= 0;
 330   
 331  ccon_up(i,l).. qc(i,l) - quc(i,l) + qdc(i,l) =L= con_ub(i,l);
 332   
 333  ccon_lo(i,l).. qc(i,l) - quc(i,l) + qdc(i,l) =G= 0;
 334   
 335  gcon_up_seq(i,k)$nodal_set(i).. qg(i,k) + qug(i,k) - qdg(i,k) =L= gen_ub(i,k);
 336   
 337  gcon_lo_seq(i,k)$nodal_set(i).. qg(i,k) + qug(i,k) - qdg(i,k) =G= 0;
 338   
 339  ccon_up_seq(i,l)$nodal_set(i).. qc(i,l) - quc(i,l) + qdc(i,l) =L= con_ub(i,l);
 340   
 341  ccon_lo_seq(i,l)$nodal_set(i).. qc(i,l) - quc(i,l) + qdc(i,l) =G= 0;
 342   
 343  gen_redisp_down(i,k)$(not gen_reg(i,k))..  qdg(i,k) =E= 0;
 344   
 345  gen_redisp_up(i,k)$(not gen_reg(i,k))..  qug(i,k) =E= 0;
 346   
 347  con_redisp_down(i,l)$(not con_reg(i,l))..  qdc(i,l) =E= 0;
 348   
 349  con_redisp_up(i,l)$(not con_reg(i,l))..  quc(i,l) =E= 0;
 350   
 351  *2d
 352  net_inj(i).. q(i) =E=
 353     sum(k, qg(i,k) + qug(i,k) - qdg(i,k))
 354     - sum(l, qc(i,l) - quc(i,l) + qdc(i,l));
 355   
 356  net_inj_seq(i)$(nodal_set(i)).. q(i) =E=
 357      sum(k, qg(i,k) + qug(i,k) - qdg(i,k))
 358      - sum(l, qc(i,l) - quc(i,l) + qdc(i,l));
 359  *2e
 360  sum_NI.. sum(i, q(i)) =E= 0;
 361   
 362  sum_NI_seq.. sum(i$nodal_set(i), q(i)) =E= sum(i$nodal_set(i),
 363      sum(j$(zonal_set(j) and line(i,j)), cflow(i,j,'zonal'))
 364     - sum(j$(zonal_set(j) and line(j,i)), cflow(j,i,'zonal')));
 365   
 366  aggr_net_export.. sum(i$nodal_set(i),
 367      sum(j$(zonal_set(j) and line(i,j)), f(i,j))
 368     - sum(j$(zonal_set(j) and line(j,i)), f(j,i)))
 369     =E=
 370     sum(i$nodal_set(i),
 371     sum(j$(zonal_set(j) and line(i,j)), cflow(i,j,'zonal'))
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               04/04/22 13:20:43 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 372     - sum(j$(zonal_set(j) and line(j,i)), cflow(j,i,'zonal')));
 373   
 374  ptdf_flow(i,j)$line(i,j).. f(i,j) =E= sum(jj, ptdf(i,j,jj)*q(jj));
 375   
 376  ptdf_flow_hybrid(i,j)$(line(i,j) and nodal_set(i) and nodal_set(j))..
 377  *ptdf_flow_hybrid(i,j)$(line(i,j) and (nodal_set(i) or nodal_set(j)))..
 378     f(i,j) =E= sum(jj$nodal_set(jj), ptdf(i,j,jj)*(q(jj)
 379     + sum((jjj)$(zonal_set(jjj) and line(jjj,jj)), f(jjj,jj))
 380     - sum((jjj)$(zonal_set(jjj) and line(jj,jjj)), f(jj,jjj))));
 381   
 382  fwd_lconstr(i,j)$line(i,j).. f(i,j) =L= lcap(i,j);
 383   
 384  bwd_lconstr(i,j)$line(i,j).. f(i,j) =G= - lcap(i,j);
 385   
 386  fwd_lconstr_zonalsim(i,j)$(line(i,j)and nodal_set(i) and nodal_set(j)).. f(i,j) =L= lcap(i,j);
 387   
 388  bwd_lconstr_zonalsim(i,j)$(line(i,j)and nodal_set(i) and nodal_set(j)).. f(i,j) =G= - lcap(i,j);
 389   
 390  *2f
 391  zflow(x).. sum(i$zmem(i,x), q(i)) =E=
 392   sum((i,j,z)$(line(i,j) and zmem(i,x) and zmem(j,z) and (x.val ne z.val)), f(i,j))
 393   - sum((j,i,z)$(line(j,i) and zmem(i,x) and zmem(j,z) and (x.val ne z.val)), f(j,i));
 394   
 395  fwd_zconstr(x,z)$zconn(x,z)..
 396     sum((i,j)$(line(i,j) and zmem(i,x) and zmem(j,z)), f(i,j))
 397     - sum((j,i)$(line(j,i) and zmem(i,x) and zmem(j,z)), f(j,i))
 398     =L= zcap(x,z,'fwd');
 399   
 400  bwd_zconstr(x,z)$zconn(x,z)..
 401     sum((i,j)$(line(i,j) and zmem(i,x) and zmem(j,z)), f(i,j))
 402     - sum((j,i)$(line(j,i) and zmem(i,x) and zmem(j,z)), f(j,i))
 403     =G= - zcap(x,z,'bwd');
 404   
 405  fwd_zconstr_hybrid_2(i,z)$zconn_hybrid2(i,z)..
 406     sum(j$(line(i,j) and zmem(j,z)), f(i,j))
 407     - sum(j$(line(j,i) and zmem(j,z)), f(j,i))
 408     =L= zcap_hybrid(i,z,'fwd');
 409   
 410  bwd_zconstr_hybrid_2(i,z)$zconn_hybrid2(i,z)..
 411     sum(j$(line(i,j) and zmem(j,z)), f(i,j))
 412     - sum(j$(line(j,i) and zmem(j,z)), f(j,i))
 413     =G= - zcap_hybrid(i,z,'bwd');
 414   
 415  fwd_zconstr_hybrid_3(i,j)$zconn_hybrid3(i,j)..
 416     f(i,j) =L= zcap_hybrid_3(i,j,'fwd');
 417   
 418  bwd_zconstr_hybrid_3(i,j)$zconn_hybrid3(i,j)..
 419     f(i,j) =G= - zcap_hybrid_3(i,j,'bwd');
 420   
 421  model zonal
 422      /tot_surplus, gcon_up, gcon_lo, ccon_up, ccon_lo,
 423      net_inj, sum_NI, zflow, fwd_zconstr, bwd_zconstr/;
 424   
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                               04/04/22 13:20:43 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 425  model zonal_sim1
 426      /tot_surplus, gcon_up, gcon_lo, ccon_up, ccon_lo,
 427      net_inj, sum_NI, zflow,
 428      ptdf_flow_hybrid,
 429      fwd_zconstr, bwd_zconstr,
 430      fwd_lconstr_zonalsim, bwd_lconstr_zonalsim/;
 431   
 432  model zonal_sim2
 433      /tot_surplus, gcon_up, gcon_lo, ccon_up, ccon_lo,
 434      net_inj, sum_NI, zflow,
 435      ptdf_flow_hybrid,
 436      fwd_zconstr_hybrid_2, bwd_zconstr_hybrid_2,
 437      fwd_lconstr_zonalsim, bwd_lconstr_zonalsim/;
 438   
 439  model zonal_sim3
 440      /tot_surplus, gcon_up, gcon_lo, ccon_up, ccon_lo,
 441      net_inj,sum_NI,zflow,
 442      ptdf_flow_hybrid,
 443      fwd_zconstr_hybrid_3, bwd_zconstr_hybrid_3,
 444      fwd_lconstr_zonalsim, bwd_lconstr_zonalsim/;
 445   
 446  model zonal_seq1
 447     /tot_surplus_seq, gcon_up_seq, gcon_lo_seq, ccon_up_seq, ccon_lo_seq,
 448     net_inj_seq,sum_NI_seq,
 449     ptdf_flow_hybrid,
 450     aggr_net_export,
 451     fwd_lconstr_zonalsim, bwd_lconstr_zonalsim/;
 452   
 453  model zonal_seq2
 454     /tot_surplus_seq, gcon_up_seq, gcon_lo_seq, ccon_up_seq, ccon_lo_seq,
 455     net_inj_seq,sum_NI_seq,
 456     ptdf_flow_hybrid,
 457     aggr_net_export,
 458     fwd_zconstr_hybrid_2, bwd_zconstr_hybrid_2,
 459     fwd_lconstr_zonalsim, bwd_lconstr_zonalsim/;
 460   
 461  model zonal_seq3
 462     /tot_surplus_seq, gcon_up_seq, gcon_lo_seq, ccon_up_seq, ccon_lo_seq,
 463     net_inj_seq,sum_NI_seq,
 464     ptdf_flow_hybrid,
 465     aggr_net_export,
 466     fwd_zconstr_hybrid_3, bwd_zconstr_hybrid_3,
 467     fwd_lconstr_zonalsim, bwd_lconstr_zonalsim/;
 468   
 469  model redispatch
 470     /tot_surplus, gcon_up, gcon_lo, ccon_up, ccon_lo,
 471     gen_redisp_down, gen_redisp_up, con_redisp_down, con_redisp_up,
 472     net_inj, sum_NI, ptdf_flow, fwd_lconstr, bwd_lconstr/;
 473   
 474  model unconstrained
 475     /tot_surplus, gcon_up, gcon_lo, ccon_up, ccon_lo,
 476     gen_redisp_down, gen_redisp_up, con_redisp_down, con_redisp_up,
 477     net_inj, sum_NI, ptdf_flow/;
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 10
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 478   
 479  *assigning some values to avoid error messages because some models have not been run yet
 480  net_inj_seq.m(i) = 0;
 481   
 482  * unconstrained model
 483  cur_case(case) = no;
 484  cur_case('unc') = yes;
 485  *regulation market quantities fixed to zero
 486  qug.fx(i,k) = 0;
 487  qdg.fx(i,k) = 0;
 488  quc.fx(i,l) = 0;
 489  qdc.fx(i,l) = 0;
 490  *calculate market solution
 491  solve unconstrained using nlp maximizing surplus;
 492  status('unc')= unconstrained.modelstat;
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
 494  *physical quantities
 495  generation(i,k,cur_case) = qg.l(i,k) + qug.l(i,k) - qdg.l(i,k);
 496  consumption(i,l,cur_case) = qc.l(i,l) - quc.l(i,l) + qdc.l(i,l);
 497  net_inj_store(i,cur_case) = sum(k,generation(i,k,cur_case))-sum(l,consumption(i,l,cur_case));
 498   
 499  *commercial flow
 500  cflow(i,j,cur_case)$line(i,j) = f.l(i,j);
 501   
 502  *physical flow
 503  pflow(i,j,cur_case)$line(i,j) = sum(jj, ptdf(i,j,jj)*net_inj_store(jj,cur_case));
 504   
 505  *store prices
 506  price(i,cur_case)$(not DA_seq(cur_case)) = net_inj.m(i);
 507  price(i,cur_case)$(DA_seq(cur_case) and zonal_set(i)) = price(i,'zonal');
 508  price(i,cur_case)$(DA_seq(cur_case) and nodal_set(i)) = net_inj_seq.m(i);
 509   
 510  *cost for individual generators
 511  cost(i,k,cur_case) =
 512     (e(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
 513     +0.5*c(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
 514     +0.5*(cu(i,k) - c(i,k))*qug.l(i,k)*qug.l(i,k)
 515     +0.5*(cd(i,k) - c(i,k))*qdg.l(i,k)*qdg.l(i,k));
 516   
 517  *benefit for individual consumers
 518  benefit(i,l,cur_case) =
 519     (a(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
 520     -0.5*b(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
 521     -0.5*(bu(i,l) - b(i,l))*quc.l(i,l)*quc.l(i,l)
 522     -0.5*(bd(i,l) - b(i,l))*qdc.l(i,l)*qdc.l(i,l));
 523   
 524  *payments
 525  *a positive payment is equivalent to a payment from the system operator to generators/consumers
 526  paym_gen(i,k,cur_case)$(not RT(cur_case)) = qg.l(i,k)*price(i,cur_case);
 527  paym_con(i,l,cur_case)$(not RT(cur_case)) = -qc.l(i,l)*price(i,cur_case);
 528   
 529  paym_gen(i,k,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_gen(i,k,ccase))
 530          + (qug.l(i,k) - qdg.l(i,k))*price(i,cur_case);
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 11
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 531  paym_con(i,l,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_con(i,l,ccase))
 532          + (quc.l(i,l) - qdc.l(i,l))*price(i,cur_case);
 533   
 534  *summing payments
 535  paym_tot('gen',cur_case) = sum((i,k), paym_gen(i,k,cur_case));
 536  paym_tot('con',cur_case) = sum((i,l), paym_con(i,l,cur_case));
 537  paym_tot('grid',cur_case) = paym_tot('gen',cur_case) + paym_tot('con',cur_case);
 538   
 539  *computing surpluses
 540  surpl_gen(i,k,cur_case) = paym_gen(i,k,cur_case) - cost(i,k,cur_case);
 541  surpl_con(i,l,cur_case) = benefit(i,l,cur_case) + paym_con(i,l,cur_case);
 542  surpl_tot('gen',cur_case) = sum((i,k), surpl_gen(i,k,cur_case));
 543  surpl_tot('con',cur_case) = sum((i,l), surpl_con(i,l,cur_case));
 544  surpl_tot('grid',cur_case) = -paym_tot('grid',cur_case);
 545  surpl_tot('tot',cur_case) = surpl_tot('gen',cur_case)
 546                              + surpl_tot('con',cur_case) + surpl_tot('grid',cur_case);
 547   
 548   
 549   
 550   
 551   
 552  * day-ahead market with nodal pricing
 553  cur_case(case) = no;
 554  cur_case('nodal') = yes;
 555  *regulation market quantities fixed to zero
 556  qug.fx(i,k) = 0;
 557  qdg.fx(i,k) = 0;
 558  quc.fx(i,l) = 0;
 559  qdc.fx(i,l) = 0;
 560  *calculate market solution
 561  solve redispatch using nlp maximizing surplus;
 562  status('nodal')= redispatch.modelstat;
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
 564  *physical quantities
 565  generation(i,k,cur_case) = qg.l(i,k) + qug.l(i,k) - qdg.l(i,k);
 566  consumption(i,l,cur_case) = qc.l(i,l) - quc.l(i,l) + qdc.l(i,l);
 567  net_inj_store(i,cur_case) = sum(k,generation(i,k,cur_case))-sum(l,consumption(i,l,cur_case));
 568   
 569  *commercial flow
 570  cflow(i,j,cur_case)$line(i,j) = f.l(i,j);
 571   
 572  *physical flow
 573  pflow(i,j,cur_case)$line(i,j) = sum(jj, ptdf(i,j,jj)*net_inj_store(jj,cur_case));
 574   
 575  *store prices
 576  price(i,cur_case)$(not DA_seq(cur_case)) = net_inj.m(i);
 577  price(i,cur_case)$(DA_seq(cur_case) and zonal_set(i)) = price(i,'zonal');
 578  price(i,cur_case)$(DA_seq(cur_case) and nodal_set(i)) = net_inj_seq.m(i);
 579   
 580  *cost for individual generators
 581  cost(i,k,cur_case) =
 582     (e(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
 583     +0.5*c(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 12
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 584     +0.5*(cu(i,k) - c(i,k))*qug.l(i,k)*qug.l(i,k)
 585     +0.5*(cd(i,k) - c(i,k))*qdg.l(i,k)*qdg.l(i,k));
 586   
 587  *benefit for individual consumers
 588  benefit(i,l,cur_case) =
 589     (a(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
 590     -0.5*b(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
 591     -0.5*(bu(i,l) - b(i,l))*quc.l(i,l)*quc.l(i,l)
 592     -0.5*(bd(i,l) - b(i,l))*qdc.l(i,l)*qdc.l(i,l));
 593   
 594  *payments
 595  *a positive payment is equivalent to a payment from the system operator to generators/consumers
 596  paym_gen(i,k,cur_case)$(not RT(cur_case)) = qg.l(i,k)*price(i,cur_case);
 597  paym_con(i,l,cur_case)$(not RT(cur_case)) = -qc.l(i,l)*price(i,cur_case);
 598   
 599  paym_gen(i,k,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_gen(i,k,ccase))
 600          + (qug.l(i,k) - qdg.l(i,k))*price(i,cur_case);
 601  paym_con(i,l,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_con(i,l,ccase))
 602          + (quc.l(i,l) - qdc.l(i,l))*price(i,cur_case);
 603   
 604  *summing payments
 605  paym_tot('gen',cur_case) = sum((i,k), paym_gen(i,k,cur_case));
 606  paym_tot('con',cur_case) = sum((i,l), paym_con(i,l,cur_case));
 607  paym_tot('grid',cur_case) = paym_tot('gen',cur_case) + paym_tot('con',cur_case);
 608   
 609  *computing surpluses
 610  surpl_gen(i,k,cur_case) = paym_gen(i,k,cur_case) - cost(i,k,cur_case);
 611  surpl_con(i,l,cur_case) = benefit(i,l,cur_case) + paym_con(i,l,cur_case);
 612  surpl_tot('gen',cur_case) = sum((i,k), surpl_gen(i,k,cur_case));
 613  surpl_tot('con',cur_case) = sum((i,l), surpl_con(i,l,cur_case));
 614  surpl_tot('grid',cur_case) = -paym_tot('grid',cur_case);
 615  surpl_tot('tot',cur_case) = surpl_tot('gen',cur_case)
 616                              + surpl_tot('con',cur_case) + surpl_tot('grid',cur_case);
 617   
 618   
 619   
 620   
 621   
 622   
 623  *setting zonal interconnection capacities
 624  *zcap(x,z,'fwd')$zconn(x,z) = sum((i,j)$(line(i,j) and zmem(i,x) and zmem(j,z)), lcap(i,j))
 625  *               + sum((j,i)$(line(j,i) and zmem(i,x) and zmem(j,z)), lcap(i,j));
 626  zcap(x,z,'fwd')$zconn(x,z) = 300;
 627  zcap(x,z,'bwd')$zconn(x,z) = zcap(x,z,'fwd');
 628   
 629  zcap_hybrid(i,z,'fwd') = sum(j$(line(i,j) and zmem(j,z)), lcap(i,j))
 630  + sum(j$(line(j,i) and zmem(j,z)), lcap(j,i));
 631  zcap_hybrid(i,z,'bwd') = zcap_hybrid(i,z,'fwd');
 632   
 633  zcap_hybrid_3(i,j,'fwd') = lcap(i,j);
 634  zcap_hybrid_3(i,j,'bwd') = zcap_hybrid_3(i,j,'fwd');
 635   
 636  * day-ahead market with zonal pricing a la NordPool
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 13
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 637  cur_case(case) = no;
 638  cur_case('zonal') = yes;
 639  *regulation market quantities fixed to zero
 640  qug.fx(i,k) = 0;
 641  qdg.fx(i,k) = 0;
 642  quc.fx(i,l) = 0;
 643  qdc.fx(i,l) = 0;
 644  *calculate market solution
 645  solve zonal using nlp maximizing surplus;
 646  status('zonal')= zonal.modelstat;
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
 648  *physical quantities
 649  generation(i,k,cur_case) = qg.l(i,k) + qug.l(i,k) - qdg.l(i,k);
 650  consumption(i,l,cur_case) = qc.l(i,l) - quc.l(i,l) + qdc.l(i,l);
 651  net_inj_store(i,cur_case) = sum(k,generation(i,k,cur_case))-sum(l,consumption(i,l,cur_case));
 652   
 653  *commercial flow
 654  cflow(i,j,cur_case)$line(i,j) = f.l(i,j);
 655   
 656  *physical flow
 657  pflow(i,j,cur_case)$line(i,j) = sum(jj, ptdf(i,j,jj)*net_inj_store(jj,cur_case));
 658   
 659  *store prices
 660  price(i,cur_case)$(not DA_seq(cur_case)) = net_inj.m(i);
 661  price(i,cur_case)$(DA_seq(cur_case) and zonal_set(i)) = price(i,'zonal');
 662  price(i,cur_case)$(DA_seq(cur_case) and nodal_set(i)) = net_inj_seq.m(i);
 663   
 664  *cost for individual generators
 665  cost(i,k,cur_case) =
 666     (e(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
 667     +0.5*c(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
 668     +0.5*(cu(i,k) - c(i,k))*qug.l(i,k)*qug.l(i,k)
 669     +0.5*(cd(i,k) - c(i,k))*qdg.l(i,k)*qdg.l(i,k));
 670   
 671  *benefit for individual consumers
 672  benefit(i,l,cur_case) =
 673     (a(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
 674     -0.5*b(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
 675     -0.5*(bu(i,l) - b(i,l))*quc.l(i,l)*quc.l(i,l)
 676     -0.5*(bd(i,l) - b(i,l))*qdc.l(i,l)*qdc.l(i,l));
 677   
 678  *payments
 679  *a positive payment is equivalent to a payment from the system operator to generators/consumers
 680  paym_gen(i,k,cur_case)$(not RT(cur_case)) = qg.l(i,k)*price(i,cur_case);
 681  paym_con(i,l,cur_case)$(not RT(cur_case)) = -qc.l(i,l)*price(i,cur_case);
 682   
 683  paym_gen(i,k,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_gen(i,k,ccase))
 684          + (qug.l(i,k) - qdg.l(i,k))*price(i,cur_case);
 685  paym_con(i,l,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_con(i,l,ccase))
 686          + (quc.l(i,l) - qdc.l(i,l))*price(i,cur_case);
 687   
 688  *summing payments
 689  paym_tot('gen',cur_case) = sum((i,k), paym_gen(i,k,cur_case));
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 14
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 690  paym_tot('con',cur_case) = sum((i,l), paym_con(i,l,cur_case));
 691  paym_tot('grid',cur_case) = paym_tot('gen',cur_case) + paym_tot('con',cur_case);
 692   
 693  *computing surpluses
 694  surpl_gen(i,k,cur_case) = paym_gen(i,k,cur_case) - cost(i,k,cur_case);
 695  surpl_con(i,l,cur_case) = benefit(i,l,cur_case) + paym_con(i,l,cur_case);
 696  surpl_tot('gen',cur_case) = sum((i,k), surpl_gen(i,k,cur_case));
 697  surpl_tot('con',cur_case) = sum((i,l), surpl_con(i,l,cur_case));
 698  surpl_tot('grid',cur_case) = -paym_tot('grid',cur_case);
 699  surpl_tot('tot',cur_case) = surpl_tot('gen',cur_case)
 700                              + surpl_tot('con',cur_case) + surpl_tot('grid',cur_case);
 701   
 702   
 703   
 704   
 705   
 706  *redispatch market
 707  cur_case(case) = no;
 708  cur_case('redispatch') = yes;
 709  *fix DA market quantities
 710  qg.fx(i,k) = qg.l(i,k);
 711  qc.fx(i,l) = qc.l(i,l);
 712  *unfix regulation market quantities for
 713  *for participating generators and consumers
 714  qug.lo(i,k) = 0;
 715  qdg.lo(i,k) = 0;
 716  quc.lo(i,l) = 0;
 717  qdc.lo(i,l) = 0;
 718  qug.up(i,k) = inf;
 719  qdg.up(i,k) = inf;
 720  quc.up(i,l) = inf;
 721  qdc.up(i,l) = inf;
 722  *calculate market solution
 723  solve redispatch using nlp maximizing surplus;
 724  status('redispatch')= redispatch.modelstat;
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
 726  *physical quantities
 727  generation(i,k,cur_case) = qg.l(i,k) + qug.l(i,k) - qdg.l(i,k);
 728  consumption(i,l,cur_case) = qc.l(i,l) - quc.l(i,l) + qdc.l(i,l);
 729  net_inj_store(i,cur_case) = sum(k,generation(i,k,cur_case))-sum(l,consumption(i,l,cur_case));
 730   
 731  *commercial flow
 732  cflow(i,j,cur_case)$line(i,j) = f.l(i,j);
 733   
 734  *physical flow
 735  pflow(i,j,cur_case)$line(i,j) = sum(jj, ptdf(i,j,jj)*net_inj_store(jj,cur_case));
 736   
 737  *store prices
 738  price(i,cur_case)$(not DA_seq(cur_case)) = net_inj.m(i);
 739  price(i,cur_case)$(DA_seq(cur_case) and zonal_set(i)) = price(i,'zonal');
 740  price(i,cur_case)$(DA_seq(cur_case) and nodal_set(i)) = net_inj_seq.m(i);
 741   
 742  *cost for individual generators
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 15
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 743  cost(i,k,cur_case) =
 744     (e(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
 745     +0.5*c(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
 746     +0.5*(cu(i,k) - c(i,k))*qug.l(i,k)*qug.l(i,k)
 747     +0.5*(cd(i,k) - c(i,k))*qdg.l(i,k)*qdg.l(i,k));
 748   
 749  *benefit for individual consumers
 750  benefit(i,l,cur_case) =
 751     (a(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
 752     -0.5*b(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
 753     -0.5*(bu(i,l) - b(i,l))*quc.l(i,l)*quc.l(i,l)
 754     -0.5*(bd(i,l) - b(i,l))*qdc.l(i,l)*qdc.l(i,l));
 755   
 756  *payments
 757  *a positive payment is equivalent to a payment from the system operator to generators/consumers
 758  paym_gen(i,k,cur_case)$(not RT(cur_case)) = qg.l(i,k)*price(i,cur_case);
 759  paym_con(i,l,cur_case)$(not RT(cur_case)) = -qc.l(i,l)*price(i,cur_case);
 760   
 761  paym_gen(i,k,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_gen(i,k,ccase))
 762          + (qug.l(i,k) - qdg.l(i,k))*price(i,cur_case);
 763  paym_con(i,l,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_con(i,l,ccase))
 764          + (quc.l(i,l) - qdc.l(i,l))*price(i,cur_case);
 765   
 766  *summing payments
 767  paym_tot('gen',cur_case) = sum((i,k), paym_gen(i,k,cur_case));
 768  paym_tot('con',cur_case) = sum((i,l), paym_con(i,l,cur_case));
 769  paym_tot('grid',cur_case) = paym_tot('gen',cur_case) + paym_tot('con',cur_case);
 770   
 771  *computing surpluses
 772  surpl_gen(i,k,cur_case) = paym_gen(i,k,cur_case) - cost(i,k,cur_case);
 773  surpl_con(i,l,cur_case) = benefit(i,l,cur_case) + paym_con(i,l,cur_case);
 774  surpl_tot('gen',cur_case) = sum((i,k), surpl_gen(i,k,cur_case));
 775  surpl_tot('con',cur_case) = sum((i,l), surpl_con(i,l,cur_case));
 776  surpl_tot('grid',cur_case) = -paym_tot('grid',cur_case);
 777  surpl_tot('tot',cur_case) = surpl_tot('gen',cur_case)
 778                              + surpl_tot('con',cur_case) + surpl_tot('grid',cur_case);
 779   
 780   
 781   
 782   
 783   
 784   
 785  * First Version of Simultaneous Hybrid Model - Day Ahead Market
 786  cur_case(case) = no;
 787  cur_case('zonal_sim1') = yes;
 788  *unfix DA market quantities
 789  qg.lo(i,k) = 0;
 790  qc.lo(i,l) = 0;
 791  qg.up(i,k) = inf;
 792  qc.up(i,l) = inf;
 793  *regulation market quantities fixed to zero
 794  qug.fx(i,k) = 0;
 795  qdg.fx(i,k) = 0;
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 16
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 796  quc.fx(i,l) = 0;
 797  qdc.fx(i,l) = 0;
 798  *calculate market solution
 799  solve zonal_sim1 using nlp maximizing surplus;
 800  status('zonal_sim1')= zonal_sim1.modelstat;
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
 802  *physical quantities
 803  generation(i,k,cur_case) = qg.l(i,k) + qug.l(i,k) - qdg.l(i,k);
 804  consumption(i,l,cur_case) = qc.l(i,l) - quc.l(i,l) + qdc.l(i,l);
 805  net_inj_store(i,cur_case) = sum(k,generation(i,k,cur_case))-sum(l,consumption(i,l,cur_case));
 806   
 807  *commercial flow
 808  cflow(i,j,cur_case)$line(i,j) = f.l(i,j);
 809   
 810  *physical flow
 811  pflow(i,j,cur_case)$line(i,j) = sum(jj, ptdf(i,j,jj)*net_inj_store(jj,cur_case));
 812   
 813  *store prices
 814  price(i,cur_case)$(not DA_seq(cur_case)) = net_inj.m(i);
 815  price(i,cur_case)$(DA_seq(cur_case) and zonal_set(i)) = price(i,'zonal');
 816  price(i,cur_case)$(DA_seq(cur_case) and nodal_set(i)) = net_inj_seq.m(i);
 817   
 818  *cost for individual generators
 819  cost(i,k,cur_case) =
 820     (e(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
 821     +0.5*c(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
 822     +0.5*(cu(i,k) - c(i,k))*qug.l(i,k)*qug.l(i,k)
 823     +0.5*(cd(i,k) - c(i,k))*qdg.l(i,k)*qdg.l(i,k));
 824   
 825  *benefit for individual consumers
 826  benefit(i,l,cur_case) =
 827     (a(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
 828     -0.5*b(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
 829     -0.5*(bu(i,l) - b(i,l))*quc.l(i,l)*quc.l(i,l)
 830     -0.5*(bd(i,l) - b(i,l))*qdc.l(i,l)*qdc.l(i,l));
 831   
 832  *payments
 833  *a positive payment is equivalent to a payment from the system operator to generators/consumers
 834  paym_gen(i,k,cur_case)$(not RT(cur_case)) = qg.l(i,k)*price(i,cur_case);
 835  paym_con(i,l,cur_case)$(not RT(cur_case)) = -qc.l(i,l)*price(i,cur_case);
 836   
 837  paym_gen(i,k,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_gen(i,k,ccase))
 838          + (qug.l(i,k) - qdg.l(i,k))*price(i,cur_case);
 839  paym_con(i,l,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_con(i,l,ccase))
 840          + (quc.l(i,l) - qdc.l(i,l))*price(i,cur_case);
 841   
 842  *summing payments
 843  paym_tot('gen',cur_case) = sum((i,k), paym_gen(i,k,cur_case));
 844  paym_tot('con',cur_case) = sum((i,l), paym_con(i,l,cur_case));
 845  paym_tot('grid',cur_case) = paym_tot('gen',cur_case) + paym_tot('con',cur_case);
 846   
 847  *computing surpluses
 848  surpl_gen(i,k,cur_case) = paym_gen(i,k,cur_case) - cost(i,k,cur_case);
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 17
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 849  surpl_con(i,l,cur_case) = benefit(i,l,cur_case) + paym_con(i,l,cur_case);
 850  surpl_tot('gen',cur_case) = sum((i,k), surpl_gen(i,k,cur_case));
 851  surpl_tot('con',cur_case) = sum((i,l), surpl_con(i,l,cur_case));
 852  surpl_tot('grid',cur_case) = -paym_tot('grid',cur_case);
 853  surpl_tot('tot',cur_case) = surpl_tot('gen',cur_case)
 854                              + surpl_tot('con',cur_case) + surpl_tot('grid',cur_case);
 855   
 856   
 857   
 858   
 859   
 860  *redispatch market
 861  cur_case(case) = no;
 862  cur_case('redispatch_sim1') = yes;
 863  *fix DA market quantities
 864  qg.fx(i,k) = qg.l(i,k);
 865  qc.fx(i,l) = qc.l(i,l);
 866  *unfix regulation market quantities for
 867  *for participating generators and consumers
 868  qug.lo(i,k) = 0;
 869  qdg.lo(i,k) = 0;
 870  quc.lo(i,l) = 0;
 871  qdc.lo(i,l) = 0;
 872  qug.up(i,k) = inf;
 873  qdg.up(i,k) = inf;
 874  quc.up(i,l) = inf;
 875  qdc.up(i,l) = inf;
 876  *calculate market solution
 877  solve redispatch using nlp maximizing surplus;
 878  status('redispatch_sim1')= redispatch.modelstat;
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
 880  *physical quantities
 881  generation(i,k,cur_case) = qg.l(i,k) + qug.l(i,k) - qdg.l(i,k);
 882  consumption(i,l,cur_case) = qc.l(i,l) - quc.l(i,l) + qdc.l(i,l);
 883  net_inj_store(i,cur_case) = sum(k,generation(i,k,cur_case))-sum(l,consumption(i,l,cur_case));
 884   
 885  *commercial flow
 886  cflow(i,j,cur_case)$line(i,j) = f.l(i,j);
 887   
 888  *physical flow
 889  pflow(i,j,cur_case)$line(i,j) = sum(jj, ptdf(i,j,jj)*net_inj_store(jj,cur_case));
 890   
 891  *store prices
 892  price(i,cur_case)$(not DA_seq(cur_case)) = net_inj.m(i);
 893  price(i,cur_case)$(DA_seq(cur_case) and zonal_set(i)) = price(i,'zonal');
 894  price(i,cur_case)$(DA_seq(cur_case) and nodal_set(i)) = net_inj_seq.m(i);
 895   
 896  *cost for individual generators
 897  cost(i,k,cur_case) =
 898     (e(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
 899     +0.5*c(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
 900     +0.5*(cu(i,k) - c(i,k))*qug.l(i,k)*qug.l(i,k)
 901     +0.5*(cd(i,k) - c(i,k))*qdg.l(i,k)*qdg.l(i,k));
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 18
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 902   
 903  *benefit for individual consumers
 904  benefit(i,l,cur_case) =
 905     (a(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
 906     -0.5*b(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
 907     -0.5*(bu(i,l) - b(i,l))*quc.l(i,l)*quc.l(i,l)
 908     -0.5*(bd(i,l) - b(i,l))*qdc.l(i,l)*qdc.l(i,l));
 909   
 910  *payments
 911  *a positive payment is equivalent to a payment from the system operator to generators/consumers
 912  paym_gen(i,k,cur_case)$(not RT(cur_case)) = qg.l(i,k)*price(i,cur_case);
 913  paym_con(i,l,cur_case)$(not RT(cur_case)) = -qc.l(i,l)*price(i,cur_case);
 914   
 915  paym_gen(i,k,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_gen(i,k,ccase))
 916          + (qug.l(i,k) - qdg.l(i,k))*price(i,cur_case);
 917  paym_con(i,l,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_con(i,l,ccase))
 918          + (quc.l(i,l) - qdc.l(i,l))*price(i,cur_case);
 919   
 920  *summing payments
 921  paym_tot('gen',cur_case) = sum((i,k), paym_gen(i,k,cur_case));
 922  paym_tot('con',cur_case) = sum((i,l), paym_con(i,l,cur_case));
 923  paym_tot('grid',cur_case) = paym_tot('gen',cur_case) + paym_tot('con',cur_case);
 924   
 925  *computing surpluses
 926  surpl_gen(i,k,cur_case) = paym_gen(i,k,cur_case) - cost(i,k,cur_case);
 927  surpl_con(i,l,cur_case) = benefit(i,l,cur_case) + paym_con(i,l,cur_case);
 928  surpl_tot('gen',cur_case) = sum((i,k), surpl_gen(i,k,cur_case));
 929  surpl_tot('con',cur_case) = sum((i,l), surpl_con(i,l,cur_case));
 930  surpl_tot('grid',cur_case) = -paym_tot('grid',cur_case);
 931  surpl_tot('tot',cur_case) = surpl_tot('gen',cur_case)
 932                              + surpl_tot('con',cur_case) + surpl_tot('grid',cur_case);
 933   
 934   
 935   
 936   
 937   
 938  * Second Version of Simultaneous Hybrid Model - Day Ahead Market
 939  cur_case(case) = no;
 940  cur_case('zonal_sim2') = yes;
 941  *unfix DA market quantities
 942  qg.lo(i,k) = 0;
 943  qc.lo(i,l) = 0;
 944  qg.up(i,k) = inf;
 945  qc.up(i,l) = inf;
 946  *regulation market quantities fixed to zero
 947  qug.fx(i,k) = 0;
 948  qdg.fx(i,k) = 0;
 949  quc.fx(i,l) = 0;
 950  qdc.fx(i,l) = 0;
 951  *calculate market solution
 952  display zcap_hybrid;
 953  solve zonal_sim2 using nlp maximizing surplus;
 954  status('zonal_sim2')= zonal_sim2.modelstat;
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 19
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
 956  *physical quantities
 957  generation(i,k,cur_case) = qg.l(i,k) + qug.l(i,k) - qdg.l(i,k);
 958  consumption(i,l,cur_case) = qc.l(i,l) - quc.l(i,l) + qdc.l(i,l);
 959  net_inj_store(i,cur_case) = sum(k,generation(i,k,cur_case))-sum(l,consumption(i,l,cur_case));
 960   
 961  *commercial flow
 962  cflow(i,j,cur_case)$line(i,j) = f.l(i,j);
 963   
 964  *physical flow
 965  pflow(i,j,cur_case)$line(i,j) = sum(jj, ptdf(i,j,jj)*net_inj_store(jj,cur_case));
 966   
 967  *store prices
 968  price(i,cur_case)$(not DA_seq(cur_case)) = net_inj.m(i);
 969  price(i,cur_case)$(DA_seq(cur_case) and zonal_set(i)) = price(i,'zonal');
 970  price(i,cur_case)$(DA_seq(cur_case) and nodal_set(i)) = net_inj_seq.m(i);
 971   
 972  *cost for individual generators
 973  cost(i,k,cur_case) =
 974     (e(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
 975     +0.5*c(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
 976     +0.5*(cu(i,k) - c(i,k))*qug.l(i,k)*qug.l(i,k)
 977     +0.5*(cd(i,k) - c(i,k))*qdg.l(i,k)*qdg.l(i,k));
 978   
 979  *benefit for individual consumers
 980  benefit(i,l,cur_case) =
 981     (a(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
 982     -0.5*b(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
 983     -0.5*(bu(i,l) - b(i,l))*quc.l(i,l)*quc.l(i,l)
 984     -0.5*(bd(i,l) - b(i,l))*qdc.l(i,l)*qdc.l(i,l));
 985   
 986  *payments
 987  *a positive payment is equivalent to a payment from the system operator to generators/consumers
 988  paym_gen(i,k,cur_case)$(not RT(cur_case)) = qg.l(i,k)*price(i,cur_case);
 989  paym_con(i,l,cur_case)$(not RT(cur_case)) = -qc.l(i,l)*price(i,cur_case);
 990   
 991  paym_gen(i,k,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_gen(i,k,ccase))
 992          + (qug.l(i,k) - qdg.l(i,k))*price(i,cur_case);
 993  paym_con(i,l,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_con(i,l,ccase))
 994          + (quc.l(i,l) - qdc.l(i,l))*price(i,cur_case);
 995   
 996  *summing payments
 997  paym_tot('gen',cur_case) = sum((i,k), paym_gen(i,k,cur_case));
 998  paym_tot('con',cur_case) = sum((i,l), paym_con(i,l,cur_case));
 999  paym_tot('grid',cur_case) = paym_tot('gen',cur_case) + paym_tot('con',cur_case);
1000   
1001  *computing surpluses
1002  surpl_gen(i,k,cur_case) = paym_gen(i,k,cur_case) - cost(i,k,cur_case);
1003  surpl_con(i,l,cur_case) = benefit(i,l,cur_case) + paym_con(i,l,cur_case);
1004  surpl_tot('gen',cur_case) = sum((i,k), surpl_gen(i,k,cur_case));
1005  surpl_tot('con',cur_case) = sum((i,l), surpl_con(i,l,cur_case));
1006  surpl_tot('grid',cur_case) = -paym_tot('grid',cur_case);
1007  surpl_tot('tot',cur_case) = surpl_tot('gen',cur_case)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 20
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1008                              + surpl_tot('con',cur_case) + surpl_tot('grid',cur_case);
1009   
1010   
1011   
1012   
1013   
1014  *redispatch market
1015  cur_case(case) = no;
1016  cur_case('redispatch_sim2') = yes;
1017  *fix DA market quantities
1018  qg.fx(i,k) = qg.l(i,k);
1019  qc.fx(i,l) = qc.l(i,l);
1020  *unfix regulation market quantities for
1021  *for participating generators and consumers
1022  qug.lo(i,k) = 0;
1023  qdg.lo(i,k) = 0;
1024  quc.lo(i,l) = 0;
1025  qdc.lo(i,l) = 0;
1026  qug.up(i,k) = inf;
1027  qdg.up(i,k) = inf;
1028  quc.up(i,l) = inf;
1029  qdc.up(i,l) = inf;
1030  *calculate market solution
1031  solve redispatch using nlp maximizing surplus;
1032  status('redispatch_sim2')= redispatch.modelstat;
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
1034  *physical quantities
1035  generation(i,k,cur_case) = qg.l(i,k) + qug.l(i,k) - qdg.l(i,k);
1036  consumption(i,l,cur_case) = qc.l(i,l) - quc.l(i,l) + qdc.l(i,l);
1037  net_inj_store(i,cur_case) = sum(k,generation(i,k,cur_case))-sum(l,consumption(i,l,cur_case));
1038   
1039  *commercial flow
1040  cflow(i,j,cur_case)$line(i,j) = f.l(i,j);
1041   
1042  *physical flow
1043  pflow(i,j,cur_case)$line(i,j) = sum(jj, ptdf(i,j,jj)*net_inj_store(jj,cur_case));
1044   
1045  *store prices
1046  price(i,cur_case)$(not DA_seq(cur_case)) = net_inj.m(i);
1047  price(i,cur_case)$(DA_seq(cur_case) and zonal_set(i)) = price(i,'zonal');
1048  price(i,cur_case)$(DA_seq(cur_case) and nodal_set(i)) = net_inj_seq.m(i);
1049   
1050  *cost for individual generators
1051  cost(i,k,cur_case) =
1052     (e(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1053     +0.5*c(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1054     +0.5*(cu(i,k) - c(i,k))*qug.l(i,k)*qug.l(i,k)
1055     +0.5*(cd(i,k) - c(i,k))*qdg.l(i,k)*qdg.l(i,k));
1056   
1057  *benefit for individual consumers
1058  benefit(i,l,cur_case) =
1059     (a(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1060     -0.5*b(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 21
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1061     -0.5*(bu(i,l) - b(i,l))*quc.l(i,l)*quc.l(i,l)
1062     -0.5*(bd(i,l) - b(i,l))*qdc.l(i,l)*qdc.l(i,l));
1063   
1064  *payments
1065  *a positive payment is equivalent to a payment from the system operator to generators/consumers
1066  paym_gen(i,k,cur_case)$(not RT(cur_case)) = qg.l(i,k)*price(i,cur_case);
1067  paym_con(i,l,cur_case)$(not RT(cur_case)) = -qc.l(i,l)*price(i,cur_case);
1068   
1069  paym_gen(i,k,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_gen(i,k,ccase))
1070          + (qug.l(i,k) - qdg.l(i,k))*price(i,cur_case);
1071  paym_con(i,l,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_con(i,l,ccase))
1072          + (quc.l(i,l) - qdc.l(i,l))*price(i,cur_case);
1073   
1074  *summing payments
1075  paym_tot('gen',cur_case) = sum((i,k), paym_gen(i,k,cur_case));
1076  paym_tot('con',cur_case) = sum((i,l), paym_con(i,l,cur_case));
1077  paym_tot('grid',cur_case) = paym_tot('gen',cur_case) + paym_tot('con',cur_case);
1078   
1079  *computing surpluses
1080  surpl_gen(i,k,cur_case) = paym_gen(i,k,cur_case) - cost(i,k,cur_case);
1081  surpl_con(i,l,cur_case) = benefit(i,l,cur_case) + paym_con(i,l,cur_case);
1082  surpl_tot('gen',cur_case) = sum((i,k), surpl_gen(i,k,cur_case));
1083  surpl_tot('con',cur_case) = sum((i,l), surpl_con(i,l,cur_case));
1084  surpl_tot('grid',cur_case) = -paym_tot('grid',cur_case);
1085  surpl_tot('tot',cur_case) = surpl_tot('gen',cur_case)
1086                              + surpl_tot('con',cur_case) + surpl_tot('grid',cur_case);
1087   
1088   
1089   
1090   
1091   
1092  * Third Version of Simultaneous Hybrid Model - Day Ahead Market
1093  cur_case(case) = no;
1094  cur_case('zonal_sim3') = yes;
1095  *unfix DA market quantities
1096  qg.lo(i,k) = 0;
1097  qc.lo(i,l) = 0;
1098  qg.up(i,k) = inf;
1099  qc.up(i,l) = inf;
1100  *regulation market quantities fixed to zero
1101  qug.fx(i,k) = 0;
1102  qdg.fx(i,k) = 0;
1103  quc.fx(i,l) = 0;
1104  qdc.fx(i,l) = 0;
1105  *calculate market solution
1106  solve zonal_sim3 using nlp maximizing surplus;
1107  status('zonal_sim3')= zonal_sim3.modelstat;
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
1109  *physical quantities
1110  generation(i,k,cur_case) = qg.l(i,k) + qug.l(i,k) - qdg.l(i,k);
1111  consumption(i,l,cur_case) = qc.l(i,l) - quc.l(i,l) + qdc.l(i,l);
1112  net_inj_store(i,cur_case) = sum(k,generation(i,k,cur_case))-sum(l,consumption(i,l,cur_case));
1113   
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 22
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1114  *commercial flow
1115  cflow(i,j,cur_case)$line(i,j) = f.l(i,j);
1116   
1117  *physical flow
1118  pflow(i,j,cur_case)$line(i,j) = sum(jj, ptdf(i,j,jj)*net_inj_store(jj,cur_case));
1119   
1120  *store prices
1121  price(i,cur_case)$(not DA_seq(cur_case)) = net_inj.m(i);
1122  price(i,cur_case)$(DA_seq(cur_case) and zonal_set(i)) = price(i,'zonal');
1123  price(i,cur_case)$(DA_seq(cur_case) and nodal_set(i)) = net_inj_seq.m(i);
1124   
1125  *cost for individual generators
1126  cost(i,k,cur_case) =
1127     (e(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1128     +0.5*c(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1129     +0.5*(cu(i,k) - c(i,k))*qug.l(i,k)*qug.l(i,k)
1130     +0.5*(cd(i,k) - c(i,k))*qdg.l(i,k)*qdg.l(i,k));
1131   
1132  *benefit for individual consumers
1133  benefit(i,l,cur_case) =
1134     (a(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1135     -0.5*b(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1136     -0.5*(bu(i,l) - b(i,l))*quc.l(i,l)*quc.l(i,l)
1137     -0.5*(bd(i,l) - b(i,l))*qdc.l(i,l)*qdc.l(i,l));
1138   
1139  *payments
1140  *a positive payment is equivalent to a payment from the system operator to generators/consumers
1141  paym_gen(i,k,cur_case)$(not RT(cur_case)) = qg.l(i,k)*price(i,cur_case);
1142  paym_con(i,l,cur_case)$(not RT(cur_case)) = -qc.l(i,l)*price(i,cur_case);
1143   
1144  paym_gen(i,k,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_gen(i,k,ccase))
1145          + (qug.l(i,k) - qdg.l(i,k))*price(i,cur_case);
1146  paym_con(i,l,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_con(i,l,ccase))
1147          + (quc.l(i,l) - qdc.l(i,l))*price(i,cur_case);
1148   
1149  *summing payments
1150  paym_tot('gen',cur_case) = sum((i,k), paym_gen(i,k,cur_case));
1151  paym_tot('con',cur_case) = sum((i,l), paym_con(i,l,cur_case));
1152  paym_tot('grid',cur_case) = paym_tot('gen',cur_case) + paym_tot('con',cur_case);
1153   
1154  *computing surpluses
1155  surpl_gen(i,k,cur_case) = paym_gen(i,k,cur_case) - cost(i,k,cur_case);
1156  surpl_con(i,l,cur_case) = benefit(i,l,cur_case) + paym_con(i,l,cur_case);
1157  surpl_tot('gen',cur_case) = sum((i,k), surpl_gen(i,k,cur_case));
1158  surpl_tot('con',cur_case) = sum((i,l), surpl_con(i,l,cur_case));
1159  surpl_tot('grid',cur_case) = -paym_tot('grid',cur_case);
1160  surpl_tot('tot',cur_case) = surpl_tot('gen',cur_case)
1161                              + surpl_tot('con',cur_case) + surpl_tot('grid',cur_case);
1162   
1163   
1164   
1165   
1166   
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 23
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1167  *redispatch market
1168  cur_case(case) = no;
1169  cur_case('redispatch_sim3') = yes;
1170  *fix DA market quantities
1171  qg.fx(i,k) = qg.l(i,k);
1172  qc.fx(i,l) = qc.l(i,l);
1173  *unfix regulation market quantities for
1174  *for participating generators and consumers
1175  qug.lo(i,k) = 0;
1176  qdg.lo(i,k) = 0;
1177  quc.lo(i,l) = 0;
1178  qdc.lo(i,l) = 0;
1179  qug.up(i,k) = inf;
1180  qdg.up(i,k) = inf;
1181  quc.up(i,l) = inf;
1182  qdc.up(i,l) = inf;
1183  *calculate market solution
1184  solve redispatch using nlp maximizing surplus;
1185  status('redispatch_sim3')= redispatch.modelstat;
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
1187  *physical quantities
1188  generation(i,k,cur_case) = qg.l(i,k) + qug.l(i,k) - qdg.l(i,k);
1189  consumption(i,l,cur_case) = qc.l(i,l) - quc.l(i,l) + qdc.l(i,l);
1190  net_inj_store(i,cur_case) = sum(k,generation(i,k,cur_case))-sum(l,consumption(i,l,cur_case));
1191   
1192  *commercial flow
1193  cflow(i,j,cur_case)$line(i,j) = f.l(i,j);
1194   
1195  *physical flow
1196  pflow(i,j,cur_case)$line(i,j) = sum(jj, ptdf(i,j,jj)*net_inj_store(jj,cur_case));
1197   
1198  *store prices
1199  price(i,cur_case)$(not DA_seq(cur_case)) = net_inj.m(i);
1200  price(i,cur_case)$(DA_seq(cur_case) and zonal_set(i)) = price(i,'zonal');
1201  price(i,cur_case)$(DA_seq(cur_case) and nodal_set(i)) = net_inj_seq.m(i);
1202   
1203  *cost for individual generators
1204  cost(i,k,cur_case) =
1205     (e(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1206     +0.5*c(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1207     +0.5*(cu(i,k) - c(i,k))*qug.l(i,k)*qug.l(i,k)
1208     +0.5*(cd(i,k) - c(i,k))*qdg.l(i,k)*qdg.l(i,k));
1209   
1210  *benefit for individual consumers
1211  benefit(i,l,cur_case) =
1212     (a(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1213     -0.5*b(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1214     -0.5*(bu(i,l) - b(i,l))*quc.l(i,l)*quc.l(i,l)
1215     -0.5*(bd(i,l) - b(i,l))*qdc.l(i,l)*qdc.l(i,l));
1216   
1217  *payments
1218  *a positive payment is equivalent to a payment from the system operator to generators/consumers
1219  paym_gen(i,k,cur_case)$(not RT(cur_case)) = qg.l(i,k)*price(i,cur_case);
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 24
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1220  paym_con(i,l,cur_case)$(not RT(cur_case)) = -qc.l(i,l)*price(i,cur_case);
1221   
1222  paym_gen(i,k,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_gen(i,k,ccase))
1223          + (qug.l(i,k) - qdg.l(i,k))*price(i,cur_case);
1224  paym_con(i,l,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_con(i,l,ccase))
1225          + (quc.l(i,l) - qdc.l(i,l))*price(i,cur_case);
1226   
1227  *summing payments
1228  paym_tot('gen',cur_case) = sum((i,k), paym_gen(i,k,cur_case));
1229  paym_tot('con',cur_case) = sum((i,l), paym_con(i,l,cur_case));
1230  paym_tot('grid',cur_case) = paym_tot('gen',cur_case) + paym_tot('con',cur_case);
1231   
1232  *computing surpluses
1233  surpl_gen(i,k,cur_case) = paym_gen(i,k,cur_case) - cost(i,k,cur_case);
1234  surpl_con(i,l,cur_case) = benefit(i,l,cur_case) + paym_con(i,l,cur_case);
1235  surpl_tot('gen',cur_case) = sum((i,k), surpl_gen(i,k,cur_case));
1236  surpl_tot('con',cur_case) = sum((i,l), surpl_con(i,l,cur_case));
1237  surpl_tot('grid',cur_case) = -paym_tot('grid',cur_case);
1238  surpl_tot('tot',cur_case) = surpl_tot('gen',cur_case)
1239                              + surpl_tot('con',cur_case) + surpl_tot('grid',cur_case);
1240   
1241   
1242   
1243   
1244   
1245  *Sequential Hybrid Models
1246   
1247  *Sequential Hybrid Model Variant 1 - Day Ahead
1248  cur_case(case) = no;
1249  cur_case('zonal_seq1') = yes;
1250  *simultaneous model 1
1251  qug.fx(i,k)$nodal_set(i) = 0;
1252  qdg.fx(i,k)$nodal_set(i) = 0;
1253  quc.fx(i,l)$nodal_set(i) = 0;
1254  qdc.fx(i,l)$nodal_set(i) = 0;
1255  *set nodal generation and consumption capacities
1256  qg.lo(i,k)$nodal_set(i) = 0;
1257  qc.lo(i,l)$nodal_set(i) = 0;
1258  qg.up(i,k)$nodal_set(i) = inf;
1259  qc.up(i,l)$nodal_set(i) = inf;
1260  *calculate market solution
1261  solve zonal_seq1 using nlp maximizing surplus;
1262  status('zonal_seq1')= zonal_seq1.modelstat;
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
1264  *physical quantities
1265  generation(i,k,cur_case) = qg.l(i,k) + qug.l(i,k) - qdg.l(i,k);
1266  consumption(i,l,cur_case) = qc.l(i,l) - quc.l(i,l) + qdc.l(i,l);
1267  net_inj_store(i,cur_case) = sum(k,generation(i,k,cur_case))-sum(l,consumption(i,l,cur_case));
1268   
1269  *commercial flow
1270  cflow(i,j,cur_case)$line(i,j) = f.l(i,j);
1271   
1272  *physical flow
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 25
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1273  pflow(i,j,cur_case)$line(i,j) = sum(jj, ptdf(i,j,jj)*net_inj_store(jj,cur_case));
1274   
1275  *store prices
1276  price(i,cur_case)$(not DA_seq(cur_case)) = net_inj.m(i);
1277  price(i,cur_case)$(DA_seq(cur_case) and zonal_set(i)) = price(i,'zonal');
1278  price(i,cur_case)$(DA_seq(cur_case) and nodal_set(i)) = net_inj_seq.m(i);
1279   
1280  *cost for individual generators
1281  cost(i,k,cur_case) =
1282     (e(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1283     +0.5*c(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1284     +0.5*(cu(i,k) - c(i,k))*qug.l(i,k)*qug.l(i,k)
1285     +0.5*(cd(i,k) - c(i,k))*qdg.l(i,k)*qdg.l(i,k));
1286   
1287  *benefit for individual consumers
1288  benefit(i,l,cur_case) =
1289     (a(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1290     -0.5*b(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1291     -0.5*(bu(i,l) - b(i,l))*quc.l(i,l)*quc.l(i,l)
1292     -0.5*(bd(i,l) - b(i,l))*qdc.l(i,l)*qdc.l(i,l));
1293   
1294  *payments
1295  *a positive payment is equivalent to a payment from the system operator to generators/consumers
1296  paym_gen(i,k,cur_case)$(not RT(cur_case)) = qg.l(i,k)*price(i,cur_case);
1297  paym_con(i,l,cur_case)$(not RT(cur_case)) = -qc.l(i,l)*price(i,cur_case);
1298   
1299  paym_gen(i,k,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_gen(i,k,ccase))
1300          + (qug.l(i,k) - qdg.l(i,k))*price(i,cur_case);
1301  paym_con(i,l,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_con(i,l,ccase))
1302          + (quc.l(i,l) - qdc.l(i,l))*price(i,cur_case);
1303   
1304  *summing payments
1305  paym_tot('gen',cur_case) = sum((i,k), paym_gen(i,k,cur_case));
1306  paym_tot('con',cur_case) = sum((i,l), paym_con(i,l,cur_case));
1307  paym_tot('grid',cur_case) = paym_tot('gen',cur_case) + paym_tot('con',cur_case);
1308   
1309  *computing surpluses
1310  surpl_gen(i,k,cur_case) = paym_gen(i,k,cur_case) - cost(i,k,cur_case);
1311  surpl_con(i,l,cur_case) = benefit(i,l,cur_case) + paym_con(i,l,cur_case);
1312  surpl_tot('gen',cur_case) = sum((i,k), surpl_gen(i,k,cur_case));
1313  surpl_tot('con',cur_case) = sum((i,l), surpl_con(i,l,cur_case));
1314  surpl_tot('grid',cur_case) = -paym_tot('grid',cur_case);
1315  surpl_tot('tot',cur_case) = surpl_tot('gen',cur_case)
1316                              + surpl_tot('con',cur_case) + surpl_tot('grid',cur_case);
1317   
1318   
1319   
1320   
1321   
1322  *Sequential Hybrid Model Variant 1 - Redispatch
1323  cur_case(case) = no;
1324  cur_case('redispatch_seq1') = yes;
1325  *fix DA market quantities
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 26
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1326  qg.fx(i,k) = qg.l(i,k);
1327  qc.fx(i,l) = qc.l(i,l);
1328  *unfix regulation market quantities for
1329  *for participating generators and consumers
1330  qug.lo(i,k) = 0;
1331  qdg.lo(i,k) = 0;
1332  quc.lo(i,l) = 0;
1333  qdc.lo(i,l) = 0;
1334  qug.up(i,k) = inf;
1335  qdg.up(i,k) = inf;
1336  quc.up(i,l) = inf;
1337  qdc.up(i,l) = inf;
1338  *calculate market solution
1339  solve redispatch using nlp maximizing surplus;
1340  status('redispatch_seq1')= redispatch.modelstat;
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
1342  *physical quantities
1343  generation(i,k,cur_case) = qg.l(i,k) + qug.l(i,k) - qdg.l(i,k);
1344  consumption(i,l,cur_case) = qc.l(i,l) - quc.l(i,l) + qdc.l(i,l);
1345  net_inj_store(i,cur_case) = sum(k,generation(i,k,cur_case))-sum(l,consumption(i,l,cur_case));
1346   
1347  *commercial flow
1348  cflow(i,j,cur_case)$line(i,j) = f.l(i,j);
1349   
1350  *physical flow
1351  pflow(i,j,cur_case)$line(i,j) = sum(jj, ptdf(i,j,jj)*net_inj_store(jj,cur_case));
1352   
1353  *store prices
1354  price(i,cur_case)$(not DA_seq(cur_case)) = net_inj.m(i);
1355  price(i,cur_case)$(DA_seq(cur_case) and zonal_set(i)) = price(i,'zonal');
1356  price(i,cur_case)$(DA_seq(cur_case) and nodal_set(i)) = net_inj_seq.m(i);
1357   
1358  *cost for individual generators
1359  cost(i,k,cur_case) =
1360     (e(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1361     +0.5*c(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1362     +0.5*(cu(i,k) - c(i,k))*qug.l(i,k)*qug.l(i,k)
1363     +0.5*(cd(i,k) - c(i,k))*qdg.l(i,k)*qdg.l(i,k));
1364   
1365  *benefit for individual consumers
1366  benefit(i,l,cur_case) =
1367     (a(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1368     -0.5*b(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1369     -0.5*(bu(i,l) - b(i,l))*quc.l(i,l)*quc.l(i,l)
1370     -0.5*(bd(i,l) - b(i,l))*qdc.l(i,l)*qdc.l(i,l));
1371   
1372  *payments
1373  *a positive payment is equivalent to a payment from the system operator to generators/consumers
1374  paym_gen(i,k,cur_case)$(not RT(cur_case)) = qg.l(i,k)*price(i,cur_case);
1375  paym_con(i,l,cur_case)$(not RT(cur_case)) = -qc.l(i,l)*price(i,cur_case);
1376   
1377  paym_gen(i,k,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_gen(i,k,ccase))
1378          + (qug.l(i,k) - qdg.l(i,k))*price(i,cur_case);
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 27
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1379  paym_con(i,l,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_con(i,l,ccase))
1380          + (quc.l(i,l) - qdc.l(i,l))*price(i,cur_case);
1381   
1382  *summing payments
1383  paym_tot('gen',cur_case) = sum((i,k), paym_gen(i,k,cur_case));
1384  paym_tot('con',cur_case) = sum((i,l), paym_con(i,l,cur_case));
1385  paym_tot('grid',cur_case) = paym_tot('gen',cur_case) + paym_tot('con',cur_case);
1386   
1387  *computing surpluses
1388  surpl_gen(i,k,cur_case) = paym_gen(i,k,cur_case) - cost(i,k,cur_case);
1389  surpl_con(i,l,cur_case) = benefit(i,l,cur_case) + paym_con(i,l,cur_case);
1390  surpl_tot('gen',cur_case) = sum((i,k), surpl_gen(i,k,cur_case));
1391  surpl_tot('con',cur_case) = sum((i,l), surpl_con(i,l,cur_case));
1392  surpl_tot('grid',cur_case) = -paym_tot('grid',cur_case);
1393  surpl_tot('tot',cur_case) = surpl_tot('gen',cur_case)
1394                              + surpl_tot('con',cur_case) + surpl_tot('grid',cur_case);
1395   
1396   
1397   
1398   
1399   
1400  *Sequential Hybrid Model Variant 2 - Day Ahead
1401  cur_case(case) = no;
1402  cur_case('zonal_seq2') = yes;
1403  *sequential model 2
1404  qug.fx(i,k)$nodal_set(i) = 0;
1405  qdg.fx(i,k)$nodal_set(i) = 0;
1406  quc.fx(i,l)$nodal_set(i) = 0;
1407  qdc.fx(i,l)$nodal_set(i) = 0;
1408  *set nodal generation and consumption capacities
1409  qg.lo(i,k)$nodal_set(i) = 0;
1410  qc.lo(i,l)$nodal_set(i) = 0;
1411  qg.up(i,k)$nodal_set(i) = inf;
1412  qc.up(i,l)$nodal_set(i) = inf;
1413  *calculate market solution
1414  solve zonal_seq2 using nlp maximizing surplus;
1415  status('zonal_seq2')= zonal_seq2.modelstat;
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
1417  *physical quantities
1418  generation(i,k,cur_case) = qg.l(i,k) + qug.l(i,k) - qdg.l(i,k);
1419  consumption(i,l,cur_case) = qc.l(i,l) - quc.l(i,l) + qdc.l(i,l);
1420  net_inj_store(i,cur_case) = sum(k,generation(i,k,cur_case))-sum(l,consumption(i,l,cur_case));
1421   
1422  *commercial flow
1423  cflow(i,j,cur_case)$line(i,j) = f.l(i,j);
1424   
1425  *physical flow
1426  pflow(i,j,cur_case)$line(i,j) = sum(jj, ptdf(i,j,jj)*net_inj_store(jj,cur_case));
1427   
1428  *store prices
1429  price(i,cur_case)$(not DA_seq(cur_case)) = net_inj.m(i);
1430  price(i,cur_case)$(DA_seq(cur_case) and zonal_set(i)) = price(i,'zonal');
1431  price(i,cur_case)$(DA_seq(cur_case) and nodal_set(i)) = net_inj_seq.m(i);
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 28
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1432   
1433  *cost for individual generators
1434  cost(i,k,cur_case) =
1435     (e(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1436     +0.5*c(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1437     +0.5*(cu(i,k) - c(i,k))*qug.l(i,k)*qug.l(i,k)
1438     +0.5*(cd(i,k) - c(i,k))*qdg.l(i,k)*qdg.l(i,k));
1439   
1440  *benefit for individual consumers
1441  benefit(i,l,cur_case) =
1442     (a(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1443     -0.5*b(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1444     -0.5*(bu(i,l) - b(i,l))*quc.l(i,l)*quc.l(i,l)
1445     -0.5*(bd(i,l) - b(i,l))*qdc.l(i,l)*qdc.l(i,l));
1446   
1447  *payments
1448  *a positive payment is equivalent to a payment from the system operator to generators/consumers
1449  paym_gen(i,k,cur_case)$(not RT(cur_case)) = qg.l(i,k)*price(i,cur_case);
1450  paym_con(i,l,cur_case)$(not RT(cur_case)) = -qc.l(i,l)*price(i,cur_case);
1451   
1452  paym_gen(i,k,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_gen(i,k,ccase))
1453          + (qug.l(i,k) - qdg.l(i,k))*price(i,cur_case);
1454  paym_con(i,l,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_con(i,l,ccase))
1455          + (quc.l(i,l) - qdc.l(i,l))*price(i,cur_case);
1456   
1457  *summing payments
1458  paym_tot('gen',cur_case) = sum((i,k), paym_gen(i,k,cur_case));
1459  paym_tot('con',cur_case) = sum((i,l), paym_con(i,l,cur_case));
1460  paym_tot('grid',cur_case) = paym_tot('gen',cur_case) + paym_tot('con',cur_case);
1461   
1462  *computing surpluses
1463  surpl_gen(i,k,cur_case) = paym_gen(i,k,cur_case) - cost(i,k,cur_case);
1464  surpl_con(i,l,cur_case) = benefit(i,l,cur_case) + paym_con(i,l,cur_case);
1465  surpl_tot('gen',cur_case) = sum((i,k), surpl_gen(i,k,cur_case));
1466  surpl_tot('con',cur_case) = sum((i,l), surpl_con(i,l,cur_case));
1467  surpl_tot('grid',cur_case) = -paym_tot('grid',cur_case);
1468  surpl_tot('tot',cur_case) = surpl_tot('gen',cur_case)
1469                              + surpl_tot('con',cur_case) + surpl_tot('grid',cur_case);
1470   
1471   
1472   
1473   
1474   
1475  *Sequential Hybrid Model Variant 2 - Redispatch
1476  cur_case(case) = no;
1477  cur_case('redispatch_seq2') = yes;
1478  *fix DA market quantities
1479  qg.fx(i,k) = qg.l(i,k);
1480  qc.fx(i,l) = qc.l(i,l);
1481  *unfix regulation market quantities for
1482  *for participating generators and consumers
1483  qug.lo(i,k) = 0;
1484  qdg.lo(i,k) = 0;
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 29
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1485  quc.lo(i,l) = 0;
1486  qdc.lo(i,l) = 0;
1487  qug.up(i,k) = inf;
1488  qdg.up(i,k) = inf;
1489  quc.up(i,l) = inf;
1490  qdc.up(i,l) = inf;
1491  *calculate market solution
1492  solve redispatch using nlp maximizing surplus;
1493  status('redispatch_seq2')= redispatch.modelstat;
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
1495  *physical quantities
1496  generation(i,k,cur_case) = qg.l(i,k) + qug.l(i,k) - qdg.l(i,k);
1497  consumption(i,l,cur_case) = qc.l(i,l) - quc.l(i,l) + qdc.l(i,l);
1498  net_inj_store(i,cur_case) = sum(k,generation(i,k,cur_case))-sum(l,consumption(i,l,cur_case));
1499   
1500  *commercial flow
1501  cflow(i,j,cur_case)$line(i,j) = f.l(i,j);
1502   
1503  *physical flow
1504  pflow(i,j,cur_case)$line(i,j) = sum(jj, ptdf(i,j,jj)*net_inj_store(jj,cur_case));
1505   
1506  *store prices
1507  price(i,cur_case)$(not DA_seq(cur_case)) = net_inj.m(i);
1508  price(i,cur_case)$(DA_seq(cur_case) and zonal_set(i)) = price(i,'zonal');
1509  price(i,cur_case)$(DA_seq(cur_case) and nodal_set(i)) = net_inj_seq.m(i);
1510   
1511  *cost for individual generators
1512  cost(i,k,cur_case) =
1513     (e(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1514     +0.5*c(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1515     +0.5*(cu(i,k) - c(i,k))*qug.l(i,k)*qug.l(i,k)
1516     +0.5*(cd(i,k) - c(i,k))*qdg.l(i,k)*qdg.l(i,k));
1517   
1518  *benefit for individual consumers
1519  benefit(i,l,cur_case) =
1520     (a(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1521     -0.5*b(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1522     -0.5*(bu(i,l) - b(i,l))*quc.l(i,l)*quc.l(i,l)
1523     -0.5*(bd(i,l) - b(i,l))*qdc.l(i,l)*qdc.l(i,l));
1524   
1525  *payments
1526  *a positive payment is equivalent to a payment from the system operator to generators/consumers
1527  paym_gen(i,k,cur_case)$(not RT(cur_case)) = qg.l(i,k)*price(i,cur_case);
1528  paym_con(i,l,cur_case)$(not RT(cur_case)) = -qc.l(i,l)*price(i,cur_case);
1529   
1530  paym_gen(i,k,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_gen(i,k,ccase))
1531          + (qug.l(i,k) - qdg.l(i,k))*price(i,cur_case);
1532  paym_con(i,l,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_con(i,l,ccase))
1533          + (quc.l(i,l) - qdc.l(i,l))*price(i,cur_case);
1534   
1535  *summing payments
1536  paym_tot('gen',cur_case) = sum((i,k), paym_gen(i,k,cur_case));
1537  paym_tot('con',cur_case) = sum((i,l), paym_con(i,l,cur_case));
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 30
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1538  paym_tot('grid',cur_case) = paym_tot('gen',cur_case) + paym_tot('con',cur_case);
1539   
1540  *computing surpluses
1541  surpl_gen(i,k,cur_case) = paym_gen(i,k,cur_case) - cost(i,k,cur_case);
1542  surpl_con(i,l,cur_case) = benefit(i,l,cur_case) + paym_con(i,l,cur_case);
1543  surpl_tot('gen',cur_case) = sum((i,k), surpl_gen(i,k,cur_case));
1544  surpl_tot('con',cur_case) = sum((i,l), surpl_con(i,l,cur_case));
1545  surpl_tot('grid',cur_case) = -paym_tot('grid',cur_case);
1546  surpl_tot('tot',cur_case) = surpl_tot('gen',cur_case)
1547                              + surpl_tot('con',cur_case) + surpl_tot('grid',cur_case);
1548   
1549   
1550   
1551   
1552   
1553  *day ahead market
1554  cur_case(case) = no;
1555  cur_case('zonal_seq3') = yes;
1556  *simultaneous model 1
1557  qug.fx(i,k)$nodal_set(i) = 0;
1558  qdg.fx(i,k)$nodal_set(i) = 0;
1559  quc.fx(i,l)$nodal_set(i) = 0;
1560  qdc.fx(i,l)$nodal_set(i) = 0;
1561  *set nodal generation and consumption capacities
1562  qg.lo(i,k)$nodal_set(i) = 0;
1563  qc.lo(i,l)$nodal_set(i) = 0;
1564  qg.up(i,k)$nodal_set(i) = inf;
1565  qc.up(i,l)$nodal_set(i) = inf;
1566  *calculate market solution
1567  solve zonal_seq3 using nlp maximizing surplus;
1568  status('zonal_seq3')= zonal_seq3.modelstat;
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
1570  *physical quantities
1571  generation(i,k,cur_case) = qg.l(i,k) + qug.l(i,k) - qdg.l(i,k);
1572  consumption(i,l,cur_case) = qc.l(i,l) - quc.l(i,l) + qdc.l(i,l);
1573  net_inj_store(i,cur_case) = sum(k,generation(i,k,cur_case))-sum(l,consumption(i,l,cur_case));
1574   
1575  *commercial flow
1576  cflow(i,j,cur_case)$line(i,j) = f.l(i,j);
1577   
1578  *physical flow
1579  pflow(i,j,cur_case)$line(i,j) = sum(jj, ptdf(i,j,jj)*net_inj_store(jj,cur_case));
1580   
1581  *store prices
1582  price(i,cur_case)$(not DA_seq(cur_case)) = net_inj.m(i);
1583  price(i,cur_case)$(DA_seq(cur_case) and zonal_set(i)) = price(i,'zonal');
1584  price(i,cur_case)$(DA_seq(cur_case) and nodal_set(i)) = net_inj_seq.m(i);
1585   
1586  *cost for individual generators
1587  cost(i,k,cur_case) =
1588     (e(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1589     +0.5*c(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1590     +0.5*(cu(i,k) - c(i,k))*qug.l(i,k)*qug.l(i,k)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 31
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1591     +0.5*(cd(i,k) - c(i,k))*qdg.l(i,k)*qdg.l(i,k));
1592   
1593  *benefit for individual consumers
1594  benefit(i,l,cur_case) =
1595     (a(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1596     -0.5*b(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1597     -0.5*(bu(i,l) - b(i,l))*quc.l(i,l)*quc.l(i,l)
1598     -0.5*(bd(i,l) - b(i,l))*qdc.l(i,l)*qdc.l(i,l));
1599   
1600  *payments
1601  *a positive payment is equivalent to a payment from the system operator to generators/consumers
1602  paym_gen(i,k,cur_case)$(not RT(cur_case)) = qg.l(i,k)*price(i,cur_case);
1603  paym_con(i,l,cur_case)$(not RT(cur_case)) = -qc.l(i,l)*price(i,cur_case);
1604   
1605  paym_gen(i,k,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_gen(i,k,ccase))
1606          + (qug.l(i,k) - qdg.l(i,k))*price(i,cur_case);
1607  paym_con(i,l,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_con(i,l,ccase))
1608          + (quc.l(i,l) - qdc.l(i,l))*price(i,cur_case);
1609   
1610  *summing payments
1611  paym_tot('gen',cur_case) = sum((i,k), paym_gen(i,k,cur_case));
1612  paym_tot('con',cur_case) = sum((i,l), paym_con(i,l,cur_case));
1613  paym_tot('grid',cur_case) = paym_tot('gen',cur_case) + paym_tot('con',cur_case);
1614   
1615  *computing surpluses
1616  surpl_gen(i,k,cur_case) = paym_gen(i,k,cur_case) - cost(i,k,cur_case);
1617  surpl_con(i,l,cur_case) = benefit(i,l,cur_case) + paym_con(i,l,cur_case);
1618  surpl_tot('gen',cur_case) = sum((i,k), surpl_gen(i,k,cur_case));
1619  surpl_tot('con',cur_case) = sum((i,l), surpl_con(i,l,cur_case));
1620  surpl_tot('grid',cur_case) = -paym_tot('grid',cur_case);
1621  surpl_tot('tot',cur_case) = surpl_tot('gen',cur_case)
1622                              + surpl_tot('con',cur_case) + surpl_tot('grid',cur_case);
1623   
1624   
1625   
1626   
1627   
1628  *Sequential Hybrid Model Variant 3 - Redispatch
1629  cur_case(case) = no;
1630  cur_case('redispatch_seq3') = yes;
1631  *fix DA market quantities
1632  qg.fx(i,k) = qg.l(i,k);
1633  qc.fx(i,l) = qc.l(i,l);
1634  *unfix regulation market quantities for
1635  *for participating generators and consumers
1636  qug.lo(i,k) = 0;
1637  qdg.lo(i,k) = 0;
1638  quc.lo(i,l) = 0;
1639  qdc.lo(i,l) = 0;
1640  qug.up(i,k) = inf;
1641  qdg.up(i,k) = inf;
1642  quc.up(i,l) = inf;
1643  qdc.up(i,l) = inf;
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 32
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1644  *calculate market solution
1645  solve redispatch using nlp maximizing surplus;
1646  status('redispatch_seq3')= redispatch.modelstat;
INCLUDE    C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
1648  *physical quantities
1649  generation(i,k,cur_case) = qg.l(i,k) + qug.l(i,k) - qdg.l(i,k);
1650  consumption(i,l,cur_case) = qc.l(i,l) - quc.l(i,l) + qdc.l(i,l);
1651  net_inj_store(i,cur_case) = sum(k,generation(i,k,cur_case))-sum(l,consumption(i,l,cur_case));
1652   
1653  *commercial flow
1654  cflow(i,j,cur_case)$line(i,j) = f.l(i,j);
1655   
1656  *physical flow
1657  pflow(i,j,cur_case)$line(i,j) = sum(jj, ptdf(i,j,jj)*net_inj_store(jj,cur_case));
1658   
1659  *store prices
1660  price(i,cur_case)$(not DA_seq(cur_case)) = net_inj.m(i);
1661  price(i,cur_case)$(DA_seq(cur_case) and zonal_set(i)) = price(i,'zonal');
1662  price(i,cur_case)$(DA_seq(cur_case) and nodal_set(i)) = net_inj_seq.m(i);
1663   
1664  *cost for individual generators
1665  cost(i,k,cur_case) =
1666     (e(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1667     +0.5*c(i,k)*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))*(qg.l(i,k) + qug.l(i,k) - qdg.l(i,k))
1668     +0.5*(cu(i,k) - c(i,k))*qug.l(i,k)*qug.l(i,k)
1669     +0.5*(cd(i,k) - c(i,k))*qdg.l(i,k)*qdg.l(i,k));
1670   
1671  *benefit for individual consumers
1672  benefit(i,l,cur_case) =
1673     (a(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1674     -0.5*b(i,l)*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))*(qc.l(i,l) - quc.l(i,l) + qdc.l(i,l))
1675     -0.5*(bu(i,l) - b(i,l))*quc.l(i,l)*quc.l(i,l)
1676     -0.5*(bd(i,l) - b(i,l))*qdc.l(i,l)*qdc.l(i,l));
1677   
1678  *payments
1679  *a positive payment is equivalent to a payment from the system operator to generators/consumers
1680  paym_gen(i,k,cur_case)$(not RT(cur_case)) = qg.l(i,k)*price(i,cur_case);
1681  paym_con(i,l,cur_case)$(not RT(cur_case)) = -qc.l(i,l)*price(i,cur_case);
1682   
1683  paym_gen(i,k,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_gen(i,k,ccase))
1684          + (qug.l(i,k) - qdg.l(i,k))*price(i,cur_case);
1685  paym_con(i,l,cur_case)$RT(cur_case) = sum(ccase$DA_RT(ccase,cur_case),paym_con(i,l,ccase))
1686          + (quc.l(i,l) - qdc.l(i,l))*price(i,cur_case);
1687   
1688  *summing payments
1689  paym_tot('gen',cur_case) = sum((i,k), paym_gen(i,k,cur_case));
1690  paym_tot('con',cur_case) = sum((i,l), paym_con(i,l,cur_case));
1691  paym_tot('grid',cur_case) = paym_tot('gen',cur_case) + paym_tot('con',cur_case);
1692   
1693  *computing surpluses
1694  surpl_gen(i,k,cur_case) = paym_gen(i,k,cur_case) - cost(i,k,cur_case);
1695  surpl_con(i,l,cur_case) = benefit(i,l,cur_case) + paym_con(i,l,cur_case);
1696  surpl_tot('gen',cur_case) = sum((i,k), surpl_gen(i,k,cur_case));
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 33
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1697  surpl_tot('con',cur_case) = sum((i,l), surpl_con(i,l,cur_case));
1698  surpl_tot('grid',cur_case) = -paym_tot('grid',cur_case);
1699  surpl_tot('tot',cur_case) = surpl_tot('gen',cur_case)
1700                              + surpl_tot('con',cur_case) + surpl_tot('grid',cur_case);
1701   
1702   
1703   
1704   
1705   
1706  *unload all parameters and variables to a gdx file that can be read in R
1707  execute_unload "results.gdx";
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 34
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\run_models.gms
     2        8 INCLUDE        1       8  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\model_formulations.gms
     3       86 INCLUDE        2      78  ..C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\6_node_extra_line.gms
     4      493 INCLUDE        1      24  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
     5      563 INCLUDE        1      37  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
     6      647 INCLUDE        1      64  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
     7      725 INCLUDE        1      85  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
     8      801 INCLUDE        1     104  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
     9      879 INCLUDE        1     125  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
    10      955 INCLUDE        1     144  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
    11     1033 INCLUDE        1     165  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
    12     1108 INCLUDE        1     183  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
    13     1186 INCLUDE        1     204  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
    14     1263 INCLUDE        1     224  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
    15     1341 INCLUDE        1     245  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
    16     1416 INCLUDE        1     263  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
    17     1494 INCLUDE        1     284  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
    18     1569 INCLUDE        1     302  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms
    19     1647 INCLUDE        1     323  .C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\store_results.gms


COMPILATION TIME     =        0.032 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 35
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    242 SET zconn  whether there is a connection from zone z to zone x

            2

1         YES


----    242 SET zconn_hybrid2  node i is in a nodal area and z is a non-nodal zone

            1

4         YES
5         YES


----    242 SET zconn_hybrid3  lines connecting a nodal area to a non-nodal area

            4           5

1         YES
3         YES         YES

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 36
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE unconstrained Using NLP From line 491


---- tot_surplus  =E=  definition of total surplus

tot_surplus..  (0)*qg(2,1) + (0)*qg(3,1) + (0)*qg(4,1) + (0)*qg(6,1) + (0)*qug(2,1) + (0)*qug(3,1) + (0)*qug(4,1) + (0)*qug(6,1) + (0)*qdg(2,1) + (0)*qdg(3,1) + (0)*qdg(4,1) + (0)*qdg(6,1) - (100)*qc(1,1) - (100)*qc(4,1) - (100)*qc(5,1) + (100)*quc(1,1)
     
      + (100)*quc(4,1) + (100)*quc(5,1) - (100)*qdc(1,1) - (100)*qdc(4,1) - (100)*qdc(5,1) + surplus =E= 0 ; (LHS = 0)
     

---- gcon_up  =L=  upper bound on final generation

gcon_up(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =L= 0 ; (LHS = 0)
     
gcon_up(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =L= 10000 ; (LHS = 0)
     
gcon_up(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =L= 10000 ; (LHS = 0)
     
gcon_up(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =L= 10000 ; (LHS = 0)
     
gcon_up(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =L= 0 ; (LHS = 0)
     
gcon_up(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =L= 10000 ; (LHS = 0)
     

---- gcon_lo  =G=  lower bound on final generation

gcon_lo(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =G= 0 ; (LHS = 0)
     
gcon_lo(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =G= 0 ; (LHS = 0)
     
gcon_lo(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =G= 0 ; (LHS = 0)
     
gcon_lo(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =G= 0 ; (LHS = 0)
     
gcon_lo(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =G= 0 ; (LHS = 0)
     
gcon_lo(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =G= 0 ; (LHS = 0)
     

---- ccon_up  =L=  upper bound on final consumption

ccon_up(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =L= 10000 ; (LHS = 0)
     
ccon_up(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =L= 0 ; (LHS = 0)
     
ccon_up(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =L= 0 ; (LHS = 0)
     
ccon_up(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =L= 10000 ; (LHS = 0)
     
ccon_up(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =L= 10000 ; (LHS = 0)
     
ccon_up(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =L= 0 ; (LHS = 0)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 37
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE unconstrained Using NLP From line 491


---- ccon_lo  =G=  lower bound on final consumption

ccon_lo(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =G= 0 ; (LHS = 0)
     
ccon_lo(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =G= 0 ; (LHS = 0)
     
ccon_lo(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =G= 0 ; (LHS = 0)
     
ccon_lo(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =G= 0 ; (LHS = 0)
     
ccon_lo(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =G= 0 ; (LHS = 0)
     
ccon_lo(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =G= 0 ; (LHS = 0)
     

---- gen_redisp_down  =E=  includes generation participating in downward regulation market

gen_redisp_down(1,1)..  qdg(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_down(5,1)..  qdg(5,1) =E= 0 ; (LHS = 0)
     

---- gen_redisp_up  =E=  includes generation participating in upward regulation market

gen_redisp_up(1,1)..  qug(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_up(5,1)..  qug(5,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_down  =E=  includes consumption participating in downward regulation market

con_redisp_down(2,1)..  qdc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(3,1)..  qdc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(6,1)..  qdc(6,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_up  =E=  includes consumption participating in upward regulation market

con_redisp_up(2,1)..  quc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(3,1)..  quc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(6,1)..  quc(6,1) =E= 0 ; (LHS = 0)
     

---- net_inj  =E=  net injection in every node

net_inj(1)..  - qg(1,1) - qug(1,1) + qdg(1,1) + qc(1,1) - quc(1,1) + qdc(1,1) + q(1) =E= 0 ; (LHS = 0)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 38
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE unconstrained Using NLP From line 491


     net_inj  =E=  net injection in every node

net_inj(2)..  - qg(2,1) - qug(2,1) + qdg(2,1) + qc(2,1) - quc(2,1) + qdc(2,1) + q(2) =E= 0 ; (LHS = 0)
     
net_inj(3)..  - qg(3,1) - qug(3,1) + qdg(3,1) + qc(3,1) - quc(3,1) + qdc(3,1) + q(3) =E= 0 ; (LHS = 0)
     
net_inj(4)..  - qg(4,1) - qug(4,1) + qdg(4,1) + qc(4,1) - quc(4,1) + qdc(4,1) + q(4) =E= 0 ; (LHS = 0)
     
net_inj(5)..  - qg(5,1) - qug(5,1) + qdg(5,1) + qc(5,1) - quc(5,1) + qdc(5,1) + q(5) =E= 0 ; (LHS = 0)
     
net_inj(6)..  - qg(6,1) - qug(6,1) + qdg(6,1) + qc(6,1) - quc(6,1) + qdc(6,1) + q(6) =E= 0 ; (LHS = 0)
     

---- sum_NI  =E=  sum of net injections

sum_NI..  q(1) + q(2) + q(3) + q(4) + q(5) + q(6) =E= 0 ; (LHS = 0)
     

---- ptdf_flow  =E=  calculates physical flows over given line

ptdf_flow(1,2)..  0.618182*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(1,2) =E= 0 ; (LHS = 0)
     
ptdf_flow(1,3)..  0.236364*q(2) + 0.472727*q(3) + 0.290909*q(4) + 0.363636*q(5) + 0.327273*q(6) + f(1,3) =E= 0 ; (LHS = 0)
     
ptdf_flow(1,4)..  0.145455*q(2) + 0.290909*q(3) + 0.563636*q(4) + 0.454545*q(5) + 0.509091*q(6) + f(1,4) =E= 0 ; (LHS = 0)
     
ptdf_flow(2,3)..  - 0.381818*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(2,3) =E= 0 ; (LHS = 0)
     
ptdf_flow(3,4)..  - 0.090909*q(2) - 0.181818*q(3) + 0.272727*q(4) + 0.090909*q(5) + 0.181818*q(6) + f(3,4) =E= 0 ; (LHS = 0)
     
ptdf_flow(3,5)..  - 0.054545*q(2) - 0.109091*q(3) + 0.163636*q(4) + 0.454545*q(5) + 0.309091*q(6) + f(3,5) =E= 0 ; (LHS = 0)
     
ptdf_flow(4,5)..  0.036364*q(2) + 0.072727*q(3) - 0.109091*q(4) + 0.363636*q(5) + 0.127273*q(6) + f(4,5) =E= 0 ; (LHS = 0)
     
ptdf_flow(4,6)..  0.018182*q(2) + 0.036364*q(3) - 0.054545*q(4) + 0.181818*q(5) + 0.563636*q(6) + f(4,6) =E= 0 ; (LHS = 0)
     
ptdf_flow(5,6)..  - 0.018182*q(2) - 0.036364*q(3) + 0.054545*q(4) - 0.181818*q(5) + 0.436364*q(6) + f(5,6) =E= 0 ; (LHS = 0)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 39
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE unconstrained Using NLP From line 491


---- qg  spot market generation quantity

qg(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qg(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qg(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qg(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qg(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qg(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       (0)      tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qug  upregulation generation quantity

qug(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
        1       gen_redisp_up(1,1)
       -1       net_inj(1)

qug(2,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 40
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE unconstrained Using NLP From line 491


     qug  upregulation generation quantity

                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (0)      tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qug(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (0)      tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qug(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (0)      tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qug(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
        1       gen_redisp_up(5,1)
       -1       net_inj(5)

qug(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (0)      tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qdg  downregulation generation quantity

qdg(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       gcon_up(1,1)
       -1       gcon_lo(1,1)
        1       gen_redisp_down(1,1)
        1       net_inj(1)

qdg(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (0)      tot_surplus
       -1       gcon_up(2,1)
       -1       gcon_lo(2,1)
        1       net_inj(2)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 41
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE unconstrained Using NLP From line 491


     qdg  downregulation generation quantity

qdg(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (0)      tot_surplus
       -1       gcon_up(3,1)
       -1       gcon_lo(3,1)
        1       net_inj(3)

qdg(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (0)      tot_surplus
       -1       gcon_up(4,1)
       -1       gcon_lo(4,1)
        1       net_inj(4)

qdg(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       gcon_up(5,1)
       -1       gcon_lo(5,1)
        1       gen_redisp_down(5,1)
        1       net_inj(5)

qdg(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (0)      tot_surplus
       -1       gcon_up(6,1)
       -1       gcon_lo(6,1)
        1       net_inj(6)


---- qc  spot market consumption quantity

qc(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
    (-100)      tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qc(4,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 42
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE unconstrained Using NLP From line 491


     qc  spot market consumption quantity

                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
    (-100)      tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qc(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
    (-100)      tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)


---- quc  upregulation consumption quantity

quc(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
     (100)      tot_surplus
       -1       ccon_up(1,1)
       -1       ccon_lo(1,1)
       -1       net_inj(1)

quc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       ccon_up(2,1)
       -1       ccon_lo(2,1)
        1       con_redisp_up(2,1)
       -1       net_inj(2)

quc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       ccon_up(3,1)
       -1       ccon_lo(3,1)
        1       con_redisp_up(3,1)
       -1       net_inj(3)

quc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
     (100)      tot_surplus
       -1       ccon_up(4,1)
       -1       ccon_lo(4,1)
       -1       net_inj(4)

quc(5,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 43
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE unconstrained Using NLP From line 491


     quc  upregulation consumption quantity

                (.LO, .L, .UP, .M = 0, 0, 0, 0)
     (100)      tot_surplus
       -1       ccon_up(5,1)
       -1       ccon_lo(5,1)
       -1       net_inj(5)

quc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       ccon_up(6,1)
       -1       ccon_lo(6,1)
        1       con_redisp_up(6,1)
       -1       net_inj(6)


---- qdc  downregulation consumption quantity

qdc(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
    (-100)      tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qdc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       con_redisp_down(2,1)
        1       net_inj(2)

qdc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       con_redisp_down(3,1)
        1       net_inj(3)

qdc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
    (-100)      tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qdc(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
    (-100)      tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 44
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE unconstrained Using NLP From line 491


     qdc  downregulation consumption quantity

qdc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       con_redisp_down(6,1)
        1       net_inj(6)


---- q  net injection quantity

q(1)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       net_inj(1)
        1       sum_NI

q(2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       net_inj(2)
        1       sum_NI
        0.6182  ptdf_flow(1,2)
        0.2364  ptdf_flow(1,3)
        0.1455  ptdf_flow(1,4)
       -0.3818  ptdf_flow(2,3)
       -0.0909  ptdf_flow(3,4)
       -0.0545  ptdf_flow(3,5)
        0.0364  ptdf_flow(4,5)
        0.0182  ptdf_flow(4,6)
       -0.0182  ptdf_flow(5,6)

q(3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       net_inj(3)
        1       sum_NI
        0.2364  ptdf_flow(1,2)
        0.4727  ptdf_flow(1,3)
        0.2909  ptdf_flow(1,4)
        0.2364  ptdf_flow(2,3)
       -0.1818  ptdf_flow(3,4)
       -0.1091  ptdf_flow(3,5)
        0.0727  ptdf_flow(4,5)
        0.0364  ptdf_flow(4,6)
       -0.0364  ptdf_flow(5,6)

q(4)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       net_inj(4)
        1       sum_NI
        0.1455  ptdf_flow(1,2)
        0.2909  ptdf_flow(1,3)
        0.5636  ptdf_flow(1,4)
        0.1455  ptdf_flow(2,3)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 45
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE unconstrained Using NLP From line 491


     q  net injection quantity

        0.2727  ptdf_flow(3,4)
        0.1636  ptdf_flow(3,5)
       -0.1091  ptdf_flow(4,5)
       -0.0545  ptdf_flow(4,6)
        0.0545  ptdf_flow(5,6)

q(5)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       net_inj(5)
        1       sum_NI
        0.1818  ptdf_flow(1,2)
        0.3636  ptdf_flow(1,3)
        0.4545  ptdf_flow(1,4)
        0.1818  ptdf_flow(2,3)
        0.0909  ptdf_flow(3,4)
        0.4545  ptdf_flow(3,5)
        0.3636  ptdf_flow(4,5)
        0.1818  ptdf_flow(4,6)
       -0.1818  ptdf_flow(5,6)

q(6)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       net_inj(6)
        1       sum_NI
        0.1636  ptdf_flow(1,2)
        0.3273  ptdf_flow(1,3)
        0.5091  ptdf_flow(1,4)
        0.1636  ptdf_flow(2,3)
        0.1818  ptdf_flow(3,4)
        0.3091  ptdf_flow(3,5)
        0.1273  ptdf_flow(4,5)
        0.5636  ptdf_flow(4,6)
        0.4364  ptdf_flow(5,6)


---- f  line flow

f(1,2)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       ptdf_flow(1,2)

f(1,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       ptdf_flow(1,3)

f(1,4)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       ptdf_flow(1,4)

f(2,3)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 46
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE unconstrained Using NLP From line 491


     f  line flow

        1       ptdf_flow(2,3)

f(3,4)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       ptdf_flow(3,4)

f(3,5)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       ptdf_flow(3,5)

f(4,5)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       ptdf_flow(4,5)

f(4,6)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       ptdf_flow(4,6)

f(5,6)
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       ptdf_flow(5,6)


---- surplus  total benefit minus total cost

surplus
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       tot_surplus

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 47
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE unconstrained Using NLP From line 491


MODEL STATISTICS

BLOCKS OF EQUATIONS          12     SINGLE EQUATIONS           51
BLOCKS OF VARIABLES           9     SINGLE VARIABLES           52
NON ZERO ELEMENTS           206     NON LINEAR N-Z             21
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH                 156


GENERATION TIME      =        0.093 SECONDS      4 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.093 SECONDS      4 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 48
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE unconstrained Using NLP From line 491


               S O L V E      S U M M A R Y

     MODEL   unconstrained       OBJECTIVE  surplus
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  MINOS               FROM LINE  491

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE           142857.1429

 RESOURCE USAGE, LIMIT          0.015      1000.000
 ITERATION COUNT, LIMIT        17    2000000000
 EVALUATION ERRORS              0             0

GAMS/MINOS       30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Win
M I N O S  5.6      (Jul 2016)

    GAMS/MINOS 5.6, Large Scale Nonlinear Solver
    B. A. Murtagh, University of New South Wales
    P. E. Gill, University of California at San Diego,
    W. Murray, M. A. Saunders, and M. H. Wright,
    Systems Optimization Laboratory, Stanford University

 Work space allocated           --     0.86 Mb

 EXIT - Optimal Solution found, objective:        142857.1



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 49
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 561


---- tot_surplus  =E=  definition of total surplus

tot_surplus..  (28.5714285710337)*qg(2,1) + (28.5714285710334)*qg(3,1) + (28.5714285706876)*qg(4,1) + (28.5714285714284)*qg(6,1) + (28.5714285710337)*qug(2,1) + (28.5714285710334)*qug(3,1) + (28.5714285706876)*qug(4,1) + (28.5714285714284)*qug(6,1)
     
      - (28.5714285710337)*qdg(2,1) - (28.5714285710334)*qdg(3,1) - (28.5714285706876)*qdg(4,1) - (28.5714285714284)*qdg(6,1) - (28.5714285731187)*qc(1,1) - (28.5714285715674)*qc(4,1) - (28.5714285709673)*qc(5,1) + (28.5714285731187)*quc(1,1)
     
      + (28.5714285715674)*quc(4,1) + (28.5714285709673)*quc(5,1) - (28.5714285731187)*qdc(1,1) - (28.5714285715674)*qdc(4,1) - (28.5714285709673)*qdc(5,1) + surplus =E= 0 ; (LHS = 0)
     

---- gcon_up  =L=  upper bound on final generation

gcon_up(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =L= 0 ; (LHS = 0)
     
gcon_up(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =L= 10000 ; (LHS = 571.428571420673)
     
gcon_up(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =L= 10000 ; (LHS = 571.428571420669)
     
gcon_up(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =L= 10000 ; (LHS = 571.428571413751)
     
gcon_up(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =L= 0 ; (LHS = 0)
     
gcon_up(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =L= 10000 ; (LHS = 1142.85714285714)
     

---- gcon_lo  =G=  lower bound on final generation

gcon_lo(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =G= 0 ; (LHS = 0)
     
gcon_lo(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =G= 0 ; (LHS = 571.428571420673)
     
gcon_lo(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =G= 0 ; (LHS = 571.428571420669)
     
gcon_lo(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =G= 0 ; (LHS = 571.428571413752)
     
gcon_lo(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =G= 0 ; (LHS = 0)
     
gcon_lo(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =G= 0 ; (LHS = 1142.85714285714)
     

---- ccon_up  =L=  upper bound on final consumption

ccon_up(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =L= 10000 ; (LHS = 1428.57142853763)
     
ccon_up(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =L= 0 ; (LHS = 0)
     
ccon_up(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =L= 0 ; (LHS = 0)
     
ccon_up(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =L= 10000 ; (LHS = 714.285714284326)
     
ccon_up(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =L= 10000 ; (LHS = 714.285714290327)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 50
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 561


     ccon_up  =L=  upper bound on final consumption

ccon_up(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =L= 0 ; (LHS = 0)
     

---- ccon_lo  =G=  lower bound on final consumption

ccon_lo(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =G= 0 ; (LHS = 1428.57142853763)
     
ccon_lo(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =G= 0 ; (LHS = 0)
     
ccon_lo(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =G= 0 ; (LHS = 0)
     
ccon_lo(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =G= 0 ; (LHS = 714.285714284326)
     
ccon_lo(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =G= 0 ; (LHS = 714.285714290327)
     
ccon_lo(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =G= 0 ; (LHS = 0)
     

---- gen_redisp_down  =E=  includes generation participating in downward regulation market

gen_redisp_down(1,1)..  qdg(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_down(5,1)..  qdg(5,1) =E= 0 ; (LHS = 0)
     

---- gen_redisp_up  =E=  includes generation participating in upward regulation market

gen_redisp_up(1,1)..  qug(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_up(5,1)..  qug(5,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_down  =E=  includes consumption participating in downward regulation market

con_redisp_down(2,1)..  qdc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(3,1)..  qdc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(6,1)..  qdc(6,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_up  =E=  includes consumption participating in upward regulation market

con_redisp_up(2,1)..  quc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(3,1)..  quc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(6,1)..  quc(6,1) =E= 0 ; (LHS = 0)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 51
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 561


---- net_inj  =E=  net injection in every node

net_inj(1)..  - qg(1,1) - qug(1,1) + qdg(1,1) + qc(1,1) - quc(1,1) + qdc(1,1) + q(1) =E= 0 ; (LHS = 0)
     
net_inj(2)..  - qg(2,1) - qug(2,1) + qdg(2,1) + qc(2,1) - quc(2,1) + qdc(2,1) + q(2) =E= 0 ; (LHS = 0)
     
net_inj(3)..  - qg(3,1) - qug(3,1) + qdg(3,1) + qc(3,1) - quc(3,1) + qdc(3,1) + q(3) =E= 0 ; (LHS = 0)
     
net_inj(4)..  - qg(4,1) - qug(4,1) + qdg(4,1) + qc(4,1) - quc(4,1) + qdc(4,1) + q(4) =E= 0 ; (LHS = 0)
     
net_inj(5)..  - qg(5,1) - qug(5,1) + qdg(5,1) + qc(5,1) - quc(5,1) + qdc(5,1) + q(5) =E= 0 ; (LHS = 0)
     
net_inj(6)..  - qg(6,1) - qug(6,1) + qdg(6,1) + qc(6,1) - quc(6,1) + qdc(6,1) + q(6) =E= 0 ; (LHS = 0)
     

---- sum_NI  =E=  sum of net injections

sum_NI..  q(1) + q(2) + q(3) + q(4) + q(5) + q(6) =E= 0 ; (LHS = -4.95674612466246E-11, INFES = 4.95674612466246E-11 ****)
     

---- ptdf_flow  =E=  calculates physical flows over given line

ptdf_flow(1,2)..  0.618182*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(1,2) =E= 0 ; (LHS = 0)
     
ptdf_flow(1,3)..  0.236364*q(2) + 0.472727*q(3) + 0.290909*q(4) + 0.363636*q(5) + 0.327273*q(6) + f(1,3) =E= 0 ; (LHS = 0)
     
ptdf_flow(1,4)..  0.145455*q(2) + 0.290909*q(3) + 0.563636*q(4) + 0.454545*q(5) + 0.509091*q(6) + f(1,4) =E= 0 ; (LHS = 0)
     
ptdf_flow(2,3)..  - 0.381818*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(2,3) =E= 0 ; (LHS = 0)
     
ptdf_flow(3,4)..  - 0.090909*q(2) - 0.181818*q(3) + 0.272727*q(4) + 0.090909*q(5) + 0.181818*q(6) + f(3,4) =E= 0 ; (LHS = 0)
     
ptdf_flow(3,5)..  - 0.054545*q(2) - 0.109091*q(3) + 0.163636*q(4) + 0.454545*q(5) + 0.309091*q(6) + f(3,5) =E= 0 ; (LHS = 0)
     
ptdf_flow(4,5)..  0.036364*q(2) + 0.072727*q(3) - 0.109091*q(4) + 0.363636*q(5) + 0.127273*q(6) + f(4,5) =E= 0 ; (LHS = 0)
     
ptdf_flow(4,6)..  0.018182*q(2) + 0.036364*q(3) - 0.054545*q(4) + 0.181818*q(5) + 0.563636*q(6) + f(4,6) =E= 0 ; (LHS = 0)
     
ptdf_flow(5,6)..  - 0.018182*q(2) - 0.036364*q(3) + 0.054545*q(4) - 0.181818*q(5) + 0.436364*q(6) + f(5,6) =E= 0 ; (LHS = 0)
     

---- fwd_lconstr  =L=  forward capacity constraint for line

fwd_lconstr(1,2)..  f(1,2) =L= 500 ; (LHS = -524.675285704742)
     
fwd_lconstr(1,3)..  f(1,3) =L= 450 ; (LHS = -477.922714274525)
     
fwd_lconstr(1,4)..  f(1,4) =L= 400 ; (LHS = -425.974714272596)
     
fwd_lconstr(2,3)..  f(2,3) =L= 50 ; (LHS = 46.7532857159315)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 52
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 561


     fwd_lconstr  =L=  forward capacity constraint for line

fwd_lconstr(3,4)..  f(3,4) =L= 20 ; (LHS = 51.9480000019289, INFES = 31.9480000019289 ****)
     
fwd_lconstr(3,5)..  f(3,5) =L= 50 ; (LHS = 88.3110000030036, INFES = 38.3110000030036 ****)
     
fwd_lconstr(4,5)..  f(4,5) =L= 50 ; (LHS = 36.3630000010749)
     
fwd_lconstr(4,6)..  f(4,6) =L= 500 ; (LHS = -553.246714285173)
     
fwd_lconstr(5,6)..  f(5,6) =L= 200 ; (LHS = -589.610428571962)
     

---- bwd_lconstr  =G=  backward capacity constraint for line

bwd_lconstr(1,2)..  f(1,2) =G= -500 ; (LHS = -524.675285704742, INFES = 24.6752857047419 ****)
     
bwd_lconstr(1,3)..  f(1,3) =G= -450 ; (LHS = -477.922714274525, INFES = 27.9227142745248 ****)
     
bwd_lconstr(1,4)..  f(1,4) =G= -400 ; (LHS = -425.974714272596, INFES = 25.9747142725958 ****)
     
bwd_lconstr(2,3)..  f(2,3) =G= -50 ; (LHS = 46.7532857159315)
     
bwd_lconstr(3,4)..  f(3,4) =G= -20 ; (LHS = 51.9480000019289)
     
bwd_lconstr(3,5)..  f(3,5) =G= -50 ; (LHS = 88.3110000030036)
     
bwd_lconstr(4,5)..  f(4,5) =G= -50 ; (LHS = 36.3630000010749)
     
bwd_lconstr(4,6)..  f(4,6) =G= -500 ; (LHS = -553.246714285173, INFES = 53.2467142851733 ****)
     
bwd_lconstr(5,6)..  f(5,6) =G= -200 ; (LHS = -589.610428571962, INFES = 389.610428571962 ****)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 53
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 561


---- qg  spot market generation quantity

qg(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qg(2,1)
                (.LO, .L, .UP, .M = 0, 571.428571420673, +INF, 0)
      (28.5714) tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qg(3,1)
                (.LO, .L, .UP, .M = 0, 571.428571420669, +INF, 0)
      (28.5714) tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qg(4,1)
                (.LO, .L, .UP, .M = 0, 571.428571413752, +INF, 0)
      (28.5714) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qg(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qg(6,1)
                (.LO, .L, .UP, .M = 0, 1142.85714285714, +INF, 0)
      (28.5714) tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qug  upregulation generation quantity

qug(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
        1       gen_redisp_up(1,1)
       -1       net_inj(1)

qug(2,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 54
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 561


     qug  upregulation generation quantity

                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
      (28.5714) tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qug(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
      (28.5714) tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qug(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
      (28.5714) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qug(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
        1       gen_redisp_up(5,1)
       -1       net_inj(5)

qug(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
      (28.5714) tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qdg  downregulation generation quantity

qdg(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
       -1       gcon_up(1,1)
       -1       gcon_lo(1,1)
        1       gen_redisp_down(1,1)
        1       net_inj(1)

qdg(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
     (-28.5714) tot_surplus
       -1       gcon_up(2,1)
       -1       gcon_lo(2,1)
        1       net_inj(2)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 55
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 561


     qdg  downregulation generation quantity

qdg(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
     (-28.5714) tot_surplus
       -1       gcon_up(3,1)
       -1       gcon_lo(3,1)
        1       net_inj(3)

qdg(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
     (-28.5714) tot_surplus
       -1       gcon_up(4,1)
       -1       gcon_lo(4,1)
        1       net_inj(4)

qdg(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
       -1       gcon_up(5,1)
       -1       gcon_lo(5,1)
        1       gen_redisp_down(5,1)
        1       net_inj(5)

qdg(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
     (-28.5714) tot_surplus
       -1       gcon_up(6,1)
       -1       gcon_lo(6,1)
        1       net_inj(6)


---- qc  spot market consumption quantity

qc(1,1)
                (.LO, .L, .UP, .M = 0, 1428.57142853763, +INF, 0)
     (-28.5714) tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qc(4,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 56
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 561


     qc  spot market consumption quantity

                (.LO, .L, .UP, .M = 0, 714.285714284326, +INF, 0)
     (-28.5714) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qc(5,1)
                (.LO, .L, .UP, .M = 0, 714.285714290327, +INF, 0)
     (-28.5714) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)


---- quc  upregulation consumption quantity

quc(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
      (28.5714) tot_surplus
       -1       ccon_up(1,1)
       -1       ccon_lo(1,1)
       -1       net_inj(1)

quc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
       -1       ccon_up(2,1)
       -1       ccon_lo(2,1)
        1       con_redisp_up(2,1)
       -1       net_inj(2)

quc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
       -1       ccon_up(3,1)
       -1       ccon_lo(3,1)
        1       con_redisp_up(3,1)
       -1       net_inj(3)

quc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
      (28.5714) tot_surplus
       -1       ccon_up(4,1)
       -1       ccon_lo(4,1)
       -1       net_inj(4)

quc(5,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 57
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 561


     quc  upregulation consumption quantity

                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
      (28.5714) tot_surplus
       -1       ccon_up(5,1)
       -1       ccon_lo(5,1)
       -1       net_inj(5)

quc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
       -1       ccon_up(6,1)
       -1       ccon_lo(6,1)
        1       con_redisp_up(6,1)
       -1       net_inj(6)


---- qdc  downregulation consumption quantity

qdc(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
     (-28.5714) tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qdc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       con_redisp_down(2,1)
        1       net_inj(2)

qdc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       con_redisp_down(3,1)
        1       net_inj(3)

qdc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
     (-28.5714) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qdc(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
     (-28.5714) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 58
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 561


     qdc  downregulation consumption quantity

qdc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       con_redisp_down(6,1)
        1       net_inj(6)


---- q  net injection quantity

q(1)
                (.LO, .L, .UP, .M = -INF, -1428.57142853763, +INF, 0)
        1       net_inj(1)
        1       sum_NI

q(2)
                (.LO, .L, .UP, .M = -INF, 571.428571420673, +INF, 0)
        1       net_inj(2)
        1       sum_NI
        0.6182  ptdf_flow(1,2)
        0.2364  ptdf_flow(1,3)
        0.1455  ptdf_flow(1,4)
       -0.3818  ptdf_flow(2,3)
       -0.0909  ptdf_flow(3,4)
       -0.0545  ptdf_flow(3,5)
        0.0364  ptdf_flow(4,5)
        0.0182  ptdf_flow(4,6)
       -0.0182  ptdf_flow(5,6)

q(3)
                (.LO, .L, .UP, .M = -INF, 571.428571420669, +INF, 0)
        1       net_inj(3)
        1       sum_NI
        0.2364  ptdf_flow(1,2)
        0.4727  ptdf_flow(1,3)
        0.2909  ptdf_flow(1,4)
        0.2364  ptdf_flow(2,3)
       -0.1818  ptdf_flow(3,4)
       -0.1091  ptdf_flow(3,5)
        0.0727  ptdf_flow(4,5)
        0.0364  ptdf_flow(4,6)
       -0.0364  ptdf_flow(5,6)

q(4)
                (.LO, .L, .UP, .M = -INF, -142.857142870574, +INF, 0)
        1       net_inj(4)
        1       sum_NI
        0.1455  ptdf_flow(1,2)
        0.2909  ptdf_flow(1,3)
        0.5636  ptdf_flow(1,4)
        0.1455  ptdf_flow(2,3)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 59
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 561


     q  net injection quantity

        0.2727  ptdf_flow(3,4)
        0.1636  ptdf_flow(3,5)
       -0.1091  ptdf_flow(4,5)
       -0.0545  ptdf_flow(4,6)
        0.0545  ptdf_flow(5,6)

q(5)
                (.LO, .L, .UP, .M = -INF, -714.285714290327, +INF, 0)
        1       net_inj(5)
        1       sum_NI
        0.1818  ptdf_flow(1,2)
        0.3636  ptdf_flow(1,3)
        0.4545  ptdf_flow(1,4)
        0.1818  ptdf_flow(2,3)
        0.0909  ptdf_flow(3,4)
        0.4545  ptdf_flow(3,5)
        0.3636  ptdf_flow(4,5)
        0.1818  ptdf_flow(4,6)
       -0.1818  ptdf_flow(5,6)

q(6)
                (.LO, .L, .UP, .M = -INF, 1142.85714285714, +INF, 0)
        1       net_inj(6)
        1       sum_NI
        0.1636  ptdf_flow(1,2)
        0.3273  ptdf_flow(1,3)
        0.5091  ptdf_flow(1,4)
        0.1636  ptdf_flow(2,3)
        0.1818  ptdf_flow(3,4)
        0.3091  ptdf_flow(3,5)
        0.1273  ptdf_flow(4,5)
        0.5636  ptdf_flow(4,6)
        0.4364  ptdf_flow(5,6)


---- f  line flow

f(1,2)
                (.LO, .L, .UP, .M = -INF, -524.675285704742, +INF, 0)
        1       ptdf_flow(1,2)
        1       fwd_lconstr(1,2)
        1       bwd_lconstr(1,2)

f(1,3)
                (.LO, .L, .UP, .M = -INF, -477.922714274525, +INF, 0)
        1       ptdf_flow(1,3)
        1       fwd_lconstr(1,3)
        1       bwd_lconstr(1,3)

f(1,4)
                (.LO, .L, .UP, .M = -INF, -425.974714272596, +INF, 0)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 60
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 561


     f  line flow

        1       ptdf_flow(1,4)
        1       fwd_lconstr(1,4)
        1       bwd_lconstr(1,4)

f(2,3)
                (.LO, .L, .UP, .M = -INF, 46.7532857159315, +INF, 0)
        1       ptdf_flow(2,3)
        1       fwd_lconstr(2,3)
        1       bwd_lconstr(2,3)

f(3,4)
                (.LO, .L, .UP, .M = -INF, 51.9480000019289, +INF, 0)
        1       ptdf_flow(3,4)
        1       fwd_lconstr(3,4)
        1       bwd_lconstr(3,4)

f(3,5)
                (.LO, .L, .UP, .M = -INF, 88.3110000030036, +INF, 0)
        1       ptdf_flow(3,5)
        1       fwd_lconstr(3,5)
        1       bwd_lconstr(3,5)

f(4,5)
                (.LO, .L, .UP, .M = -INF, 36.3630000010749, +INF, 0)
        1       ptdf_flow(4,5)
        1       fwd_lconstr(4,5)
        1       bwd_lconstr(4,5)

f(4,6)
                (.LO, .L, .UP, .M = -INF, -553.246714285173, +INF, 0)
        1       ptdf_flow(4,6)
        1       fwd_lconstr(4,6)
        1       bwd_lconstr(4,6)

f(5,6)
                (.LO, .L, .UP, .M = -INF, -589.610428571962, +INF, 0)
        1       ptdf_flow(5,6)
        1       fwd_lconstr(5,6)
        1       bwd_lconstr(5,6)


---- surplus  total benefit minus total cost

surplus
                (.LO, .L, .UP, .M = -INF, 142857.142857144, +INF, 0)
        1       tot_surplus

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 61
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE redispatch Using NLP From line 561


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS           69
BLOCKS OF VARIABLES           9     SINGLE VARIABLES           52
NON ZERO ELEMENTS           224     NON LINEAR N-Z             21
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH                 156


GENERATION TIME      =        0.032 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.032 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 62
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE redispatch Using NLP From line 561


               S O L V E      S U M M A R Y

     MODEL   redispatch          OBJECTIVE  surplus
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  MINOS               FROM LINE  561

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE           122539.6208

 RESOURCE USAGE, LIMIT          0.015      1000.000
 ITERATION COUNT, LIMIT        12    2000000000
 EVALUATION ERRORS              0             0

GAMS/MINOS       30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Win
M I N O S  5.6      (Jul 2016)

    GAMS/MINOS 5.6, Large Scale Nonlinear Solver
    B. A. Murtagh, University of New South Wales
    P. E. Gill, University of California at San Diego,
    W. Murray, M. A. Saunders, and M. H. Wright,
    Systems Optimization Laboratory, Stanford University

 Work space allocated           --     0.87 Mb

 EXIT - Optimal Solution found, objective:        122539.6



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 63
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal Using NLP From line 645


---- tot_surplus  =E=  definition of total surplus

tot_surplus..  (26.000015499969)*qg(2,1) + (21.9999880000035)*qg(3,1) + (41.3333310000183)*qg(4,1) + (9.25000774998451)*qg(6,1) + (26.000015499969)*qug(2,1) + (21.9999880000035)*qug(3,1) + (41.3333310000183)*qug(4,1) + (9.25000774998451)*qug(6,1)
     
      - (26.000015499969)*qdg(2,1) - (21.9999880000035)*qdg(3,1) - (41.3333310000183)*qdg(4,1) - (9.25000774998451)*qdg(6,1) - (35.500024500084)*qc(1,1) - (41.3333310000183)*qc(4,1) - (71.999919999889)*qc(5,1) + (35.500024500084)*quc(1,1)
     
      + (41.3333310000183)*quc(4,1) + (71.999919999889)*quc(5,1) - (35.500024500084)*qdc(1,1) - (41.3333310000183)*qdc(4,1) - (71.999919999889)*qdc(5,1) + surplus =E= 0 ; (LHS = 0)
     

---- gcon_up  =L=  upper bound on final generation

gcon_up(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =L= 0 ; (LHS = 0)
     
gcon_up(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =L= 10000 ; (LHS = 520.000309999381)
     
gcon_up(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =L= 10000 ; (LHS = 439.99976000007)
     
gcon_up(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =L= 10000 ; (LHS = 826.666620000367)
     
gcon_up(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =L= 0 ; (LHS = 0)
     
gcon_up(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =L= 10000 ; (LHS = 370.000309999381)
     

---- gcon_lo  =G=  lower bound on final generation

gcon_lo(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =G= 0 ; (LHS = 0)
     
gcon_lo(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =G= 0 ; (LHS = 520.00030999938)
     
gcon_lo(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =G= 0 ; (LHS = 439.99976000007)
     
gcon_lo(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =G= 0 ; (LHS = 826.666620000367)
     
gcon_lo(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =G= 0 ; (LHS = 0)
     
gcon_lo(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =G= 0 ; (LHS = 370.00030999938)
     

---- ccon_up  =L=  upper bound on final consumption

ccon_up(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =L= 10000 ; (LHS = 1289.99950999832)
     
ccon_up(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =L= 0 ; (LHS = 0)
     
ccon_up(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =L= 0 ; (LHS = 0)
     
ccon_up(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =L= 10000 ; (LHS = 586.666689999816)
     
ccon_up(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =L= 10000 ; (LHS = 280.000800001111)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 64
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal Using NLP From line 645


     ccon_up  =L=  upper bound on final consumption

ccon_up(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =L= 0 ; (LHS = 0)
     

---- ccon_lo  =G=  lower bound on final consumption

ccon_lo(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =G= 0 ; (LHS = 1289.99950999832)
     
ccon_lo(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =G= 0 ; (LHS = 0)
     
ccon_lo(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =G= 0 ; (LHS = 0)
     
ccon_lo(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =G= 0 ; (LHS = 586.666689999817)
     
ccon_lo(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =G= 0 ; (LHS = 280.00080000111)
     
ccon_lo(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =G= 0 ; (LHS = 0)
     

---- net_inj  =E=  net injection in every node

net_inj(1)..  - qg(1,1) - qug(1,1) + qdg(1,1) + qc(1,1) - quc(1,1) + qdc(1,1) + q(1) =E= 0 ; (LHS = 2.27373675443232E-13, INFES = 2.27373675443232E-13 ****)
     
net_inj(2)..  - qg(2,1) - qug(2,1) + qdg(2,1) + qc(2,1) - quc(2,1) + qdc(2,1) + q(2) =E= 0 ; (LHS = 0)
     
net_inj(3)..  - qg(3,1) - qug(3,1) + qdg(3,1) + qc(3,1) - quc(3,1) + qdc(3,1) + q(3) =E= 0 ; (LHS = 0)
     
net_inj(4)..  - qg(4,1) - qug(4,1) + qdg(4,1) + qc(4,1) - quc(4,1) + qdc(4,1) + q(4) =E= 0 ; (LHS = 1.13686837721616E-13, INFES = 1.13686837721616E-13 ****)
     
net_inj(5)..  - qg(5,1) - qug(5,1) + qdg(5,1) + qc(5,1) - quc(5,1) + qdc(5,1) + q(5) =E= 0 ; (LHS = 0)
     
net_inj(6)..  - qg(6,1) - qug(6,1) + qdg(6,1) + qc(6,1) - quc(6,1) + qdc(6,1) + q(6) =E= 0 ; (LHS = 0)
     

---- sum_NI  =E=  sum of net injections

sum_NI..  q(1) + q(2) + q(3) + q(4) + q(5) + q(6) =E= 0 ; (LHS = -4.89421836391557E-11, INFES = 4.89421836391557E-11 ****)
     

---- zflow  =E=  links zonal injections to zonal flows

zflow(1)..  q(1) + q(2) + q(3) - f(1,4) - f(3,4) - f(3,5) =E= 0 ; (LHS = 0.00056000113090704, INFES = 0.00056000113090704 ****)
     
zflow(2)..  q(4) + q(5) + q(6) + f(1,4) + f(3,4) + f(3,5) =E= 0 ; (LHS = -0.000560001179849223, INFES = 0.000560001179849223 ****)
     

---- fwd_zconstr  =L=  forward capacity constraint for zonal interconnection

fwd_zconstr(1,2)..  f(1,4) + f(3,4) + f(3,5) =L= 300 ; (LHS = -330)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 65
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal Using NLP From line 645


---- bwd_zconstr  =G=  backward capacity constraint for zonal interconnection

bwd_zconstr(1,2)..  f(1,4) + f(3,4) + f(3,5) =G= -300 ; (LHS = -330, INFES = 30.0000000000001 ****)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 66
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal Using NLP From line 645


---- qg  spot market generation quantity

qg(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qg(2,1)
                (.LO, .L, .UP, .M = 0, 520.00030999938, +INF, 0)
      (26)      tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qg(3,1)
                (.LO, .L, .UP, .M = 0, 439.99976000007, +INF, 0)
      (22)      tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qg(4,1)
                (.LO, .L, .UP, .M = 0, 826.666620000367, +INF, 0)
      (41.3333) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qg(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qg(6,1)
                (.LO, .L, .UP, .M = 0, 370.00030999938, +INF, 0)
       (9.25)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qug  upregulation generation quantity

qug(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qug(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 1.06581410364015E-14)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 67
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal Using NLP From line 645


     qug  upregulation generation quantity

      (26)      tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qug(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -3.5527136788005E-15)
      (22)      tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qug(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 7.105427357601E-15)
      (41.3333) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qug(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 1.4210854715202E-14)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qug(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 8.88178419700125E-15)
       (9.25)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qdg  downregulation generation quantity

qdg(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
       -1       gcon_up(1,1)
       -1       gcon_lo(1,1)
        1       net_inj(1)

qdg(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -1.06581410364015E-14)
     (-26)      tot_surplus
       -1       gcon_up(2,1)
       -1       gcon_lo(2,1)
        1       net_inj(2)

qdg(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 3.5527136788005E-15)
     (-22)      tot_surplus
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 68
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal Using NLP From line 645


     qdg  downregulation generation quantity

       -1       gcon_up(3,1)
       -1       gcon_lo(3,1)
        1       net_inj(3)

qdg(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -7.105427357601E-15)
     (-41.3333) tot_surplus
       -1       gcon_up(4,1)
       -1       gcon_lo(4,1)
        1       net_inj(4)

qdg(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -1.4210854715202E-14)
       -1       gcon_up(5,1)
       -1       gcon_lo(5,1)
        1       net_inj(5)

qdg(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -8.88178419700125E-15)
      (-9.25)   tot_surplus
       -1       gcon_up(6,1)
       -1       gcon_lo(6,1)
        1       net_inj(6)


---- qc  spot market consumption quantity

qc(1,1)
                (.LO, .L, .UP, .M = 0, 1289.99950999832, +INF, 0)
     (-35.5)    tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qc(4,1)
                (.LO, .L, .UP, .M = 0, 586.666689999817, +INF, 0)
     (-41.3333) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 69
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal Using NLP From line 645


     qc  spot market consumption quantity

        1       net_inj(4)

qc(5,1)
                (.LO, .L, .UP, .M = 0, 280.00080000111, +INF, 0)
     (-71.9999) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)


---- quc  upregulation consumption quantity

quc(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
      (35.5)    tot_surplus
       -1       ccon_up(1,1)
       -1       ccon_lo(1,1)
       -1       net_inj(1)

quc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 7.105427357601E-15)
       -1       ccon_up(2,1)
       -1       ccon_lo(2,1)
       -1       net_inj(2)

quc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -1.06581410364015E-14)
       -1       ccon_up(3,1)
       -1       ccon_lo(3,1)
       -1       net_inj(3)

quc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 7.105427357601E-15)
      (41.3333) tot_surplus
       -1       ccon_up(4,1)
       -1       ccon_lo(4,1)
       -1       net_inj(4)

quc(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
      (71.9999) tot_surplus
       -1       ccon_up(5,1)
       -1       ccon_lo(5,1)
       -1       net_inj(5)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 70
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal Using NLP From line 645


     quc  upregulation consumption quantity

quc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
       -1       ccon_up(6,1)
       -1       ccon_lo(6,1)
       -1       net_inj(6)


---- qdc  downregulation consumption quantity

qdc(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
     (-35.5)    tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qdc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -7.105427357601E-15)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qdc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 1.06581410364015E-14)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qdc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -7.105427357601E-15)
     (-41.3333) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qdc(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
     (-71.9999) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qdc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 71
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal Using NLP From line 645


---- q  net injection quantity

q(1)
                (.LO, .L, .UP, .M = -INF, -1289.99950999832, +INF, 0)
        1       net_inj(1)
        1       sum_NI
        1       zflow(1)

q(2)
                (.LO, .L, .UP, .M = -INF, 520.00030999938, +INF, 0)
        1       net_inj(2)
        1       sum_NI
        1       zflow(1)

q(3)
                (.LO, .L, .UP, .M = -INF, 439.99976000007, +INF, 0)
        1       net_inj(3)
        1       sum_NI
        1       zflow(1)

q(4)
                (.LO, .L, .UP, .M = -INF, 239.99993000055, +INF, 0)
        1       net_inj(4)
        1       sum_NI
        1       zflow(2)

q(5)
                (.LO, .L, .UP, .M = -INF, -280.00080000111, +INF, 0)
        1       net_inj(5)
        1       sum_NI
        1       zflow(2)

q(6)
                (.LO, .L, .UP, .M = -INF, 370.00030999938, +INF, 0)
        1       net_inj(6)
        1       sum_NI
        1       zflow(2)


---- f  line flow

f(1,4)
                (.LO, .L, .UP, .M = -INF, -400, +INF, 0)
       -1       zflow(1)
        1       zflow(2)
        1       fwd_zconstr(1,2)
        1       bwd_zconstr(1,2)

f(3,4)
                (.LO, .L, .UP, .M = -INF, 20, +INF, 0)
       -1       zflow(1)
        1       zflow(2)
        1       fwd_zconstr(1,2)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 72
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal Using NLP From line 645


     f  line flow

        1       bwd_zconstr(1,2)

f(3,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
       -1       zflow(1)
        1       zflow(2)
        1       fwd_zconstr(1,2)
        1       bwd_zconstr(1,2)


---- surplus  total benefit minus total cost

surplus
                (.LO, .L, .UP, .M = -INF, 122539.620784141, +INF, 0)
        1       tot_surplus

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 73
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE zonal Using NLP From line 645


MODEL STATISTICS

BLOCKS OF EQUATIONS          10     SINGLE EQUATIONS           36
BLOCKS OF VARIABLES           9     SINGLE VARIABLES           46
NON ZERO ELEMENTS           160     NON LINEAR N-Z             21
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH                 156


GENERATION TIME      =        0.015 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.015 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 74
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE zonal Using NLP From line 645


               S O L V E      S U M M A R Y

     MODEL   zonal               OBJECTIVE  surplus
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  MINOS               FROM LINE  645

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE           142857.1429

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT        14    2000000000
 EVALUATION ERRORS              0             0

GAMS/MINOS       30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Win
M I N O S  5.6      (Jul 2016)

    GAMS/MINOS 5.6, Large Scale Nonlinear Solver
    B. A. Murtagh, University of New South Wales
    P. E. Gill, University of California at San Diego,
    W. Murray, M. A. Saunders, and M. H. Wright,
    Systems Optimization Laboratory, Stanford University

 Work space allocated           --     0.84 Mb

 EXIT - Optimal Solution found, objective:        142857.1



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
                             1  PROJECTED
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 75
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 723


---- tot_surplus  =E=  definition of total surplus

tot_surplus..  (28.5714285714282)*qg(2,1) + (28.5714285714283)*qg(3,1) + (28.5714285714282)*qg(4,1) + (28.5714285714282)*qg(6,1) + (28.5714285714282)*qug(2,1) + (28.5714285714283)*qug(3,1) + (28.5714285714282)*qug(4,1) + (28.5714285714282)*qug(6,1)
     
      - (28.5714285714282)*qdg(2,1) - (28.5714285714283)*qdg(3,1) - (28.5714285714282)*qdg(4,1) - (28.5714285714282)*qdg(6,1) - (28.5714285714281)*qc(1,1) - (28.5714285714282)*qc(4,1) - (28.5714285714282)*qc(5,1) + (28.5714285714281)*quc(1,1)
     
      + (28.5714285714282)*quc(4,1) + (28.5714285714282)*quc(5,1) - (28.5714285714281)*qdc(1,1) - (28.5714285714282)*qdc(4,1) - (28.5714285714282)*qdc(5,1) + surplus =E= 0 ; (LHS = 0)
     

---- gcon_up  =L=  upper bound on final generation

gcon_up(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =L= 0 ; (LHS = 0)
     
gcon_up(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =L= 10000 ; (LHS = 571.428571428565)
     
gcon_up(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =L= 10000 ; (LHS = 571.428571428567)
     
gcon_up(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =L= 10000 ; (LHS = 571.428571428563)
     
gcon_up(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =L= 0 ; (LHS = 0)
     
gcon_up(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =L= 10000 ; (LHS = 1142.85714285713)
     

---- gcon_lo  =G=  lower bound on final generation

gcon_lo(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =G= 0 ; (LHS = 0)
     
gcon_lo(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =G= 0 ; (LHS = 571.428571428564)
     
gcon_lo(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =G= 0 ; (LHS = 571.428571428566)
     
gcon_lo(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =G= 0 ; (LHS = 571.428571428564)
     
gcon_lo(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =G= 0 ; (LHS = 0)
     
gcon_lo(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =G= 0 ; (LHS = 1142.85714285713)
     

---- ccon_up  =L=  upper bound on final consumption

ccon_up(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =L= 10000 ; (LHS = 1428.57142857144)
     
ccon_up(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =L= 0 ; (LHS = 0)
     
ccon_up(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =L= 0 ; (LHS = 0)
     
ccon_up(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =L= 10000 ; (LHS = 714.285714285717)
     
ccon_up(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =L= 10000 ; (LHS = 714.285714285717)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 76
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 723


     ccon_up  =L=  upper bound on final consumption

ccon_up(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =L= 0 ; (LHS = 0)
     

---- ccon_lo  =G=  lower bound on final consumption

ccon_lo(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =G= 0 ; (LHS = 1428.57142857144)
     
ccon_lo(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =G= 0 ; (LHS = 0)
     
ccon_lo(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =G= 0 ; (LHS = 0)
     
ccon_lo(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =G= 0 ; (LHS = 714.285714285718)
     
ccon_lo(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =G= 0 ; (LHS = 714.285714285718)
     
ccon_lo(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =G= 0 ; (LHS = 0)
     

---- gen_redisp_down  =E=  includes generation participating in downward regulation market

gen_redisp_down(1,1)..  qdg(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_down(5,1)..  qdg(5,1) =E= 0 ; (LHS = 0)
     

---- gen_redisp_up  =E=  includes generation participating in upward regulation market

gen_redisp_up(1,1)..  qug(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_up(5,1)..  qug(5,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_down  =E=  includes consumption participating in downward regulation market

con_redisp_down(2,1)..  qdc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(3,1)..  qdc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(6,1)..  qdc(6,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_up  =E=  includes consumption participating in upward regulation market

con_redisp_up(2,1)..  quc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(3,1)..  quc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(6,1)..  quc(6,1) =E= 0 ; (LHS = 0)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 77
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 723


---- net_inj  =E=  net injection in every node

net_inj(1)..  - qg(1,1) - qug(1,1) + qdg(1,1) + qc(1,1) - quc(1,1) + qdc(1,1) + q(1) =E= 0 ; (LHS = 2.27373675443232E-13, INFES = 2.27373675443232E-13 ****)
     
net_inj(2)..  - qg(2,1) - qug(2,1) + qdg(2,1) + qc(2,1) - quc(2,1) + qdc(2,1) + q(2) =E= 0 ; (LHS = 0)
     
net_inj(3)..  - qg(3,1) - qug(3,1) + qdg(3,1) + qc(3,1) - quc(3,1) + qdc(3,1) + q(3) =E= 0 ; (LHS = 1.13686837721616E-13, INFES = 1.13686837721616E-13 ****)
     
net_inj(4)..  - qg(4,1) - qug(4,1) + qdg(4,1) + qc(4,1) - quc(4,1) + qdc(4,1) + q(4) =E= 0 ; (LHS = 0)
     
net_inj(5)..  - qg(5,1) - qug(5,1) + qdg(5,1) + qc(5,1) - quc(5,1) + qdc(5,1) + q(5) =E= 0 ; (LHS = 1.13686837721616E-13, INFES = 1.13686837721616E-13 ****)
     
net_inj(6)..  - qg(6,1) - qug(6,1) + qdg(6,1) + qc(6,1) - quc(6,1) + qdc(6,1) + q(6) =E= 0 ; (LHS = 0)
     

---- sum_NI  =E=  sum of net injections

sum_NI..  q(1) + q(2) + q(3) + q(4) + q(5) + q(6) =E= 0 ; (LHS = -4.93400875711814E-11, INFES = 4.93400875711814E-11 ****)
     

---- ptdf_flow  =E=  calculates physical flows over given line

ptdf_flow(1,2)..  0.618182*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(1,2) =E= 0 ; (LHS = 54.6749757148957, INFES = 54.6749757148957 ****)
     
ptdf_flow(1,3)..  0.236364*q(2) + 0.472727*q(3) + 0.290909*q(4) + 0.363636*q(5) + 0.327273*q(6) + f(1,3) =E= 0 ; (LHS = 57.9227142857013, INFES = 57.9227142857013 ****)
     
ptdf_flow(1,4)..  0.145455*q(2) + 0.290909*q(3) + 0.563636*q(4) + 0.454545*q(5) + 0.509091*q(6) + f(1,4) =E= 0 ; (LHS = 70.2604285713905, INFES = 70.2604285713905 ****)
     
ptdf_flow(2,3)..  - 0.381818*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(2,3) =E= 0 ; (LHS = 3.24671428571133, INFES = 3.24671428571133 ****)
     
ptdf_flow(3,4)..  - 0.090909*q(2) - 0.181818*q(3) + 0.272727*q(4) + 0.090909*q(5) + 0.181818*q(6) + f(3,4) =E= 0 ; (LHS = -31.9480000000043, INFES = 31.9480000000043 ****)
     
ptdf_flow(3,5)..  - 0.054545*q(2) - 0.109091*q(3) + 0.163636*q(4) + 0.454545*q(5) + 0.309091*q(6) + f(3,5) =E= 0 ; (LHS = -38.3110000000068, INFES = 38.3110000000068 ****)
     
ptdf_flow(4,5)..  0.036364*q(2) + 0.072727*q(3) - 0.109091*q(4) + 0.363636*q(5) + 0.127273*q(6) + f(4,5) =E= 0 ; (LHS = -6.36300000000248, INFES = 6.36300000000248 ****)
     
ptdf_flow(4,6)..  0.018182*q(2) + 0.036364*q(3) - 0.054545*q(4) + 0.181818*q(5) + 0.563636*q(6) + f(4,6) =E= 0 ; (LHS = 383.246404286326, INFES = 383.246404286326 ****)
     
ptdf_flow(5,6)..  - 0.018182*q(2) - 0.036364*q(3) + 0.054545*q(4) - 0.181818*q(5) + 0.436364*q(6) + f(5,6) =E= 0 ; (LHS = 389.610428571423, INFES = 389.610428571423 ****)
     

---- fwd_lconstr  =L=  forward capacity constraint for line

fwd_lconstr(1,2)..  f(1,2) =L= 500 ; (LHS = -470.00030999938)
     
fwd_lconstr(1,3)..  f(1,3) =L= 450 ; (LHS = -420)
     
fwd_lconstr(1,4)..  f(1,4) =L= 400 ; (LHS = -355.714285714307)
     
fwd_lconstr(2,3)..  f(2,3) =L= 50 ; (LHS = 50)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 78
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 723


     fwd_lconstr  =L=  forward capacity constraint for line

fwd_lconstr(3,4)..  f(3,4) =L= 20 ; (LHS = 20)
     
fwd_lconstr(3,5)..  f(3,5) =L= 50 ; (LHS = 50)
     
fwd_lconstr(4,5)..  f(4,5) =L= 50 ; (LHS = 30)
     
fwd_lconstr(4,6)..  f(4,6) =L= 500 ; (LHS = -170.00030999938)
     
fwd_lconstr(5,6)..  f(5,6) =L= 200 ; (LHS = -200)
     

---- bwd_lconstr  =G=  backward capacity constraint for line

bwd_lconstr(1,2)..  f(1,2) =G= -500 ; (LHS = -470.00030999938)
     
bwd_lconstr(1,3)..  f(1,3) =G= -450 ; (LHS = -420)
     
bwd_lconstr(1,4)..  f(1,4) =G= -400 ; (LHS = -355.714285714307)
     
bwd_lconstr(2,3)..  f(2,3) =G= -50 ; (LHS = 50)
     
bwd_lconstr(3,4)..  f(3,4) =G= -20 ; (LHS = 20)
     
bwd_lconstr(3,5)..  f(3,5) =G= -50 ; (LHS = 50)
     
bwd_lconstr(4,5)..  f(4,5) =G= -50 ; (LHS = 30)
     
bwd_lconstr(4,6)..  f(4,6) =G= -500 ; (LHS = -170.00030999938)
     
bwd_lconstr(5,6)..  f(5,6) =G= -200 ; (LHS = -200)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 79
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 723


---- qg  spot market generation quantity

qg(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qg(2,1)
                (.LO, .L, .UP, .M = 571.428571428564, 571.428571428564, 571.428571428564, 0)
      (28.5714) tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qg(3,1)
                (.LO, .L, .UP, .M = 571.428571428566, 571.428571428566, 571.428571428566, 0)
      (28.5714) tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qg(4,1)
                (.LO, .L, .UP, .M = 571.428571428564, 571.428571428564, 571.428571428564, 0)
      (28.5714) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qg(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qg(6,1)
                (.LO, .L, .UP, .M = 1142.85714285713, 1142.85714285713, 1142.85714285713, 0)
      (28.5714) tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qug  upregulation generation quantity

qug(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
        1       gen_redisp_up(1,1)
       -1       net_inj(1)

qug(2,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 80
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 723


     qug  upregulation generation quantity

                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (28.5714) tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qug(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (28.5714) tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qug(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 1.77635683940025E-14)
      (28.5714) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qug(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
        1       gen_redisp_up(5,1)
       -1       net_inj(5)

qug(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (28.5714) tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qdg  downregulation generation quantity

qdg(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       gcon_up(1,1)
       -1       gcon_lo(1,1)
        1       gen_redisp_down(1,1)
        1       net_inj(1)

qdg(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-28.5714) tot_surplus
       -1       gcon_up(2,1)
       -1       gcon_lo(2,1)
        1       net_inj(2)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 81
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 723


     qdg  downregulation generation quantity

qdg(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-28.5714) tot_surplus
       -1       gcon_up(3,1)
       -1       gcon_lo(3,1)
        1       net_inj(3)

qdg(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -1.77635683940025E-14)
     (-28.5714) tot_surplus
       -1       gcon_up(4,1)
       -1       gcon_lo(4,1)
        1       net_inj(4)

qdg(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       gcon_up(5,1)
       -1       gcon_lo(5,1)
        1       gen_redisp_down(5,1)
        1       net_inj(5)

qdg(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-28.5714) tot_surplus
       -1       gcon_up(6,1)
       -1       gcon_lo(6,1)
        1       net_inj(6)


---- qc  spot market consumption quantity

qc(1,1)
                (.LO, .L, .UP, .M = 1428.57142857144, 1428.57142857144, 1428.57142857144, 0)
     (-28.5714) tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qc(4,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 82
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 723


     qc  spot market consumption quantity

                (.LO, .L, .UP, .M = 714.285714285718, 714.285714285718, 714.285714285718, 0)
     (-28.5714) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qc(5,1)
                (.LO, .L, .UP, .M = 714.285714285718, 714.285714285718, 714.285714285718, 0)
     (-28.5714) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)


---- quc  upregulation consumption quantity

quc(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (28.5714) tot_surplus
       -1       ccon_up(1,1)
       -1       ccon_lo(1,1)
       -1       net_inj(1)

quc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       ccon_up(2,1)
       -1       ccon_lo(2,1)
        1       con_redisp_up(2,1)
       -1       net_inj(2)

quc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       ccon_up(3,1)
       -1       ccon_lo(3,1)
        1       con_redisp_up(3,1)
       -1       net_inj(3)

quc(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (28.5714) tot_surplus
       -1       ccon_up(4,1)
       -1       ccon_lo(4,1)
       -1       net_inj(4)

quc(5,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 83
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 723


     quc  upregulation consumption quantity

                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (28.5714) tot_surplus
       -1       ccon_up(5,1)
       -1       ccon_lo(5,1)
       -1       net_inj(5)

quc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       ccon_up(6,1)
       -1       ccon_lo(6,1)
        1       con_redisp_up(6,1)
       -1       net_inj(6)


---- qdc  downregulation consumption quantity

qdc(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-28.5714) tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qdc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       con_redisp_down(2,1)
        1       net_inj(2)

qdc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       con_redisp_down(3,1)
        1       net_inj(3)

qdc(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-28.5714) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qdc(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-28.5714) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 84
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 723


     qdc  downregulation consumption quantity

qdc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       con_redisp_down(6,1)
        1       net_inj(6)


---- q  net injection quantity

q(1)
                (.LO, .L, .UP, .M = -INF, -1428.57142857144, +INF, 0)
        1       net_inj(1)
        1       sum_NI

q(2)
                (.LO, .L, .UP, .M = -INF, 571.428571428564, +INF, -1.20792265079217E-13)
        1       net_inj(2)
        1       sum_NI
        0.6182  ptdf_flow(1,2)
        0.2364  ptdf_flow(1,3)
        0.1455  ptdf_flow(1,4)
       -0.3818  ptdf_flow(2,3)
       -0.0909  ptdf_flow(3,4)
       -0.0545  ptdf_flow(3,5)
        0.0364  ptdf_flow(4,5)
        0.0182  ptdf_flow(4,6)
       -0.0182  ptdf_flow(5,6)

q(3)
                (.LO, .L, .UP, .M = -INF, 571.428571428567, +INF, -2.23820961764432E-13)
        1       net_inj(3)
        1       sum_NI
        0.2364  ptdf_flow(1,2)
        0.4727  ptdf_flow(1,3)
        0.2909  ptdf_flow(1,4)
        0.2364  ptdf_flow(2,3)
       -0.1818  ptdf_flow(3,4)
       -0.1091  ptdf_flow(3,5)
        0.0727  ptdf_flow(4,5)
        0.0364  ptdf_flow(4,6)
       -0.0364  ptdf_flow(5,6)

q(4)
                (.LO, .L, .UP, .M = -INF, -142.857142857153, +INF, 0)
        1       net_inj(4)
        1       sum_NI
        0.1455  ptdf_flow(1,2)
        0.2909  ptdf_flow(1,3)
        0.5636  ptdf_flow(1,4)
        0.1455  ptdf_flow(2,3)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 85
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 723


     q  net injection quantity

        0.2727  ptdf_flow(3,4)
        0.1636  ptdf_flow(3,5)
       -0.1091  ptdf_flow(4,5)
       -0.0545  ptdf_flow(4,6)
        0.0545  ptdf_flow(5,6)

q(5)
                (.LO, .L, .UP, .M = -INF, -714.285714285718, +INF, 7.105427357601E-15)
        1       net_inj(5)
        1       sum_NI
        0.1818  ptdf_flow(1,2)
        0.3636  ptdf_flow(1,3)
        0.4545  ptdf_flow(1,4)
        0.1818  ptdf_flow(2,3)
        0.0909  ptdf_flow(3,4)
        0.4545  ptdf_flow(3,5)
        0.3636  ptdf_flow(4,5)
        0.1818  ptdf_flow(4,6)
       -0.1818  ptdf_flow(5,6)

q(6)
                (.LO, .L, .UP, .M = -INF, 1142.85714285713, +INF, EPS)
        1       net_inj(6)
        1       sum_NI
        0.1636  ptdf_flow(1,2)
        0.3273  ptdf_flow(1,3)
        0.5091  ptdf_flow(1,4)
        0.1636  ptdf_flow(2,3)
        0.1818  ptdf_flow(3,4)
        0.3091  ptdf_flow(3,5)
        0.1273  ptdf_flow(4,5)
        0.5636  ptdf_flow(4,6)
        0.4364  ptdf_flow(5,6)


---- f  line flow

f(1,2)
                (.LO, .L, .UP, .M = -INF, -470.00030999938, +INF, 0)
        1       ptdf_flow(1,2)
        1       fwd_lconstr(1,2)
        1       bwd_lconstr(1,2)

f(1,3)
                (.LO, .L, .UP, .M = -INF, -420, +INF, 0)
        1       ptdf_flow(1,3)
        1       fwd_lconstr(1,3)
        1       bwd_lconstr(1,3)

f(1,4)
                (.LO, .L, .UP, .M = -INF, -355.714285714307, +INF, 0)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 86
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 723


     f  line flow

        1       ptdf_flow(1,4)
        1       fwd_lconstr(1,4)
        1       bwd_lconstr(1,4)

f(2,3)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow(2,3)
        1       fwd_lconstr(2,3)
        1       bwd_lconstr(2,3)

f(3,4)
                (.LO, .L, .UP, .M = -INF, 20, +INF, 1.20792265079217E-13)
        1       ptdf_flow(3,4)
        1       fwd_lconstr(3,4)
        1       bwd_lconstr(3,4)

f(3,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 1.20792265079217E-13)
        1       ptdf_flow(3,5)
        1       fwd_lconstr(3,5)
        1       bwd_lconstr(3,5)

f(4,5)
                (.LO, .L, .UP, .M = -INF, 30, +INF, 0)
        1       ptdf_flow(4,5)
        1       fwd_lconstr(4,5)
        1       bwd_lconstr(4,5)

f(4,6)
                (.LO, .L, .UP, .M = -INF, -170.00030999938, +INF, 0)
        1       ptdf_flow(4,6)
        1       fwd_lconstr(4,6)
        1       bwd_lconstr(4,6)

f(5,6)
                (.LO, .L, .UP, .M = -INF, -200, +INF, 0)
        1       ptdf_flow(5,6)
        1       fwd_lconstr(5,6)
        1       bwd_lconstr(5,6)


---- surplus  total benefit minus total cost

surplus
                (.LO, .L, .UP, .M = -INF, 142857.142857144, +INF, 0)
        1       tot_surplus

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 87
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE redispatch Using NLP From line 723


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS           69
BLOCKS OF VARIABLES           9     SINGLE VARIABLES           52
NON ZERO ELEMENTS           224     NON LINEAR N-Z             21
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH                 156


GENERATION TIME      =        0.016 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 88
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE redispatch Using NLP From line 723


               S O L V E      S U M M A R Y

     MODEL   redispatch          OBJECTIVE  surplus
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  MINOS               FROM LINE  723

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE            41685.1428

 RESOURCE USAGE, LIMIT          0.015      1000.000
 ITERATION COUNT, LIMIT        22    2000000000
 EVALUATION ERRORS              0             0

GAMS/MINOS       30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Win
M I N O S  5.6      (Jul 2016)

    GAMS/MINOS 5.6, Large Scale Nonlinear Solver
    B. A. Murtagh, University of New South Wales
    P. E. Gill, University of California at San Diego,
    W. Murray, M. A. Saunders, and M. H. Wright,
    Systems Optimization Laboratory, Stanford University

 Work space allocated           --     0.87 Mb

 EXIT - Optimal Solution found, objective:        41685.14



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
                             3  PROJECTED
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 89
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal_sim1 Using NLP From line 799


---- tot_surplus  =E=  definition of total surplus

tot_surplus..  (28.5714285714282)*qg(2,1) + (28.5714285714283)*qg(3,1) + (28.5714285714282)*qg(4,1) + (28.5714285714282)*qg(6,1) + (28.5714285714282)*qug(2,1) + (28.5714285714283)*qug(3,1) + (28.5714285714282)*qug(4,1) + (28.5714285714282)*qug(6,1)
     
      - (28.5714285714282)*qdg(2,1) - (28.5714285714283)*qdg(3,1) - (28.5714285714282)*qdg(4,1) - (28.5714285714282)*qdg(6,1) - (28.5714285714281)*qc(1,1) - (28.5714285714282)*qc(4,1) - (28.5714285714282)*qc(5,1) + (28.5714285714281)*quc(1,1)
     
      + (28.5714285714282)*quc(4,1) + (28.5714285714282)*quc(5,1) - (28.5714285714281)*qdc(1,1) - (28.5714285714282)*qdc(4,1) - (28.5714285714282)*qdc(5,1) + surplus =E= 0 ; (LHS = -101172.000071183, INFES = 101172.000071183 ****)
     

---- gcon_up  =L=  upper bound on final generation

gcon_up(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =L= 0 ; (LHS = 0)
     
gcon_up(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =L= 10000 ; (LHS = 571.428571428565)
     
gcon_up(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =L= 10000 ; (LHS = 571.428571428567)
     
gcon_up(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =L= 10000 ; (LHS = 571.428571428563)
     
gcon_up(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =L= 0 ; (LHS = 0)
     
gcon_up(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =L= 10000 ; (LHS = 1142.85714285713)
     

---- gcon_lo  =G=  lower bound on final generation

gcon_lo(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =G= 0 ; (LHS = 0)
     
gcon_lo(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =G= 0 ; (LHS = 571.428571428564)
     
gcon_lo(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =G= 0 ; (LHS = 571.428571428566)
     
gcon_lo(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =G= 0 ; (LHS = 571.428571428564)
     
gcon_lo(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =G= 0 ; (LHS = 0)
     
gcon_lo(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =G= 0 ; (LHS = 1142.85714285713)
     

---- ccon_up  =L=  upper bound on final consumption

ccon_up(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =L= 10000 ; (LHS = 1428.57142857144)
     
ccon_up(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =L= 0 ; (LHS = 0)
     
ccon_up(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =L= 0 ; (LHS = 0)
     
ccon_up(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =L= 10000 ; (LHS = 714.285714285717)
     
ccon_up(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =L= 10000 ; (LHS = 714.285714285717)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 90
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal_sim1 Using NLP From line 799


     ccon_up  =L=  upper bound on final consumption

ccon_up(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =L= 0 ; (LHS = 0)
     

---- ccon_lo  =G=  lower bound on final consumption

ccon_lo(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =G= 0 ; (LHS = 1428.57142857144)
     
ccon_lo(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =G= 0 ; (LHS = 0)
     
ccon_lo(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =G= 0 ; (LHS = 0)
     
ccon_lo(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =G= 0 ; (LHS = 714.285714285718)
     
ccon_lo(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =G= 0 ; (LHS = 714.285714285718)
     
ccon_lo(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =G= 0 ; (LHS = 0)
     

---- net_inj  =E=  net injection in every node

net_inj(1)..  - qg(1,1) - qug(1,1) + qdg(1,1) + qc(1,1) - quc(1,1) + qdc(1,1) + q(1) =E= 0 ; (LHS = 172.920634907611, INFES = 172.920634907611 ****)
     
net_inj(2)..  - qg(2,1) - qug(2,1) + qdg(2,1) + qc(2,1) - quc(2,1) + qdc(2,1) + q(2) =E= 0 ; (LHS = -68.6026024220478, INFES = 68.6026024220478 ****)
     
net_inj(3)..  - qg(3,1) - qug(3,1) + qdg(3,1) + qc(3,1) - quc(3,1) + qdc(3,1) + q(3) =E= 0 ; (LHS = -165.777613634731, INFES = 165.777613634731 ****)
     
net_inj(4)..  - qg(4,1) - qug(4,1) + qdg(4,1) + qc(4,1) - quc(4,1) + qdc(4,1) + q(4) =E= 0 ; (LHS = 434.380216056801, INFES = 434.380216056801 ****)
     
net_inj(5)..  - qg(5,1) - qug(5,1) + qdg(5,1) + qc(5,1) - quc(5,1) + qdc(5,1) + q(5) =E= 0 ; (LHS = 417.110538943028, INFES = 417.110538943028 ****)
     
net_inj(6)..  - qg(6,1) - qug(6,1) + qdg(6,1) + qc(6,1) - quc(6,1) + qdc(6,1) + q(6) =E= 0 ; (LHS = -790.031173850612, INFES = 790.031173850612 ****)
     

---- sum_NI  =E=  sum of net injections

sum_NI..  q(1) + q(2) + q(3) + q(4) + q(5) + q(6) =E= 0 ; (LHS = -1.70530256582424E-13, INFES = 1.70530256582424E-13 ****)
     

---- zflow  =E=  links zonal injections to zonal flows

zflow(1)..  q(1) + q(2) + q(3) - f(1,4) - f(3,4) - f(3,5) =E= 0 ; (LHS = 0.000508478070798901, INFES = 0.000508478070798901 ****)
     
zflow(2)..  q(4) + q(5) + q(6) + f(1,4) + f(3,4) + f(3,5) =E= 0 ; (LHS = -0.000508478070969431, INFES = 0.000508478070969431 ****)
     

---- ptdf_flow_hybrid  =E=  calculates physical flows over given line connected to hybrid node

ptdf_flow_hybrid(4,5)..  - 0.109091*q(4) + 0.363636*q(5) + 0.127273*q(6) - 0.109091*f(1,4) - 0.109091*f(3,4) + 0.363636*f(3,5) + f(4,5) =E= 0 ; (LHS = 13.7234090359593, INFES = 13.7234090359593 ****)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 91
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal_sim1 Using NLP From line 799


     ptdf_flow_hybrid  =E=  calculates physical flows over given line connected to hybrid node

ptdf_flow_hybrid(4,6)..  - 0.054545*q(4) + 0.181818*q(5) + 0.563636*q(6) - 0.054545*f(1,4) - 0.054545*f(3,4) + 0.181818*f(3,5) + f(4,6) =E= 0 ; (LHS = 6.86130310531303, INFES = 6.86130310531303 ****)
     
ptdf_flow_hybrid(5,6)..  0.054545*q(4) - 0.181818*q(5) + 0.436364*q(6) + 0.054545*f(1,4) + 0.054545*f(3,4) - 0.181818*f(3,5) + f(5,6) =E= 0 ; (LHS = -6.86130310531297, INFES = 6.86130310531297 ****)
     

---- fwd_zconstr  =L=  forward capacity constraint for zonal interconnection

fwd_zconstr(1,2)..  f(1,4) + f(3,4) + f(3,5) =L= 300 ; (LHS = -347.174375341545)
     

---- bwd_zconstr  =G=  backward capacity constraint for zonal interconnection

bwd_zconstr(1,2)..  f(1,4) + f(3,4) + f(3,5) =G= -300 ; (LHS = -347.174375341545, INFES = 47.1743753415454 ****)
     

---- fwd_lconstr_zonalsim  =L=  forward capacity constraint for line

fwd_lconstr_zonalsim(4,5)..  f(4,5) =L= 50 ; (LHS = 47.1743753415453)
     
fwd_lconstr_zonalsim(4,6)..  f(4,6) =L= 500 ; (LHS = -152.825969006517)
     
fwd_lconstr_zonalsim(5,6)..  f(5,6) =L= 200 ; (LHS = -200)
     

---- bwd_lconstr_zonalsim  =G=  backward capacity constraint for line

bwd_lconstr_zonalsim(4,5)..  f(4,5) =G= -50 ; (LHS = 47.1743753415453)
     
bwd_lconstr_zonalsim(4,6)..  f(4,6) =G= -500 ; (LHS = -152.825969006517)
     
bwd_lconstr_zonalsim(5,6)..  f(5,6) =G= -200 ; (LHS = -200)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 92
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim1 Using NLP From line 799


---- qg  spot market generation quantity

qg(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qg(2,1)
                (.LO, .L, .UP, .M = 0, 571.428571428564, +INF, -3.43013012109994)
      (28.5714) tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qg(3,1)
                (.LO, .L, .UP, .M = 0, 571.428571428566, +INF, -8.28888068173407)
      (28.5714) tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qg(4,1)
                (.LO, .L, .UP, .M = 0, 571.428571428564, +INF, 19.3057873803023)
      (28.5714) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qg(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qg(6,1)
                (.LO, .L, .UP, .M = 0, 1142.85714285713, +INF, -19.7507793462653)
      (28.5714) tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qug  upregulation generation quantity

qug(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qug(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -3.43013012109994)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 93
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim1 Using NLP From line 799


     qug  upregulation generation quantity

      (28.5714) tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qug(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -8.28888068173407)
      (28.5714) tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qug(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
      (28.5714) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qug(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -5.23346227522895E-14)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qug(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -19.7507793462653)
      (28.5714) tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qdg  downregulation generation quantity

qdg(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
       -1       gcon_up(1,1)
       -1       gcon_lo(1,1)
        1       net_inj(1)

qdg(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
     (-28.5714) tot_surplus
       -1       gcon_up(2,1)
       -1       gcon_lo(2,1)
        1       net_inj(2)

qdg(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
     (-28.5714) tot_surplus
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 94
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim1 Using NLP From line 799


     qdg  downregulation generation quantity

       -1       gcon_up(3,1)
       -1       gcon_lo(3,1)
        1       net_inj(3)

qdg(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -19.3057873803023)
     (-28.5714) tot_surplus
       -1       gcon_up(4,1)
       -1       gcon_lo(4,1)
        1       net_inj(4)

qdg(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 5.23346227522895E-14)
       -1       gcon_up(5,1)
       -1       gcon_lo(5,1)
        1       net_inj(5)

qdg(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
     (-28.5714) tot_surplus
       -1       gcon_up(6,1)
       -1       gcon_lo(6,1)
        1       net_inj(6)


---- qc  spot market consumption quantity

qc(1,1)
                (.LO, .L, .UP, .M = 0, 1428.57142857144, +INF, -60.5222222176638)
     (-28.5714) tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -21.7111683292283)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -11.9936672079602)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qc(4,1)
                (.LO, .L, .UP, .M = 0, 714.285714285718, +INF, -33.7851279155289)
     (-28.5714) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 95
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim1 Using NLP From line 799


     qc  spot market consumption quantity

        1       net_inj(4)

qc(5,1)
                (.LO, .L, .UP, .M = 0, 714.285714285718, +INF, -291.97737726012)
     (-28.5714) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)


---- quc  upregulation consumption quantity

quc(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
      (28.5714) tot_surplus
       -1       ccon_up(1,1)
       -1       ccon_lo(1,1)
       -1       net_inj(1)

quc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       ccon_up(2,1)
       -1       ccon_lo(2,1)
       -1       net_inj(2)

quc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       ccon_up(3,1)
       -1       ccon_lo(3,1)
       -1       net_inj(3)

quc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 1.56319401867222E-13)
      (28.5714) tot_surplus
       -1       ccon_up(4,1)
       -1       ccon_lo(4,1)
       -1       net_inj(4)

quc(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
      (28.5714) tot_surplus
       -1       ccon_up(5,1)
       -1       ccon_lo(5,1)
       -1       net_inj(5)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 96
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim1 Using NLP From line 799


     quc  upregulation consumption quantity

quc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
       -1       ccon_up(6,1)
       -1       ccon_lo(6,1)
       -1       net_inj(6)


---- qdc  downregulation consumption quantity

qdc(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -60.5222222176638)
     (-28.5714) tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qdc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qdc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qdc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -33.7851279155289)
     (-28.5714) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qdc(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -291.97737726012)
     (-28.5714) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qdc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 97
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim1 Using NLP From line 799


---- q  net injection quantity

q(1)
                (.LO, .L, .UP, .M = -INF, -1255.65079366383, +INF, 0)
        1       net_inj(1)
        1       sum_NI
        1       zflow(1)

q(2)
                (.LO, .L, .UP, .M = -INF, 502.825969006517, +INF, 0)
        1       net_inj(2)
        1       sum_NI
        1       zflow(1)

q(3)
                (.LO, .L, .UP, .M = -INF, 405.650957793836, +INF, 0)
        1       net_inj(3)
        1       sum_NI
        1       zflow(1)

q(4)
                (.LO, .L, .UP, .M = -INF, 291.523073199647, +INF, 0)
        1       net_inj(4)
        1       sum_NI
        1       zflow(2)
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)

q(5)
                (.LO, .L, .UP, .M = -INF, -297.17517534269, +INF, 0)
        1       net_inj(5)
        1       sum_NI
        1       zflow(2)
        0.3636  ptdf_flow_hybrid(4,5)
        0.1818  ptdf_flow_hybrid(4,6)
       -0.1818  ptdf_flow_hybrid(5,6)

q(6)
                (.LO, .L, .UP, .M = -INF, 352.825969006517, +INF, 0)
        1       net_inj(6)
        1       sum_NI
        1       zflow(2)
        0.1273  ptdf_flow_hybrid(4,5)
        0.5636  ptdf_flow_hybrid(4,6)
        0.4364  ptdf_flow_hybrid(5,6)


---- f  line flow

f(1,4)
                (.LO, .L, .UP, .M = -INF, -400, +INF, 0)
       -1       zflow(1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 98
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim1 Using NLP From line 799


     f  line flow

        1       zflow(2)
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)
        1       fwd_zconstr(1,2)
        1       bwd_zconstr(1,2)

f(3,4)
                (.LO, .L, .UP, .M = -INF, 2.82562465845461, +INF, 0)
       -1       zflow(1)
        1       zflow(2)
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)
        1       fwd_zconstr(1,2)
        1       bwd_zconstr(1,2)

f(3,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
       -1       zflow(1)
        1       zflow(2)
        0.3636  ptdf_flow_hybrid(4,5)
        0.1818  ptdf_flow_hybrid(4,6)
       -0.1818  ptdf_flow_hybrid(5,6)
        1       fwd_zconstr(1,2)
        1       bwd_zconstr(1,2)

f(4,5)
                (.LO, .L, .UP, .M = -INF, 47.1743753415453, +INF, 0)
        1       ptdf_flow_hybrid(4,5)
        1       fwd_lconstr_zonalsim(4,5)
        1       bwd_lconstr_zonalsim(4,5)

f(4,6)
                (.LO, .L, .UP, .M = -INF, -152.825969006517, +INF, 0)
        1       ptdf_flow_hybrid(4,6)
        1       fwd_lconstr_zonalsim(4,6)
        1       bwd_lconstr_zonalsim(4,6)

f(5,6)
                (.LO, .L, .UP, .M = -INF, -200, +INF, 0)
        1       ptdf_flow_hybrid(5,6)
        1       fwd_lconstr_zonalsim(5,6)
        1       bwd_lconstr_zonalsim(5,6)


---- surplus  total benefit minus total cost

surplus
                (.LO, .L, .UP, .M = -INF, 41685.1427859617, +INF, 0)
        1       tot_surplus
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                              04/04/22 13:20:43 Page 99
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim1 Using NLP From line 799


     surplus  total benefit minus total cost


GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 100
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE zonal_sim1 Using NLP From line 799


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS           45
BLOCKS OF VARIABLES           9     SINGLE VARIABLES           49
NON ZERO ELEMENTS           187     NON LINEAR N-Z             21
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH                 156


GENERATION TIME      =        0.031 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 101
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE zonal_sim1 Using NLP From line 799


               S O L V E      S U M M A R Y

     MODEL   zonal_sim1          OBJECTIVE  surplus
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  MINOS               FROM LINE  799

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE           134456.2311

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT        26    2000000000
 EVALUATION ERRORS              0             0

GAMS/MINOS       30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Win
M I N O S  5.6      (Jul 2016)

    GAMS/MINOS 5.6, Large Scale Nonlinear Solver
    B. A. Murtagh, University of New South Wales
    P. E. Gill, University of California at San Diego,
    W. Murray, M. A. Saunders, and M. H. Wright,
    Systems Optimization Laboratory, Stanford University

 Work space allocated           --     0.85 Mb

 EXIT - Optimal Solution found, objective:        134456.2



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
                             1  PROJECTED
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 102
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 877


---- tot_surplus  =E=  definition of total surplus

tot_surplus..  (35.5000078076741)*qg(2,1) + (35.5000078075666)*qg(3,1) + (35.5000078076389)*qg(4,1) + (11.2499804808089)*qg(6,1) + (35.5000078076741)*qug(2,1) + (35.5000078075666)*qug(3,1) + (35.5000078076389)*qug(4,1) + (11.2499804808089)*qug(6,1)
     
      - (35.5000078076741)*qdg(2,1) - (35.5000078075666)*qdg(3,1) - (35.5000078076389)*qdg(4,1) - (11.2499804808089)*qdg(6,1) - (35.5000078078012)*qc(1,1) - (35.500007807789)*qc(4,1) - (35.500007807614)*qc(5,1) + (35.5000078078012)*quc(1,1)
     
      + (35.500007807789)*quc(4,1) + (35.500007807614)*quc(5,1) - (35.5000078078012)*qdc(1,1) - (35.500007807789)*qdc(4,1) - (35.500007807614)*qdc(5,1) + surplus =E= 0 ; (LHS = 0)
     

---- gcon_up  =L=  upper bound on final generation

gcon_up(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =L= 0 ; (LHS = 0)
     
gcon_up(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =L= 10000 ; (LHS = 710.000156153481)
     
gcon_up(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =L= 10000 ; (LHS = 710.000156151333)
     
gcon_up(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =L= 10000 ; (LHS = 710.000156152779)
     
gcon_up(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =L= 0 ; (LHS = 0)
     
gcon_up(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =L= 10000 ; (LHS = 449.999219232355)
     

---- gcon_lo  =G=  lower bound on final generation

gcon_lo(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =G= 0 ; (LHS = 0)
     
gcon_lo(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =G= 0 ; (LHS = 710.000156153481)
     
gcon_lo(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =G= 0 ; (LHS = 710.000156151332)
     
gcon_lo(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =G= 0 ; (LHS = 710.000156152778)
     
gcon_lo(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =G= 0 ; (LHS = 0)
     
gcon_lo(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =G= 0 ; (LHS = 449.999219232355)
     

---- ccon_up  =L=  upper bound on final consumption

ccon_up(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =L= 10000 ; (LHS = 1289.99984384398)
     
ccon_up(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =L= 0 ; (LHS = 0)
     
ccon_up(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =L= 0 ; (LHS = 0)
     
ccon_up(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =L= 10000 ; (LHS = 644.99992192211)
     
ccon_up(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =L= 10000 ; (LHS = 644.99992192386)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 103
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 877


     ccon_up  =L=  upper bound on final consumption

ccon_up(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =L= 0 ; (LHS = 0)
     

---- ccon_lo  =G=  lower bound on final consumption

ccon_lo(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =G= 0 ; (LHS = 1289.99984384398)
     
ccon_lo(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =G= 0 ; (LHS = 0)
     
ccon_lo(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =G= 0 ; (LHS = 0)
     
ccon_lo(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =G= 0 ; (LHS = 644.99992192211)
     
ccon_lo(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =G= 0 ; (LHS = 644.99992192386)
     
ccon_lo(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =G= 0 ; (LHS = 0)
     

---- gen_redisp_down  =E=  includes generation participating in downward regulation market

gen_redisp_down(1,1)..  qdg(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_down(5,1)..  qdg(5,1) =E= 0 ; (LHS = 0)
     

---- gen_redisp_up  =E=  includes generation participating in upward regulation market

gen_redisp_up(1,1)..  qug(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_up(5,1)..  qug(5,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_down  =E=  includes consumption participating in downward regulation market

con_redisp_down(2,1)..  qdc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(3,1)..  qdc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(6,1)..  qdc(6,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_up  =E=  includes consumption participating in upward regulation market

con_redisp_up(2,1)..  quc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(3,1)..  quc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(6,1)..  quc(6,1) =E= 0 ; (LHS = 0)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 104
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 877


---- net_inj  =E=  net injection in every node

net_inj(1)..  - qg(1,1) - qug(1,1) + qdg(1,1) + qc(1,1) - quc(1,1) + qdc(1,1) + q(1) =E= 0 ; (LHS = 0)
     
net_inj(2)..  - qg(2,1) - qug(2,1) + qdg(2,1) + qc(2,1) - quc(2,1) + qdc(2,1) + q(2) =E= 0 ; (LHS = 0)
     
net_inj(3)..  - qg(3,1) - qug(3,1) + qdg(3,1) + qc(3,1) - quc(3,1) + qdc(3,1) + q(3) =E= 0 ; (LHS = 3.41060513164848E-13, INFES = 3.41060513164848E-13 ****)
     
net_inj(4)..  - qg(4,1) - qug(4,1) + qdg(4,1) + qc(4,1) - quc(4,1) + qdc(4,1) + q(4) =E= 0 ; (LHS = 0)
     
net_inj(5)..  - qg(5,1) - qug(5,1) + qdg(5,1) + qc(5,1) - quc(5,1) + qdc(5,1) + q(5) =E= 0 ; (LHS = -1.13686837721616E-13, INFES = 1.13686837721616E-13 ****)
     
net_inj(6)..  - qg(6,1) - qug(6,1) + qdg(6,1) + qc(6,1) - quc(6,1) + qdc(6,1) + q(6) =E= 0 ; (LHS = -1.13686837721616E-13, INFES = 1.13686837721616E-13 ****)
     

---- sum_NI  =E=  sum of net injections

sum_NI..  q(1) + q(2) + q(3) + q(4) + q(5) + q(6) =E= 0 ; (LHS = 4.54747350886464E-13, INFES = 4.54747350886464E-13 ****)
     

---- ptdf_flow  =E=  calculates physical flows over given line

ptdf_flow(1,2)..  0.618182*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(1,2) =E= 0 ; (LHS = 119.719909937283, INFES = 119.719909937283 ****)
     
ptdf_flow(1,3)..  0.236364*q(2) + 0.472727*q(3) + 0.290909*q(4) + 0.363636*q(5) + 0.327273*q(6) + f(1,3) =E= 0 ; (LHS = 32.2656520744929, INFES = 32.2656520744929 ****)
     
ptdf_flow(1,4)..  0.145455*q(2) + 0.290909*q(3) + 0.563636*q(4) + 0.454545*q(5) + 0.509091*q(6) + f(1,4) =E= 0 ; (LHS = -116.230241166982, INFES = 116.230241166982 ****)
     
ptdf_flow(2,3)..  - 0.381818*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(2,3) =E= 0 ; (LHS = -87.4542772096814, INFES = 87.4542772096814 ****)
     
ptdf_flow(3,4)..  - 0.090909*q(2) - 0.181818*q(3) + 0.272727*q(4) + 0.090909*q(5) + 0.181818*q(6) + f(3,4) =E= 0 ; (LHS = -149.901608907186, INFES = 149.901608907186 ****)
     
ptdf_flow(3,5)..  - 0.054545*q(2) - 0.109091*q(3) + 0.163636*q(4) + 0.454545*q(5) + 0.309091*q(6) + f(3,5) =E= 0 ; (LHS = 266.133140074011, INFES = 266.133140074011 ****)
     
ptdf_flow(4,5)..  0.036364*q(2) + 0.072727*q(3) - 0.109091*q(4) + 0.363636*q(5) + 0.127273*q(6) + f(4,5) =E= 0 ; (LHS = -156.90875449702, INFES = 156.90875449702 ****)
     
ptdf_flow(4,6)..  0.018182*q(2) + 0.036364*q(3) - 0.054545*q(4) + 0.181818*q(5) + 0.563636*q(6) + f(4,6) =E= 0 ; (LHS = -78.453824364102, INFES = 78.453824364102 ****)
     
ptdf_flow(5,6)..  - 0.018182*q(2) - 0.036364*q(3) + 0.054545*q(4) - 0.181818*q(5) + 0.436364*q(6) + f(5,6) =E= 0 ; (LHS = 78.453824364102, INFES = 78.453824364102 ****)
     

---- fwd_lconstr  =L=  forward capacity constraint for line

fwd_lconstr(1,2)..  f(1,2) =L= 500 ; (LHS = -452.825969006517)
     
fwd_lconstr(1,3)..  f(1,3) =L= 450 ; (LHS = -402.825624658455)
     
fwd_lconstr(1,4)..  f(1,4) =L= 400 ; (LHS = -398.594284334289)
     
fwd_lconstr(2,3)..  f(2,3) =L= 50 ; (LHS = 50)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 105
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 877


     fwd_lconstr  =L=  forward capacity constraint for line

fwd_lconstr(3,4)..  f(3,4) =L= 20 ; (LHS = 2.82562465845461)
     
fwd_lconstr(3,5)..  f(3,5) =L= 50 ; (LHS = 525.769128136672, INFES = 475.769128136672 ****)
     
fwd_lconstr(4,5)..  f(4,5) =L= 50 ; (LHS = -50)
     
fwd_lconstr(4,6)..  f(4,6) =L= 500 ; (LHS = -249.999219232355)
     
fwd_lconstr(5,6)..  f(5,6) =L= 200 ; (LHS = -200)
     

---- bwd_lconstr  =G=  backward capacity constraint for line

bwd_lconstr(1,2)..  f(1,2) =G= -500 ; (LHS = -452.825969006517)
     
bwd_lconstr(1,3)..  f(1,3) =G= -450 ; (LHS = -402.825624658455)
     
bwd_lconstr(1,4)..  f(1,4) =G= -400 ; (LHS = -398.594284334289)
     
bwd_lconstr(2,3)..  f(2,3) =G= -50 ; (LHS = 50)
     
bwd_lconstr(3,4)..  f(3,4) =G= -20 ; (LHS = 2.82562465845461)
     
bwd_lconstr(3,5)..  f(3,5) =G= -50 ; (LHS = 525.769128136672)
     
bwd_lconstr(4,5)..  f(4,5) =G= -50 ; (LHS = -50)
     
bwd_lconstr(4,6)..  f(4,6) =G= -500 ; (LHS = -249.999219232355)
     
bwd_lconstr(5,6)..  f(5,6) =G= -200 ; (LHS = -200)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 106
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 877


---- qg  spot market generation quantity

qg(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qg(2,1)
                (.LO, .L, .UP, .M = 710.000156153481, 710.000156153481, 710.000156153481, 0)
      (35.5)    tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qg(3,1)
                (.LO, .L, .UP, .M = 710.000156151332, 710.000156151332, 710.000156151332, 0)
      (35.5)    tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qg(4,1)
                (.LO, .L, .UP, .M = 710.000156152778, 710.000156152778, 710.000156152778, 0)
      (35.5)    tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qg(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qg(6,1)
                (.LO, .L, .UP, .M = 449.999219232355, 449.999219232355, 449.999219232355, 0)
      (11.25)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qug  upregulation generation quantity

qug(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
        1       gen_redisp_up(1,1)
       -1       net_inj(1)

qug(2,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 107
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 877


     qug  upregulation generation quantity

                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (35.5)    tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qug(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (35.5)    tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qug(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (35.5)    tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qug(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
        1       gen_redisp_up(5,1)
       -1       net_inj(5)

qug(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (11.25)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qdg  downregulation generation quantity

qdg(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       gcon_up(1,1)
       -1       gcon_lo(1,1)
        1       gen_redisp_down(1,1)
        1       net_inj(1)

qdg(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-35.5)    tot_surplus
       -1       gcon_up(2,1)
       -1       gcon_lo(2,1)
        1       net_inj(2)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 108
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 877


     qdg  downregulation generation quantity

qdg(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-35.5)    tot_surplus
       -1       gcon_up(3,1)
       -1       gcon_lo(3,1)
        1       net_inj(3)

qdg(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-35.5)    tot_surplus
       -1       gcon_up(4,1)
       -1       gcon_lo(4,1)
        1       net_inj(4)

qdg(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       gcon_up(5,1)
       -1       gcon_lo(5,1)
        1       gen_redisp_down(5,1)
        1       net_inj(5)

qdg(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-11.25)   tot_surplus
       -1       gcon_up(6,1)
       -1       gcon_lo(6,1)
        1       net_inj(6)


---- qc  spot market consumption quantity

qc(1,1)
                (.LO, .L, .UP, .M = 1289.99984384398, 1289.99984384398, 1289.99984384398, 0)
     (-35.5)    tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -35.5000078076741)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -35.5000078075666)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qc(4,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 109
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 877


     qc  spot market consumption quantity

                (.LO, .L, .UP, .M = 644.99992192211, 644.99992192211, 644.99992192211, 1.50066625792533E-10)
     (-35.5)    tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qc(5,1)
                (.LO, .L, .UP, .M = 644.99992192386, 644.99992192386, 644.99992192386, 0)
     (-35.5)    tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -11.2499804808089)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)


---- quc  upregulation consumption quantity

quc(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (35.5)    tot_surplus
       -1       ccon_up(1,1)
       -1       ccon_lo(1,1)
       -1       net_inj(1)

quc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 35.5000078076741)
       -1       ccon_up(2,1)
       -1       ccon_lo(2,1)
        1       con_redisp_up(2,1)
       -1       net_inj(2)

quc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 35.5000078075666)
       -1       ccon_up(3,1)
       -1       ccon_lo(3,1)
        1       con_redisp_up(3,1)
       -1       net_inj(3)

quc(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -1.50066625792533E-10)
      (35.5)    tot_surplus
       -1       ccon_up(4,1)
       -1       ccon_lo(4,1)
       -1       net_inj(4)

quc(5,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 110
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 877


     quc  upregulation consumption quantity

                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (35.5)    tot_surplus
       -1       ccon_up(5,1)
       -1       ccon_lo(5,1)
       -1       net_inj(5)

quc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 11.2499804808089)
       -1       ccon_up(6,1)
       -1       ccon_lo(6,1)
        1       con_redisp_up(6,1)
       -1       net_inj(6)


---- qdc  downregulation consumption quantity

qdc(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-35.5)    tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qdc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -35.5000078076741)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       con_redisp_down(2,1)
        1       net_inj(2)

qdc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -35.5000078075666)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       con_redisp_down(3,1)
        1       net_inj(3)

qdc(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 1.50066625792533E-10)
     (-35.5)    tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qdc(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-35.5)    tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 111
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 877


     qdc  downregulation consumption quantity

qdc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -11.2499804808089)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       con_redisp_down(6,1)
        1       net_inj(6)


---- q  net injection quantity

q(1)
                (.LO, .L, .UP, .M = -INF, -1289.99984384398, +INF, 0)
        1       net_inj(1)
        1       sum_NI

q(2)
                (.LO, .L, .UP, .M = -INF, 710.000156153481, +INF, 1.27112607000214E-10)
        1       net_inj(2)
        1       sum_NI
        0.6182  ptdf_flow(1,2)
        0.2364  ptdf_flow(1,3)
        0.1455  ptdf_flow(1,4)
       -0.3818  ptdf_flow(2,3)
       -0.0909  ptdf_flow(3,4)
       -0.0545  ptdf_flow(3,5)
        0.0364  ptdf_flow(4,5)
        0.0182  ptdf_flow(4,6)
       -0.0182  ptdf_flow(5,6)

q(3)
                (.LO, .L, .UP, .M = -INF, 710.000156151332, +INF, 2.34578658802553E-10)
        1       net_inj(3)
        1       sum_NI
        0.2364  ptdf_flow(1,2)
        0.4727  ptdf_flow(1,3)
        0.2909  ptdf_flow(1,4)
        0.2364  ptdf_flow(2,3)
       -0.1818  ptdf_flow(3,4)
       -0.1091  ptdf_flow(3,5)
        0.0727  ptdf_flow(4,5)
        0.0364  ptdf_flow(4,6)
       -0.0364  ptdf_flow(5,6)

q(4)
                (.LO, .L, .UP, .M = -INF, 65.0002342306678, +INF, 0)
        1       net_inj(4)
        1       sum_NI
        0.1455  ptdf_flow(1,2)
        0.2909  ptdf_flow(1,3)
        0.5636  ptdf_flow(1,4)
        0.1455  ptdf_flow(2,3)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 112
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 877


     q  net injection quantity

        0.2727  ptdf_flow(3,4)
        0.1636  ptdf_flow(3,5)
       -0.1091  ptdf_flow(4,5)
       -0.0545  ptdf_flow(4,6)
        0.0545  ptdf_flow(5,6)

q(5)
                (.LO, .L, .UP, .M = -INF, -644.99992192386, +INF, 0)
        1       net_inj(5)
        1       sum_NI
        0.1818  ptdf_flow(1,2)
        0.3636  ptdf_flow(1,3)
        0.4545  ptdf_flow(1,4)
        0.1818  ptdf_flow(2,3)
        0.0909  ptdf_flow(3,4)
        0.4545  ptdf_flow(3,5)
        0.3636  ptdf_flow(4,5)
        0.1818  ptdf_flow(4,6)
       -0.1818  ptdf_flow(5,6)

q(6)
                (.LO, .L, .UP, .M = -INF, 449.999219232355, +INF, 0)
        1       net_inj(6)
        1       sum_NI
        0.1636  ptdf_flow(1,2)
        0.3273  ptdf_flow(1,3)
        0.5091  ptdf_flow(1,4)
        0.1636  ptdf_flow(2,3)
        0.1818  ptdf_flow(3,4)
        0.3091  ptdf_flow(3,5)
        0.1273  ptdf_flow(4,5)
        0.5636  ptdf_flow(4,6)
        0.4364  ptdf_flow(5,6)


---- f  line flow

f(1,2)
                (.LO, .L, .UP, .M = -INF, -452.825969006517, +INF, 0)
        1       ptdf_flow(1,2)
        1       fwd_lconstr(1,2)
        1       bwd_lconstr(1,2)

f(1,3)
                (.LO, .L, .UP, .M = -INF, -402.825624658455, +INF, 0)
        1       ptdf_flow(1,3)
        1       fwd_lconstr(1,3)
        1       bwd_lconstr(1,3)

f(1,4)
                (.LO, .L, .UP, .M = -INF, -398.594284334289, +INF, 0)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 113
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 877


     f  line flow

        1       ptdf_flow(1,4)
        1       fwd_lconstr(1,4)
        1       bwd_lconstr(1,4)

f(2,3)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow(2,3)
        1       fwd_lconstr(2,3)
        1       bwd_lconstr(2,3)

f(3,4)
                (.LO, .L, .UP, .M = -INF, 2.82562465845461, +INF, 3.14938140850935E-16)
        1       ptdf_flow(3,4)
        1       fwd_lconstr(3,4)
        1       bwd_lconstr(3,4)

f(3,5)
                (.LO, .L, .UP, .M = -INF, 525.769128136672, +INF, -2.49581116325548E-11)
        1       ptdf_flow(3,5)
        1       fwd_lconstr(3,5)
        1       bwd_lconstr(3,5)

f(4,5)
                (.LO, .L, .UP, .M = -INF, -50, +INF, 0)
        1       ptdf_flow(4,5)
        1       fwd_lconstr(4,5)
        1       bwd_lconstr(4,5)

f(4,6)
                (.LO, .L, .UP, .M = -INF, -249.999219232355, +INF, 0)
        1       ptdf_flow(4,6)
        1       fwd_lconstr(4,6)
        1       bwd_lconstr(4,6)

f(5,6)
                (.LO, .L, .UP, .M = -INF, -200, +INF, 0)
        1       ptdf_flow(5,6)
        1       fwd_lconstr(5,6)
        1       bwd_lconstr(5,6)


---- surplus  total benefit minus total cost

surplus
                (.LO, .L, .UP, .M = -INF, 134456.231066374, +INF, 0)
        1       tot_surplus

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 114
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE redispatch Using NLP From line 877


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS           69
BLOCKS OF VARIABLES           9     SINGLE VARIABLES           52
NON ZERO ELEMENTS           224     NON LINEAR N-Z             21
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH                 156


GENERATION TIME      =        0.062 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.062 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 115
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE redispatch Using NLP From line 877


               S O L V E      S U M M A R Y

     MODEL   redispatch          OBJECTIVE  surplus
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  MINOS               FROM LINE  877

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE            74387.0505

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT        16    2000000000
 EVALUATION ERRORS              0             0

GAMS/MINOS       30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Win
M I N O S  5.6      (Jul 2016)

    GAMS/MINOS 5.6, Large Scale Nonlinear Solver
    B. A. Murtagh, University of New South Wales
    P. E. Gill, University of California at San Diego,
    W. Murray, M. A. Saunders, and M. H. Wright,
    Systems Optimization Laboratory, Stanford University

 Work space allocated           --     0.87 Mb

 EXIT - Optimal Solution found, objective:        74387.05



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 116
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    952 PARAMETER zcap_hybrid  capacity between hybrid nodes and zones

            fwd         bwd

1.1     950.000     950.000
1.2     400.000     400.000
2.1     550.000     550.000
3.1     500.000     500.000
3.2      70.000      70.000
4.1     420.000     420.000
4.2     550.000     550.000
5.1      50.000      50.000
5.2     250.000     250.000
6.2     700.000     700.000

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 117
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal_sim2 Using NLP From line 953


---- tot_surplus  =E=  definition of total surplus

tot_surplus..  (35.5000078076741)*qg(2,1) + (35.5000078075666)*qg(3,1) + (35.5000078076389)*qg(4,1) + (11.2499804808089)*qg(6,1) + (35.5000078076741)*qug(2,1) + (35.5000078075666)*qug(3,1) + (35.5000078076389)*qug(4,1) + (11.2499804808089)*qug(6,1)
     
      - (35.5000078076741)*qdg(2,1) - (35.5000078075666)*qdg(3,1) - (35.5000078076389)*qdg(4,1) - (11.2499804808089)*qdg(6,1) - (35.5000078078012)*qc(1,1) - (35.500007807789)*qc(4,1) - (35.500007807614)*qc(5,1) + (35.5000078078012)*quc(1,1)
     
      + (35.500007807789)*quc(4,1) + (35.500007807614)*quc(5,1) - (35.5000078078012)*qdc(1,1) - (35.500007807789)*qdc(4,1) - (35.500007807614)*qdc(5,1) + surplus =E= 0 ; (LHS = -60069.1805874332, INFES = 60069.1805874332 ****)
     

---- gcon_up  =L=  upper bound on final generation

gcon_up(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =L= 0 ; (LHS = 0)
     
gcon_up(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =L= 10000 ; (LHS = 710.000156153481)
     
gcon_up(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =L= 10000 ; (LHS = 710.000156151333)
     
gcon_up(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =L= 10000 ; (LHS = 710.000156152779)
     
gcon_up(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =L= 0 ; (LHS = 0)
     
gcon_up(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =L= 10000 ; (LHS = 449.999219232355)
     

---- gcon_lo  =G=  lower bound on final generation

gcon_lo(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =G= 0 ; (LHS = 0)
     
gcon_lo(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =G= 0 ; (LHS = 710.000156153481)
     
gcon_lo(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =G= 0 ; (LHS = 710.000156151332)
     
gcon_lo(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =G= 0 ; (LHS = 710.000156152778)
     
gcon_lo(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =G= 0 ; (LHS = 0)
     
gcon_lo(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =G= 0 ; (LHS = 449.999219232355)
     

---- ccon_up  =L=  upper bound on final consumption

ccon_up(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =L= 10000 ; (LHS = 1289.99984384398)
     
ccon_up(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =L= 0 ; (LHS = 0)
     
ccon_up(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =L= 0 ; (LHS = 0)
     
ccon_up(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =L= 10000 ; (LHS = 644.99992192211)
     
ccon_up(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =L= 10000 ; (LHS = 644.99992192386)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 118
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal_sim2 Using NLP From line 953


     ccon_up  =L=  upper bound on final consumption

ccon_up(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =L= 0 ; (LHS = 0)
     

---- ccon_lo  =G=  lower bound on final consumption

ccon_lo(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =G= 0 ; (LHS = 1289.99984384398)
     
ccon_lo(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =G= 0 ; (LHS = 0)
     
ccon_lo(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =G= 0 ; (LHS = 0)
     
ccon_lo(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =G= 0 ; (LHS = 644.99992192211)
     
ccon_lo(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =G= 0 ; (LHS = 644.99992192386)
     
ccon_lo(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =G= 0 ; (LHS = 0)
     

---- net_inj  =E=  net injection in every node

net_inj(1)..  - qg(1,1) - qug(1,1) + qdg(1,1) + qc(1,1) - quc(1,1) + qdc(1,1) + q(1) =E= 0 ; (LHS = 40.0002938458249, INFES = 40.0002938458249 ****)
     
net_inj(2)..  - qg(2,1) - qug(2,1) + qdg(2,1) + qc(2,1) - quc(2,1) + qdc(2,1) + q(2) =E= 0 ; (LHS = -209.999806154181, INFES = 209.999806154181 ****)
     
net_inj(3)..  - qg(3,1) - qug(3,1) + qdg(3,1) + qc(3,1) - quc(3,1) + qdc(3,1) + q(3) =E= 0 ; (LHS = -310.000456151282, INFES = 310.000456151282 ****)
     
net_inj(4)..  - qg(4,1) - qug(4,1) + qdg(4,1) + qc(4,1) - quc(4,1) + qdc(4,1) + q(4) =E= 0 ; (LHS = 234.999715769982, INFES = 234.999715769982 ****)
     
net_inj(5)..  - qg(5,1) - qug(5,1) + qdg(5,1) + qc(5,1) - quc(5,1) + qdc(5,1) + q(5) =E= 0 ; (LHS = 344.99912192271, INFES = 344.99912192271 ****)
     
net_inj(6)..  - qg(6,1) - qug(6,1) + qdg(6,1) + qc(6,1) - quc(6,1) + qdc(6,1) + q(6) =E= 0 ; (LHS = -99.9988692330553, INFES = 99.9988692330553 ****)
     

---- sum_NI  =E=  sum of net injections

sum_NI..  q(1) + q(2) + q(3) + q(4) + q(5) + q(6) =E= 0 ; (LHS = 0)
     

---- zflow  =E=  links zonal injections to zonal flows

zflow(1)..  q(1) + q(2) + q(3) - f(1,4) - f(3,4) - f(3,5) =E= 0 ; (LHS = 0.000500001199895905, INFES = 0.000500001199895905 ****)
     
zflow(2)..  q(4) + q(5) + q(6) + f(1,4) + f(3,4) + f(3,5) =E= 0 ; (LHS = -0.000500001199895905, INFES = 0.000500001199895905 ****)
     

---- ptdf_flow_hybrid  =E=  calculates physical flows over given line connected to hybrid node

ptdf_flow_hybrid(4,5)..  - 0.109091*q(4) + 0.363636*q(5) + 0.127273*q(6) - 0.109091*f(1,4) - 0.109091*f(3,4) + 0.363636*f(3,5) + f(4,5) =E= 0 ; (LHS = 14.5454090907218, INFES = 14.5454090907218 ****)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 119
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal_sim2 Using NLP From line 953


     ptdf_flow_hybrid  =E=  calculates physical flows over given line connected to hybrid node

ptdf_flow_hybrid(4,6)..  - 0.054545*q(4) + 0.181818*q(5) + 0.563636*q(6) - 0.054545*f(1,4) - 0.054545*f(3,4) + 0.181818*f(3,5) + f(4,6) =E= 0 ; (LHS = 7.27230454551093, INFES = 7.27230454551093 ****)
     
ptdf_flow_hybrid(5,6)..  0.054545*q(4) - 0.181818*q(5) + 0.436364*q(6) + 0.054545*f(1,4) + 0.054545*f(3,4) - 0.181818*f(3,5) + f(5,6) =E= 0 ; (LHS = -7.27230454551091, INFES = 7.27230454551091 ****)
     

---- fwd_zconstr_hybrid_2  =L=  forward capacity constraint between hybrid nodes and zone

fwd_zconstr_hybrid_2(4,1)..  - f(1,4) - f(3,4) =L= 420 ; (LHS = 400)
     
fwd_zconstr_hybrid_2(5,1)..  - f(3,5) =L= 50 ; (LHS = -50)
     

---- bwd_zconstr_hybrid_2  =G=  backward capacity constraint between hybrid nodes and zone

bwd_zconstr_hybrid_2(4,1)..  - f(1,4) - f(3,4) =G= -420 ; (LHS = 400)
     
bwd_zconstr_hybrid_2(5,1)..  - f(3,5) =G= -50 ; (LHS = -50)
     

---- fwd_lconstr_zonalsim  =L=  forward capacity constraint for line

fwd_lconstr_zonalsim(4,5)..  f(4,5) =L= 50 ; (LHS = 50)
     
fwd_lconstr_zonalsim(4,6)..  f(4,6) =L= 500 ; (LHS = -150.0003499993)
     
fwd_lconstr_zonalsim(5,6)..  f(5,6) =L= 200 ; (LHS = -200)
     

---- bwd_lconstr_zonalsim  =G=  backward capacity constraint for line

bwd_lconstr_zonalsim(4,5)..  f(4,5) =G= -50 ; (LHS = 50)
     
bwd_lconstr_zonalsim(4,6)..  f(4,6) =G= -500 ; (LHS = -150.0003499993)
     
bwd_lconstr_zonalsim(5,6)..  f(5,6) =G= -200 ; (LHS = -200)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 120
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim2 Using NLP From line 953


---- qg  spot market generation quantity

qg(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qg(2,1)
                (.LO, .L, .UP, .M = 0, 710.000156153481, +INF, -10.499990307709)
      (35.5)    tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qg(3,1)
                (.LO, .L, .UP, .M = 0, 710.000156151332, +INF, -15.5000228075641)
      (35.5)    tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qg(4,1)
                (.LO, .L, .UP, .M = 0, 710.000156152778, +INF, 10.4444318120075)
      (35.5)    tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qg(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qg(6,1)
                (.LO, .L, .UP, .M = 0, 449.999219232355, +INF, -2.49997173082638)
      (11.25)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qug  upregulation generation quantity

qug(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qug(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -10.499990307709)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 121
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim2 Using NLP From line 953


     qug  upregulation generation quantity

      (35.5)    tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qug(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -15.5000228075641)
      (35.5)    tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qug(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
      (35.5)    tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qug(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -5.23346227522895E-14)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qug(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -2.49997173082638)
      (11.25)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qdg  downregulation generation quantity

qdg(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
       -1       gcon_up(1,1)
       -1       gcon_lo(1,1)
        1       net_inj(1)

qdg(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
     (-35.5)    tot_surplus
       -1       gcon_up(2,1)
       -1       gcon_lo(2,1)
        1       net_inj(2)

qdg(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
     (-35.5)    tot_surplus
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 122
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim2 Using NLP From line 953


     qdg  downregulation generation quantity

       -1       gcon_up(3,1)
       -1       gcon_lo(3,1)
        1       net_inj(3)

qdg(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -10.4444318120075)
     (-35.5)    tot_surplus
       -1       gcon_up(4,1)
       -1       gcon_lo(4,1)
        1       net_inj(4)

qdg(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 5.23346227522895E-14)
       -1       gcon_up(5,1)
       -1       gcon_lo(5,1)
        1       net_inj(5)

qdg(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
     (-11.25)   tot_surplus
       -1       gcon_up(6,1)
       -1       gcon_lo(6,1)
        1       net_inj(6)


---- qc  spot market consumption quantity

qc(1,1)
                (.LO, .L, .UP, .M = 0, 1289.99984384398, +INF, -14.0001028460388)
     (-35.5)    tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qc(4,1)
                (.LO, .L, .UP, .M = 0, 644.99992192211, +INF, -18.2777556708819)
     (-35.5)    tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 123
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim2 Using NLP From line 953


     qc  spot market consumption quantity

        1       net_inj(4)

qc(5,1)
                (.LO, .L, .UP, .M = 0, 644.99992192386, +INF, -241.499385345897)
     (-35.5)    tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 8.88178419700125E-16)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)


---- quc  upregulation consumption quantity

quc(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
      (35.5)    tot_surplus
       -1       ccon_up(1,1)
       -1       ccon_lo(1,1)
       -1       net_inj(1)

quc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
       -1       ccon_up(2,1)
       -1       ccon_lo(2,1)
       -1       net_inj(2)

quc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
       -1       ccon_up(3,1)
       -1       ccon_lo(3,1)
       -1       net_inj(3)

quc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 1.4210854715202E-14)
      (35.5)    tot_surplus
       -1       ccon_up(4,1)
       -1       ccon_lo(4,1)
       -1       net_inj(4)

quc(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
      (35.5)    tot_surplus
       -1       ccon_up(5,1)
       -1       ccon_lo(5,1)
       -1       net_inj(5)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 124
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim2 Using NLP From line 953


     quc  upregulation consumption quantity

quc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       ccon_up(6,1)
       -1       ccon_lo(6,1)
       -1       net_inj(6)


---- qdc  downregulation consumption quantity

qdc(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -14.0001028460388)
     (-35.5)    tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qdc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qdc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qdc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -18.2777556708819)
     (-35.5)    tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qdc(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -241.499385345897)
     (-35.5)    tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qdc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 125
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim2 Using NLP From line 953


---- q  net injection quantity

q(1)
                (.LO, .L, .UP, .M = -INF, -1249.99954999815, +INF, 0)
        1       net_inj(1)
        1       sum_NI
        1       zflow(1)

q(2)
                (.LO, .L, .UP, .M = -INF, 500.0003499993, +INF, 0)
        1       net_inj(2)
        1       sum_NI
        1       zflow(1)

q(3)
                (.LO, .L, .UP, .M = -INF, 399.999700000051, +INF, 0)
        1       net_inj(3)
        1       sum_NI
        1       zflow(1)

q(4)
                (.LO, .L, .UP, .M = -INF, 299.99995000065, +INF, 0)
        1       net_inj(4)
        1       sum_NI
        1       zflow(2)
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)

q(5)
                (.LO, .L, .UP, .M = -INF, -300.00080000115, +INF, 0)
        1       net_inj(5)
        1       sum_NI
        1       zflow(2)
        0.3636  ptdf_flow_hybrid(4,5)
        0.1818  ptdf_flow_hybrid(4,6)
       -0.1818  ptdf_flow_hybrid(5,6)

q(6)
                (.LO, .L, .UP, .M = -INF, 350.0003499993, +INF, 0)
        1       net_inj(6)
        1       sum_NI
        1       zflow(2)
        0.1273  ptdf_flow_hybrid(4,5)
        0.5636  ptdf_flow_hybrid(4,6)
        0.4364  ptdf_flow_hybrid(5,6)


---- f  line flow

f(1,4)
                (.LO, .L, .UP, .M = -INF, -400, +INF, 0)
       -1       zflow(1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 126
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim2 Using NLP From line 953


     f  line flow

        1       zflow(2)
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)
       -1       fwd_zconstr_hybrid_2(4,1)
       -1       bwd_zconstr_hybrid_2(4,1)

f(3,4)
                (.LO, .L, .UP, .M = -INF, 9.28650880846622E-14, +INF, 0)
       -1       zflow(1)
        1       zflow(2)
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)
       -1       fwd_zconstr_hybrid_2(4,1)
       -1       bwd_zconstr_hybrid_2(4,1)

f(3,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
       -1       zflow(1)
        1       zflow(2)
        0.3636  ptdf_flow_hybrid(4,5)
        0.1818  ptdf_flow_hybrid(4,6)
       -0.1818  ptdf_flow_hybrid(5,6)
       -1       fwd_zconstr_hybrid_2(5,1)
       -1       bwd_zconstr_hybrid_2(5,1)

f(4,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow_hybrid(4,5)
        1       fwd_lconstr_zonalsim(4,5)
        1       bwd_lconstr_zonalsim(4,5)

f(4,6)
                (.LO, .L, .UP, .M = -INF, -150.0003499993, +INF, 0)
        1       ptdf_flow_hybrid(4,6)
        1       fwd_lconstr_zonalsim(4,6)
        1       bwd_lconstr_zonalsim(4,6)

f(5,6)
                (.LO, .L, .UP, .M = -INF, -200, +INF, 0)
        1       ptdf_flow_hybrid(5,6)
        1       fwd_lconstr_zonalsim(5,6)
        1       bwd_lconstr_zonalsim(5,6)


---- surplus  total benefit minus total cost

surplus
                (.LO, .L, .UP, .M = -INF, 74387.0504789407, +INF, 0)
        1       tot_surplus
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 127
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim2 Using NLP From line 953


     surplus  total benefit minus total cost


GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 128
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE zonal_sim2 Using NLP From line 953


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS           47
BLOCKS OF VARIABLES           9     SINGLE VARIABLES           49
NON ZERO ELEMENTS           187     NON LINEAR N-Z             21
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH                 156


GENERATION TIME      =        0.016 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 129
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE zonal_sim2 Using NLP From line 953


               S O L V E      S U M M A R Y

     MODEL   zonal_sim2          OBJECTIVE  surplus
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  MINOS               FROM LINE  953

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE           126714.2272

 RESOURCE USAGE, LIMIT          0.015      1000.000
 ITERATION COUNT, LIMIT        18    2000000000
 EVALUATION ERRORS              0             0

GAMS/MINOS       30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Win
M I N O S  5.6      (Jul 2016)

    GAMS/MINOS 5.6, Large Scale Nonlinear Solver
    B. A. Murtagh, University of New South Wales
    P. E. Gill, University of California at San Diego,
    W. Murray, M. A. Saunders, and M. H. Wright,
    Systems Optimization Laboratory, Stanford University

 Work space allocated           --     0.86 Mb

 EXIT - Optimal Solution found, objective:        126714.2



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
                             1  PROJECTED
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 130
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1031


---- tot_surplus  =E=  definition of total surplus

tot_surplus..  (33.1196652399714)*qg(2,1) + (33.1196652399607)*qg(3,1) + (33.1196652399734)*qg(4,1) + (8.74998951925727)*qg(6,1) + (33.1196652399714)*qug(2,1) + (33.1196652399607)*qug(3,1) + (33.1196652399734)*qug(4,1) + (8.74998951925727)*qug(6,1)
     
      - (33.1196652399714)*qdg(2,1) - (33.1196652399607)*qdg(3,1) - (33.1196652399734)*qdg(4,1) - (8.74998951925727)*qdg(6,1) - (33.1196652399599)*qc(1,1) - (33.1196652399601)*qc(4,1) - (66.9230547632801)*qc(5,1) + (33.1196652399599)*quc(1,1)
     
      + (33.1196652399601)*quc(4,1) + (66.9230547632801)*quc(5,1) - (33.1196652399599)*qdc(1,1) - (33.1196652399601)*qdc(4,1) - (66.9230547632801)*qdc(5,1) + surplus =E= 0 ; (LHS = 0)
     

---- gcon_up  =L=  upper bound on final generation

gcon_up(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =L= 0 ; (LHS = 0)
     
gcon_up(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =L= 10000 ; (LHS = 662.393304799429)
     
gcon_up(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =L= 10000 ; (LHS = 662.393304799214)
     
gcon_up(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =L= 10000 ; (LHS = 662.393304799467)
     
gcon_up(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =L= 0 ; (LHS = 0)
     
gcon_up(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =L= 10000 ; (LHS = 349.999580770291)
     

---- gcon_lo  =G=  lower bound on final generation

gcon_lo(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =G= 0 ; (LHS = 0)
     
gcon_lo(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =G= 0 ; (LHS = 662.393304799429)
     
gcon_lo(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =G= 0 ; (LHS = 662.393304799213)
     
gcon_lo(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =G= 0 ; (LHS = 662.393304799468)
     
gcon_lo(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =G= 0 ; (LHS = 0)
     
gcon_lo(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =G= 0 ; (LHS = 349.999580770291)
     

---- ccon_up  =L=  upper bound on final consumption

ccon_up(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =L= 10000 ; (LHS = 1337.6066952008)
     
ccon_up(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =L= 0 ; (LHS = 0)
     
ccon_up(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =L= 0 ; (LHS = 0)
     
ccon_up(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =L= 10000 ; (LHS = 668.803347600398)
     
ccon_up(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =L= 10000 ; (LHS = 330.7694523672)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 131
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1031


     ccon_up  =L=  upper bound on final consumption

ccon_up(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =L= 0 ; (LHS = 0)
     

---- ccon_lo  =G=  lower bound on final consumption

ccon_lo(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =G= 0 ; (LHS = 1337.6066952008)
     
ccon_lo(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =G= 0 ; (LHS = 0)
     
ccon_lo(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =G= 0 ; (LHS = 0)
     
ccon_lo(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =G= 0 ; (LHS = 668.803347600399)
     
ccon_lo(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =G= 0 ; (LHS = 330.769452367199)
     
ccon_lo(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =G= 0 ; (LHS = 0)
     

---- gen_redisp_down  =E=  includes generation participating in downward regulation market

gen_redisp_down(1,1)..  qdg(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_down(5,1)..  qdg(5,1) =E= 0 ; (LHS = 0)
     

---- gen_redisp_up  =E=  includes generation participating in upward regulation market

gen_redisp_up(1,1)..  qug(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_up(5,1)..  qug(5,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_down  =E=  includes consumption participating in downward regulation market

con_redisp_down(2,1)..  qdc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(3,1)..  qdc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(6,1)..  qdc(6,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_up  =E=  includes consumption participating in upward regulation market

con_redisp_up(2,1)..  quc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(3,1)..  quc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(6,1)..  quc(6,1) =E= 0 ; (LHS = 0)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 132
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1031


---- net_inj  =E=  net injection in every node

net_inj(1)..  - qg(1,1) - qug(1,1) + qdg(1,1) + qc(1,1) - quc(1,1) + qdc(1,1) + q(1) =E= 0 ; (LHS = -2.27373675443232E-13, INFES = 2.27373675443232E-13 ****)
     
net_inj(2)..  - qg(2,1) - qug(2,1) + qdg(2,1) + qc(2,1) - quc(2,1) + qdc(2,1) + q(2) =E= 0 ; (LHS = -1.13686837721616E-13, INFES = 1.13686837721616E-13 ****)
     
net_inj(3)..  - qg(3,1) - qug(3,1) + qdg(3,1) + qc(3,1) - quc(3,1) + qdc(3,1) + q(3) =E= 0 ; (LHS = -1.13686837721616E-13, INFES = 1.13686837721616E-13 ****)
     
net_inj(4)..  - qg(4,1) - qug(4,1) + qdg(4,1) + qc(4,1) - quc(4,1) + qdc(4,1) + q(4) =E= 0 ; (LHS = 3.20632409511745E-13, INFES = 3.20632409511745E-13 ****)
     
net_inj(5)..  - qg(5,1) - qug(5,1) + qdg(5,1) + qc(5,1) - quc(5,1) + qdc(5,1) + q(5) =E= 0 ; (LHS = 0)
     
net_inj(6)..  - qg(6,1) - qug(6,1) + qdg(6,1) + qc(6,1) - quc(6,1) + qdc(6,1) + q(6) =E= 0 ; (LHS = 0)
     

---- sum_NI  =E=  sum of net injections

sum_NI..  q(1) + q(2) + q(3) + q(4) + q(5) + q(6) =E= 0 ; (LHS = 0)
     

---- ptdf_flow  =E=  calculates physical flows over given line

ptdf_flow(1,2)..  0.618182*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(1,2) =E= 0 ; (LHS = 112.2455173766, INFES = 112.2455173766 ****)
     
ptdf_flow(1,3)..  0.236364*q(2) + 0.472727*q(3) + 0.290909*q(4) + 0.363636*q(5) + 0.327273*q(6) + f(1,3) =E= 0 ; (LHS = 62.09812396869, INFES = 62.09812396869 ****)
     
ptdf_flow(1,4)..  0.145455*q(2) + 0.290909*q(3) + 0.563636*q(4) + 0.454545*q(5) + 0.509091*q(6) + f(1,4) =E= 0 ; (LHS = 250.443611416808, INFES = 250.443611416808 ****)
     
ptdf_flow(2,3)..  - 0.381818*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(2,3) =E= 0 ; (LHS = -50.1474374235287, INFES = 50.1474374235287 ****)
     
ptdf_flow(3,4)..  - 0.090909*q(2) - 0.181818*q(3) + 0.272727*q(4) + 0.090909*q(5) + 0.181818*q(6) + f(3,4) =E= 0 ; (LHS = -148.834426949721, INFES = 148.834426949721 ****)
     
ptdf_flow(3,5)..  - 0.054545*q(2) - 0.109091*q(3) + 0.163636*q(4) + 0.454545*q(5) + 0.309091*q(6) + f(3,5) =E= 0 ; (LHS = -101.608184894287, INFES = 101.608184894287 ****)
     
ptdf_flow(4,5)..  0.036364*q(2) + 0.072727*q(3) - 0.109091*q(4) + 0.363636*q(5) + 0.127273*q(6) + f(4,5) =E= 0 ; (LHS = 47.2262420554335, INFES = 47.2262420554335 ****)
     
ptdf_flow(4,6)..  0.018182*q(2) + 0.036364*q(3) - 0.054545*q(4) + 0.181818*q(5) + 0.563636*q(6) + f(4,6) =E= 0 ; (LHS = 23.613483634412, INFES = 23.613483634412 ****)
     
ptdf_flow(5,6)..  - 0.018182*q(2) - 0.036364*q(3) + 0.054545*q(4) - 0.181818*q(5) + 0.436364*q(6) + f(5,6) =E= 0 ; (LHS = -23.6134836344119, INFES = 23.6134836344119 ****)
     

---- fwd_lconstr  =L=  forward capacity constraint for line

fwd_lconstr(1,2)..  f(1,2) =L= 500 ; (LHS = -450.000349999301)
     
fwd_lconstr(1,3)..  f(1,3) =L= 450 ; (LHS = -400)
     
fwd_lconstr(1,4)..  f(1,4) =L= 400 ; (LHS = -62.8200856021608)
     
fwd_lconstr(2,3)..  f(2,3) =L= 50 ; (LHS = 50)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 133
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1031


     fwd_lconstr  =L=  forward capacity constraint for line

fwd_lconstr(3,4)..  f(3,4) =L= 20 ; (LHS = 0)
     
fwd_lconstr(3,5)..  f(3,5) =L= 50 ; (LHS = 50)
     
fwd_lconstr(4,5)..  f(4,5) =L= 50 ; (LHS = 50)
     
fwd_lconstr(4,6)..  f(4,6) =L= 500 ; (LHS = -149.999580770291)
     
fwd_lconstr(5,6)..  f(5,6) =L= 200 ; (LHS = -200)
     

---- bwd_lconstr  =G=  backward capacity constraint for line

bwd_lconstr(1,2)..  f(1,2) =G= -500 ; (LHS = -450.000349999301)
     
bwd_lconstr(1,3)..  f(1,3) =G= -450 ; (LHS = -400)
     
bwd_lconstr(1,4)..  f(1,4) =G= -400 ; (LHS = -62.8200856021608)
     
bwd_lconstr(2,3)..  f(2,3) =G= -50 ; (LHS = 50)
     
bwd_lconstr(3,4)..  f(3,4) =G= -20 ; (LHS = 0)
     
bwd_lconstr(3,5)..  f(3,5) =G= -50 ; (LHS = 50)
     
bwd_lconstr(4,5)..  f(4,5) =G= -50 ; (LHS = 50)
     
bwd_lconstr(4,6)..  f(4,6) =G= -500 ; (LHS = -149.999580770291)
     
bwd_lconstr(5,6)..  f(5,6) =G= -200 ; (LHS = -200)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 134
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1031


---- qg  spot market generation quantity

qg(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qg(2,1)
                (.LO, .L, .UP, .M = 662.393304799429, 662.393304799429, 662.393304799429, 0)
      (33.1197) tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qg(3,1)
                (.LO, .L, .UP, .M = 662.393304799213, 662.393304799213, 662.393304799213, 0)
      (33.1197) tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qg(4,1)
                (.LO, .L, .UP, .M = 662.393304799468, 662.393304799468, 662.393304799468, 0)
      (33.1197) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qg(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qg(6,1)
                (.LO, .L, .UP, .M = 349.999580770291, 349.999580770291, 349.999580770291, 0)
       (8.75)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qug  upregulation generation quantity

qug(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -7.105427357601E-15)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
        1       gen_redisp_up(1,1)
       -1       net_inj(1)

qug(2,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 135
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1031


     qug  upregulation generation quantity

                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (33.1197) tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qug(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (33.1197) tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qug(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (33.1197) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qug(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -1.4210854715202E-14)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
        1       gen_redisp_up(5,1)
       -1       net_inj(5)

qug(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       (8.75)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qdg  downregulation generation quantity

qdg(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 7.105427357601E-15)
       -1       gcon_up(1,1)
       -1       gcon_lo(1,1)
        1       gen_redisp_down(1,1)
        1       net_inj(1)

qdg(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-33.1197) tot_surplus
       -1       gcon_up(2,1)
       -1       gcon_lo(2,1)
        1       net_inj(2)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 136
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1031


     qdg  downregulation generation quantity

qdg(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-33.1197) tot_surplus
       -1       gcon_up(3,1)
       -1       gcon_lo(3,1)
        1       net_inj(3)

qdg(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-33.1197) tot_surplus
       -1       gcon_up(4,1)
       -1       gcon_lo(4,1)
        1       net_inj(4)

qdg(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 1.4210854715202E-14)
       -1       gcon_up(5,1)
       -1       gcon_lo(5,1)
        1       gen_redisp_down(5,1)
        1       net_inj(5)

qdg(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (-8.75)   tot_surplus
       -1       gcon_up(6,1)
       -1       gcon_lo(6,1)
        1       net_inj(6)


---- qc  spot market consumption quantity

qc(1,1)
                (.LO, .L, .UP, .M = 1337.6066952008, 1337.6066952008, 1337.6066952008, 0)
     (-33.1197) tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -1.2895677395323E-14)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -6.44783869766151E-15)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qc(4,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 137
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1031


     qc  spot market consumption quantity

                (.LO, .L, .UP, .M = 668.803347600399, 668.803347600399, 668.803347600399, -1.32587274492835E-11)
     (-33.1197) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qc(5,1)
                (.LO, .L, .UP, .M = 330.769452367199, 330.769452367199, 330.769452367199, 0)
     (-66.9231) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)


---- quc  upregulation consumption quantity

quc(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (33.1197) tot_surplus
       -1       ccon_up(1,1)
       -1       ccon_lo(1,1)
       -1       net_inj(1)

quc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       ccon_up(2,1)
       -1       ccon_lo(2,1)
        1       con_redisp_up(2,1)
       -1       net_inj(2)

quc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       ccon_up(3,1)
       -1       ccon_lo(3,1)
        1       con_redisp_up(3,1)
       -1       net_inj(3)

quc(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 1.32587274492835E-11)
      (33.1197) tot_surplus
       -1       ccon_up(4,1)
       -1       ccon_lo(4,1)
       -1       net_inj(4)

quc(5,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 138
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1031


     quc  upregulation consumption quantity

                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (66.9231) tot_surplus
       -1       ccon_up(5,1)
       -1       ccon_lo(5,1)
       -1       net_inj(5)

quc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       ccon_up(6,1)
       -1       ccon_lo(6,1)
        1       con_redisp_up(6,1)
       -1       net_inj(6)


---- qdc  downregulation consumption quantity

qdc(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-33.1197) tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qdc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       con_redisp_down(2,1)
        1       net_inj(2)

qdc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       con_redisp_down(3,1)
        1       net_inj(3)

qdc(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -1.32587274492835E-11)
     (-33.1197) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qdc(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-66.9231) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 139
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1031


     qdc  downregulation consumption quantity

qdc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       con_redisp_down(6,1)
        1       net_inj(6)


---- q  net injection quantity

q(1)
                (.LO, .L, .UP, .M = -INF, -1337.6066952008, +INF, 1.15676773634211E-11)
        1       net_inj(1)
        1       sum_NI

q(2)
                (.LO, .L, .UP, .M = -INF, 662.393304799429, +INF, 0)
        1       net_inj(2)
        1       sum_NI
        0.6182  ptdf_flow(1,2)
        0.2364  ptdf_flow(1,3)
        0.1455  ptdf_flow(1,4)
       -0.3818  ptdf_flow(2,3)
       -0.0909  ptdf_flow(3,4)
       -0.0545  ptdf_flow(3,5)
        0.0364  ptdf_flow(4,5)
        0.0182  ptdf_flow(4,6)
       -0.0182  ptdf_flow(5,6)

q(3)
                (.LO, .L, .UP, .M = -INF, 662.393304799213, +INF, 1.07850540586065E-11)
        1       net_inj(3)
        1       sum_NI
        0.2364  ptdf_flow(1,2)
        0.4727  ptdf_flow(1,3)
        0.2909  ptdf_flow(1,4)
        0.2364  ptdf_flow(2,3)
       -0.1818  ptdf_flow(3,4)
       -0.1091  ptdf_flow(3,5)
        0.0727  ptdf_flow(4,5)
        0.0364  ptdf_flow(4,6)
       -0.0364  ptdf_flow(5,6)

q(4)
                (.LO, .L, .UP, .M = -INF, -6.41004280093082, +INF, 0)
        1       net_inj(4)
        1       sum_NI
        0.1455  ptdf_flow(1,2)
        0.2909  ptdf_flow(1,3)
        0.5636  ptdf_flow(1,4)
        0.1455  ptdf_flow(2,3)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 140
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1031


     q  net injection quantity

        0.2727  ptdf_flow(3,4)
        0.1636  ptdf_flow(3,5)
       -0.1091  ptdf_flow(4,5)
       -0.0545  ptdf_flow(4,6)
        0.0545  ptdf_flow(5,6)

q(5)
                (.LO, .L, .UP, .M = -INF, -330.769452367199, +INF, 0)
        1       net_inj(5)
        1       sum_NI
        0.1818  ptdf_flow(1,2)
        0.3636  ptdf_flow(1,3)
        0.4545  ptdf_flow(1,4)
        0.1818  ptdf_flow(2,3)
        0.0909  ptdf_flow(3,4)
        0.4545  ptdf_flow(3,5)
        0.3636  ptdf_flow(4,5)
        0.1818  ptdf_flow(4,6)
       -0.1818  ptdf_flow(5,6)

q(6)
                (.LO, .L, .UP, .M = -INF, 349.999580770291, +INF, 0)
        1       net_inj(6)
        1       sum_NI
        0.1636  ptdf_flow(1,2)
        0.3273  ptdf_flow(1,3)
        0.5091  ptdf_flow(1,4)
        0.1636  ptdf_flow(2,3)
        0.1818  ptdf_flow(3,4)
        0.3091  ptdf_flow(3,5)
        0.1273  ptdf_flow(4,5)
        0.5636  ptdf_flow(4,6)
        0.4364  ptdf_flow(5,6)


---- f  line flow

f(1,2)
                (.LO, .L, .UP, .M = -INF, -450.000349999301, +INF, 0)
        1       ptdf_flow(1,2)
        1       fwd_lconstr(1,2)
        1       bwd_lconstr(1,2)

f(1,3)
                (.LO, .L, .UP, .M = -INF, -400, +INF, 0)
        1       ptdf_flow(1,3)
        1       fwd_lconstr(1,3)
        1       bwd_lconstr(1,3)

f(1,4)
                (.LO, .L, .UP, .M = -INF, -62.8200856021608, +INF, 1.93411582035899E-12)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 141
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1031


     f  line flow

        1       ptdf_flow(1,4)
        1       fwd_lconstr(1,4)
        1       bwd_lconstr(1,4)

f(2,3)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow(2,3)
        1       fwd_lconstr(2,3)
        1       bwd_lconstr(2,3)

f(3,4)
                (.LO, .L, .UP, .M = -INF, 9.28650880846622E-14, +INF, 1.93411582035899E-12)
        1       ptdf_flow(3,4)
        1       fwd_lconstr(3,4)
        1       bwd_lconstr(3,4)

f(3,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow(3,5)
        1       fwd_lconstr(3,5)
        1       bwd_lconstr(3,5)

f(4,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow(4,5)
        1       fwd_lconstr(4,5)
        1       bwd_lconstr(4,5)

f(4,6)
                (.LO, .L, .UP, .M = -INF, -149.999580770291, +INF, 0)
        1       ptdf_flow(4,6)
        1       fwd_lconstr(4,6)
        1       bwd_lconstr(4,6)

f(5,6)
                (.LO, .L, .UP, .M = -INF, -200, +INF, 0)
        1       ptdf_flow(5,6)
        1       fwd_lconstr(5,6)
        1       bwd_lconstr(5,6)


---- surplus  total benefit minus total cost

surplus
                (.LO, .L, .UP, .M = -INF, 126714.22722168, +INF, 0)
        1       tot_surplus

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 142
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE redispatch Using NLP From line 1031


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS           69
BLOCKS OF VARIABLES           9     SINGLE VARIABLES           52
NON ZERO ELEMENTS           224     NON LINEAR N-Z             21
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH                 156


GENERATION TIME      =        0.031 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 143
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE redispatch Using NLP From line 1031


               S O L V E      S U M M A R Y

     MODEL   redispatch          OBJECTIVE  surplus
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  MINOS               FROM LINE  1031

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE           117805.9091

 RESOURCE USAGE, LIMIT          0.016      1000.000
 ITERATION COUNT, LIMIT        15    2000000000
 EVALUATION ERRORS              0             0

GAMS/MINOS       30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Win
M I N O S  5.6      (Jul 2016)

    GAMS/MINOS 5.6, Large Scale Nonlinear Solver
    B. A. Murtagh, University of New South Wales
    P. E. Gill, University of California at San Diego,
    W. Murray, M. A. Saunders, and M. H. Wright,
    Systems Optimization Laboratory, Stanford University

 Work space allocated           --     0.87 Mb

 EXIT - Optimal Solution found, objective:        117805.9



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
                             3  PROJECTED
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 144
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal_sim3 Using NLP From line 1106


---- tot_surplus  =E=  definition of total surplus

tot_surplus..  (33.1196652399714)*qg(2,1) + (33.1196652399607)*qg(3,1) + (33.1196652399734)*qg(4,1) + (8.74998951925727)*qg(6,1) + (33.1196652399714)*qug(2,1) + (33.1196652399607)*qug(3,1) + (33.1196652399734)*qug(4,1) + (8.74998951925727)*qug(6,1)
     
      - (33.1196652399714)*qdg(2,1) - (33.1196652399607)*qdg(3,1) - (33.1196652399734)*qdg(4,1) - (8.74998951925727)*qdg(6,1) - (33.1196652399599)*qc(1,1) - (33.1196652399601)*qc(4,1) - (66.9230547632801)*qc(5,1) + (33.1196652399599)*quc(1,1)
     
      + (33.1196652399601)*quc(4,1) + (66.9230547632801)*quc(5,1) - (33.1196652399599)*qdc(1,1) - (33.1196652399601)*qdc(4,1) - (66.9230547632801)*qdc(5,1) + surplus =E= 0 ; (LHS = -8908.31811260217, INFES = 8908.31811260217 ****)
     

---- gcon_up  =L=  upper bound on final generation

gcon_up(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =L= 0 ; (LHS = 0)
     
gcon_up(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =L= 10000 ; (LHS = 662.393304799429)
     
gcon_up(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =L= 10000 ; (LHS = 662.393304799214)
     
gcon_up(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =L= 10000 ; (LHS = 662.393304799467)
     
gcon_up(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =L= 0 ; (LHS = 0)
     
gcon_up(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =L= 10000 ; (LHS = 349.999580770291)
     

---- gcon_lo  =G=  lower bound on final generation

gcon_lo(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =G= 0 ; (LHS = 0)
     
gcon_lo(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =G= 0 ; (LHS = 662.393304799429)
     
gcon_lo(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =G= 0 ; (LHS = 662.393304799213)
     
gcon_lo(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =G= 0 ; (LHS = 662.393304799468)
     
gcon_lo(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =G= 0 ; (LHS = 0)
     
gcon_lo(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =G= 0 ; (LHS = 349.999580770291)
     

---- ccon_up  =L=  upper bound on final consumption

ccon_up(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =L= 10000 ; (LHS = 1337.6066952008)
     
ccon_up(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =L= 0 ; (LHS = 0)
     
ccon_up(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =L= 0 ; (LHS = 0)
     
ccon_up(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =L= 10000 ; (LHS = 668.803347600398)
     
ccon_up(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =L= 10000 ; (LHS = 330.7694523672)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 145
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal_sim3 Using NLP From line 1106


     ccon_up  =L=  upper bound on final consumption

ccon_up(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =L= 0 ; (LHS = 0)
     

---- ccon_lo  =G=  lower bound on final consumption

ccon_lo(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =G= 0 ; (LHS = 1337.6066952008)
     
ccon_lo(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =G= 0 ; (LHS = 0)
     
ccon_lo(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =G= 0 ; (LHS = 0)
     
ccon_lo(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =G= 0 ; (LHS = 668.803347600399)
     
ccon_lo(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =G= 0 ; (LHS = 330.769452367199)
     
ccon_lo(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =G= 0 ; (LHS = 0)
     

---- net_inj  =E=  net injection in every node

net_inj(1)..  - qg(1,1) - qug(1,1) + qdg(1,1) + qc(1,1) - quc(1,1) + qdc(1,1) + q(1) =E= 0 ; (LHS = 47.607185202532, INFES = 47.607185202532 ****)
     
net_inj(2)..  - qg(2,1) - qug(2,1) + qdg(2,1) + qc(2,1) - quc(2,1) + qdc(2,1) + q(2) =E= 0 ; (LHS = -142.392994800049, INFES = 142.392994800049 ****)
     
net_inj(3)..  - qg(3,1) - qug(3,1) + qdg(3,1) + qc(3,1) - quc(3,1) + qdc(3,1) + q(3) =E= 0 ; (LHS = -222.393544799143, INFES = 222.393544799143 ****)
     
net_inj(4)..  - qg(4,1) - qug(4,1) + qdg(4,1) + qc(4,1) - quc(4,1) + qdc(4,1) + q(4) =E= 0 ; (LHS = 246.409972801481, INFES = 246.409972801481 ****)
     
net_inj(5)..  - qg(5,1) - qug(5,1) + qdg(5,1) + qc(5,1) - quc(5,1) + qdc(5,1) + q(5) =E= 0 ; (LHS = 50.7686523660893, INFES = 50.7686523660893 ****)
     
net_inj(6)..  - qg(6,1) - qug(6,1) + qdg(6,1) + qc(6,1) - quc(6,1) + qdc(6,1) + q(6) =E= 0 ; (LHS = 20.0007292290892, INFES = 20.0007292290892 ****)
     

---- sum_NI  =E=  sum of net injections

sum_NI..  q(1) + q(2) + q(3) + q(4) + q(5) + q(6) =E= 0 ; (LHS = -1.70530256582424E-13, INFES = 1.70530256582424E-13 ****)
     

---- zflow  =E=  links zonal injections to zonal flows

zflow(1)..  q(1) + q(2) + q(3) - f(1,4) - f(3,4) - f(3,5) =E= 0 ; (LHS = 0.000560001179678693, INFES = 0.000560001179678693 ****)
     
zflow(2)..  q(4) + q(5) + q(6) + f(1,4) + f(3,4) + f(3,5) =E= 0 ; (LHS = -0.000560001179849223, INFES = 0.000560001179849223 ****)
     

---- ptdf_flow_hybrid  =E=  calculates physical flows over given line connected to hybrid node

ptdf_flow_hybrid(4,5)..  - 0.109091*q(4) + 0.363636*q(5) + 0.127273*q(6) - 0.109091*f(1,4) - 0.109091*f(3,4) + 0.363636*f(3,5) + f(4,5) =E= 0 ; (LHS = 8.72722618165749, INFES = 8.72722618165749 ****)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 146
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal_sim3 Using NLP From line 1106


     ptdf_flow_hybrid  =E=  calculates physical flows over given line connected to hybrid node

ptdf_flow_hybrid(4,6)..  - 0.054545*q(4) + 0.181818*q(5) + 0.563636*q(6) - 0.054545*f(1,4) - 0.054545*f(3,4) + 0.181818*f(3,5) + f(4,6) =E= 0 ; (LHS = 4.36320309094873, INFES = 4.36320309094873 ****)
     
ptdf_flow_hybrid(5,6)..  0.054545*q(4) - 0.181818*q(5) + 0.436364*q(6) + 0.054545*f(1,4) + 0.054545*f(3,4) - 0.181818*f(3,5) + f(5,6) =E= 0 ; (LHS = -4.36320309094873, INFES = 4.36320309094873 ****)
     

---- fwd_zconstr_hybrid_3  =L=  forward line capacity constraint specific to hybrid nodes and zonal nodes

fwd_zconstr_hybrid_3(1,4)..  f(1,4) =L= 400 ; (LHS = -400)
     
fwd_zconstr_hybrid_3(3,4)..  f(3,4) =L= 20 ; (LHS = 20)
     
fwd_zconstr_hybrid_3(3,5)..  f(3,5) =L= 50 ; (LHS = 50)
     

---- bwd_zconstr_hybrid_3  =G=  backward line capacity constraint specific to hybrid nodes and zonal nodes

bwd_zconstr_hybrid_3(1,4)..  f(1,4) =G= -400 ; (LHS = -400)
     
bwd_zconstr_hybrid_3(3,4)..  f(3,4) =G= -20 ; (LHS = 20)
     
bwd_zconstr_hybrid_3(3,5)..  f(3,5) =G= -50 ; (LHS = 50)
     

---- fwd_lconstr_zonalsim  =L=  forward capacity constraint for line

fwd_lconstr_zonalsim(4,5)..  f(4,5) =L= 50 ; (LHS = 30.0000000000001)
     
fwd_lconstr_zonalsim(4,6)..  f(4,6) =L= 500 ; (LHS = -170.00030999938)
     
fwd_lconstr_zonalsim(5,6)..  f(5,6) =L= 200 ; (LHS = -200)
     

---- bwd_lconstr_zonalsim  =G=  backward capacity constraint for line

bwd_lconstr_zonalsim(4,5)..  f(4,5) =G= -50 ; (LHS = 30.0000000000001)
     
bwd_lconstr_zonalsim(4,6)..  f(4,6) =G= -500 ; (LHS = -170.00030999938)
     
bwd_lconstr_zonalsim(5,6)..  f(5,6) =G= -200 ; (LHS = -200)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 147
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim3 Using NLP From line 1106


---- qg  spot market generation quantity

qg(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qg(2,1)
                (.LO, .L, .UP, .M = 0, 662.393304799429, +INF, -7.11964974000244)
      (33.1197) tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qg(3,1)
                (.LO, .L, .UP, .M = 0, 662.393304799213, +INF, -11.1196772399572)
      (33.1197) tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qg(4,1)
                (.LO, .L, .UP, .M = 0, 662.393304799468, +INF, 10.9515543467318)
      (33.1197) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qg(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qg(6,1)
                (.LO, .L, .UP, .M = 0, 349.999580770291, +INF, 0.500018230727228)
       (8.75)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qug  upregulation generation quantity

qug(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -6.90048702774986E-15)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qug(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -7.11964974000244)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 148
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim3 Using NLP From line 1106


     qug  upregulation generation quantity

      (33.1197) tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qug(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -11.1196772399572)
      (33.1197) tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qug(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
      (33.1197) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qug(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -1.30836556880724E-14)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qug(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (8.75)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qdg  downregulation generation quantity

qdg(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 6.90048702774986E-15)
       -1       gcon_up(1,1)
       -1       gcon_lo(1,1)
        1       net_inj(1)

qdg(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
     (-33.1197) tot_surplus
       -1       gcon_up(2,1)
       -1       gcon_lo(2,1)
        1       net_inj(2)

qdg(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
     (-33.1197) tot_surplus
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 149
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim3 Using NLP From line 1106


     qdg  downregulation generation quantity

       -1       gcon_up(3,1)
       -1       gcon_lo(3,1)
        1       net_inj(3)

qdg(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -10.9515543467318)
     (-33.1197) tot_surplus
       -1       gcon_up(4,1)
       -1       gcon_lo(4,1)
        1       net_inj(4)

qdg(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 1.30836556880724E-14)
       -1       gcon_up(5,1)
       -1       gcon_lo(5,1)
        1       net_inj(5)

qdg(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -0.500018230727228)
      (-8.75)   tot_surplus
       -1       gcon_up(6,1)
       -1       gcon_lo(6,1)
        1       net_inj(6)


---- qc  spot market consumption quantity

qc(1,1)
                (.LO, .L, .UP, .M = 0, 1337.6066952008, +INF, -16.6625148208861)
     (-33.1197) tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 3.5527136788005E-15)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 1.77635683940025E-15)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qc(4,1)
                (.LO, .L, .UP, .M = 0, 668.803347600399, +INF, -19.1652201067922)
     (-33.1197) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 150
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim3 Using NLP From line 1106


     qc  spot market consumption quantity

        1       net_inj(4)

qc(5,1)
                (.LO, .L, .UP, .M = 0, 330.769452367199, +INF, -35.5380566562625)
     (-66.9231) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 1.77635683940025E-15)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)


---- quc  upregulation consumption quantity

quc(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
      (33.1197) tot_surplus
       -1       ccon_up(1,1)
       -1       ccon_lo(1,1)
       -1       net_inj(1)

quc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
       -1       ccon_up(2,1)
       -1       ccon_lo(2,1)
       -1       net_inj(2)

quc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       ccon_up(3,1)
       -1       ccon_lo(3,1)
       -1       net_inj(3)

quc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 2.1316282072803E-14)
      (33.1197) tot_surplus
       -1       ccon_up(4,1)
       -1       ccon_lo(4,1)
       -1       net_inj(4)

quc(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
      (66.9231) tot_surplus
       -1       ccon_up(5,1)
       -1       ccon_lo(5,1)
       -1       net_inj(5)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 151
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim3 Using NLP From line 1106


     quc  upregulation consumption quantity

quc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       ccon_up(6,1)
       -1       ccon_lo(6,1)
       -1       net_inj(6)


---- qdc  downregulation consumption quantity

qdc(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -16.6625148208861)
     (-33.1197) tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qdc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qdc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qdc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -19.1652201067922)
     (-33.1197) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qdc(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -35.5380566562625)
     (-66.9231) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qdc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 152
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim3 Using NLP From line 1106


---- q  net injection quantity

q(1)
                (.LO, .L, .UP, .M = -INF, -1289.99950999827, +INF, 0)
        1       net_inj(1)
        1       sum_NI
        1       zflow(1)

q(2)
                (.LO, .L, .UP, .M = -INF, 520.00030999938, +INF, 0)
        1       net_inj(2)
        1       sum_NI
        1       zflow(1)

q(3)
                (.LO, .L, .UP, .M = -INF, 439.99976000007, +INF, 0)
        1       net_inj(3)
        1       sum_NI
        1       zflow(1)

q(4)
                (.LO, .L, .UP, .M = -INF, 239.99993000055, +INF, 0)
        1       net_inj(4)
        1       sum_NI
        1       zflow(2)
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)

q(5)
                (.LO, .L, .UP, .M = -INF, -280.00080000111, +INF, 0)
        1       net_inj(5)
        1       sum_NI
        1       zflow(2)
        0.3636  ptdf_flow_hybrid(4,5)
        0.1818  ptdf_flow_hybrid(4,6)
       -0.1818  ptdf_flow_hybrid(5,6)

q(6)
                (.LO, .L, .UP, .M = -INF, 370.00030999938, +INF, 0)
        1       net_inj(6)
        1       sum_NI
        1       zflow(2)
        0.1273  ptdf_flow_hybrid(4,5)
        0.5636  ptdf_flow_hybrid(4,6)
        0.4364  ptdf_flow_hybrid(5,6)


---- f  line flow

f(1,4)
                (.LO, .L, .UP, .M = -INF, -400, +INF, 0)
       -1       zflow(1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 153
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim3 Using NLP From line 1106


     f  line flow

        1       zflow(2)
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)
        1       fwd_zconstr_hybrid_3(1,4)
        1       bwd_zconstr_hybrid_3(1,4)

f(3,4)
                (.LO, .L, .UP, .M = -INF, 20, +INF, 0)
       -1       zflow(1)
        1       zflow(2)
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)
        1       fwd_zconstr_hybrid_3(3,4)
        1       bwd_zconstr_hybrid_3(3,4)

f(3,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
       -1       zflow(1)
        1       zflow(2)
        0.3636  ptdf_flow_hybrid(4,5)
        0.1818  ptdf_flow_hybrid(4,6)
       -0.1818  ptdf_flow_hybrid(5,6)
        1       fwd_zconstr_hybrid_3(3,5)
        1       bwd_zconstr_hybrid_3(3,5)

f(4,5)
                (.LO, .L, .UP, .M = -INF, 30.0000000000001, +INF, 0)
        1       ptdf_flow_hybrid(4,5)
        1       fwd_lconstr_zonalsim(4,5)
        1       bwd_lconstr_zonalsim(4,5)

f(4,6)
                (.LO, .L, .UP, .M = -INF, -170.00030999938, +INF, 0)
        1       ptdf_flow_hybrid(4,6)
        1       fwd_lconstr_zonalsim(4,6)
        1       bwd_lconstr_zonalsim(4,6)

f(5,6)
                (.LO, .L, .UP, .M = -INF, -200, +INF, 0)
        1       ptdf_flow_hybrid(5,6)
        1       fwd_lconstr_zonalsim(5,6)
        1       bwd_lconstr_zonalsim(5,6)


---- surplus  total benefit minus total cost

surplus
                (.LO, .L, .UP, .M = -INF, 117805.909109078, +INF, 0)
        1       tot_surplus
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 154
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_sim3 Using NLP From line 1106


     surplus  total benefit minus total cost


GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 155
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE zonal_sim3 Using NLP From line 1106


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS           49
BLOCKS OF VARIABLES           9     SINGLE VARIABLES           49
NON ZERO ELEMENTS           187     NON LINEAR N-Z             21
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH                 156


GENERATION TIME      =        0.031 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 156
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE zonal_sim3 Using NLP From line 1106


               S O L V E      S U M M A R Y

     MODEL   zonal_sim3          OBJECTIVE  surplus
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  MINOS               FROM LINE  1106

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE           126714.2272

 RESOURCE USAGE, LIMIT          0.016      1000.000
 ITERATION COUNT, LIMIT        19    2000000000
 EVALUATION ERRORS              0             0

GAMS/MINOS       30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Win
M I N O S  5.6      (Jul 2016)

    GAMS/MINOS 5.6, Large Scale Nonlinear Solver
    B. A. Murtagh, University of New South Wales
    P. E. Gill, University of California at San Diego,
    W. Murray, M. A. Saunders, and M. H. Wright,
    Systems Optimization Laboratory, Stanford University

 Work space allocated           --     0.86 Mb

 EXIT - Optimal Solution found, objective:        126714.2



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 157
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1184


---- tot_surplus  =E=  definition of total surplus

tot_surplus..  (33.1196652399692)*qg(2,1) + (33.1196652399629)*qg(3,1) + (33.119665239971)*qg(4,1) + (8.74998951925727)*qg(6,1) + (33.1196652399692)*qug(2,1) + (33.1196652399629)*qug(3,1) + (33.119665239971)*qug(4,1) + (8.74998951925727)*qug(6,1)
     
      - (33.1196652399692)*qdg(2,1) - (33.1196652399629)*qdg(3,1) - (33.119665239971)*qdg(4,1) - (8.74998951925727)*qdg(6,1) - (33.1196652399621)*qc(1,1) - (33.1196652399603)*qc(4,1) - (66.9230547632801)*qc(5,1) + (33.1196652399621)*quc(1,1)
     
      + (33.1196652399603)*quc(4,1) + (66.9230547632801)*quc(5,1) - (33.1196652399621)*qdc(1,1) - (33.1196652399603)*qdc(4,1) - (66.9230547632801)*qdc(5,1) + surplus =E= 0 ; (LHS = 0)
     

---- gcon_up  =L=  upper bound on final generation

gcon_up(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =L= 0 ; (LHS = 0)
     
gcon_up(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =L= 10000 ; (LHS = 662.393304799383)
     
gcon_up(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =L= 10000 ; (LHS = 662.393304799258)
     
gcon_up(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =L= 10000 ; (LHS = 662.393304799421)
     
gcon_up(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =L= 0 ; (LHS = 0)
     
gcon_up(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =L= 10000 ; (LHS = 349.999580770291)
     

---- gcon_lo  =G=  lower bound on final generation

gcon_lo(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =G= 0 ; (LHS = 0)
     
gcon_lo(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =G= 0 ; (LHS = 662.393304799383)
     
gcon_lo(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =G= 0 ; (LHS = 662.393304799258)
     
gcon_lo(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =G= 0 ; (LHS = 662.393304799421)
     
gcon_lo(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =G= 0 ; (LHS = 0)
     
gcon_lo(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =G= 0 ; (LHS = 349.999580770291)
     

---- ccon_up  =L=  upper bound on final consumption

ccon_up(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =L= 10000 ; (LHS = 1337.60669520076)
     
ccon_up(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =L= 0 ; (LHS = 0)
     
ccon_up(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =L= 0 ; (LHS = 0)
     
ccon_up(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =L= 10000 ; (LHS = 668.803347600397)
     
ccon_up(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =L= 10000 ; (LHS = 330.7694523672)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 158
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1184


     ccon_up  =L=  upper bound on final consumption

ccon_up(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =L= 0 ; (LHS = 0)
     

---- ccon_lo  =G=  lower bound on final consumption

ccon_lo(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =G= 0 ; (LHS = 1337.60669520076)
     
ccon_lo(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =G= 0 ; (LHS = 0)
     
ccon_lo(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =G= 0 ; (LHS = 0)
     
ccon_lo(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =G= 0 ; (LHS = 668.803347600397)
     
ccon_lo(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =G= 0 ; (LHS = 330.769452367199)
     
ccon_lo(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =G= 0 ; (LHS = 0)
     

---- gen_redisp_down  =E=  includes generation participating in downward regulation market

gen_redisp_down(1,1)..  qdg(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_down(5,1)..  qdg(5,1) =E= 0 ; (LHS = 0)
     

---- gen_redisp_up  =E=  includes generation participating in upward regulation market

gen_redisp_up(1,1)..  qug(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_up(5,1)..  qug(5,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_down  =E=  includes consumption participating in downward regulation market

con_redisp_down(2,1)..  qdc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(3,1)..  qdc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(6,1)..  qdc(6,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_up  =E=  includes consumption participating in upward regulation market

con_redisp_up(2,1)..  quc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(3,1)..  quc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(6,1)..  quc(6,1) =E= 0 ; (LHS = 0)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 159
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1184


---- net_inj  =E=  net injection in every node

net_inj(1)..  - qg(1,1) - qug(1,1) + qdg(1,1) + qc(1,1) - quc(1,1) + qdc(1,1) + q(1) =E= 0 ; (LHS = 0)
     
net_inj(2)..  - qg(2,1) - qug(2,1) + qdg(2,1) + qc(2,1) - quc(2,1) + qdc(2,1) + q(2) =E= 0 ; (LHS = 1.13686837721616E-13, INFES = 1.13686837721616E-13 ****)
     
net_inj(3)..  - qg(3,1) - qug(3,1) + qdg(3,1) + qc(3,1) - quc(3,1) + qdc(3,1) + q(3) =E= 0 ; (LHS = 1.13686837721616E-13, INFES = 1.13686837721616E-13 ****)
     
net_inj(4)..  - qg(4,1) - qug(4,1) + qdg(4,1) + qc(4,1) - quc(4,1) + qdc(4,1) + q(4) =E= 0 ; (LHS = -1.71418435002124E-13, INFES = 1.71418435002124E-13 ****)
     
net_inj(5)..  - qg(5,1) - qug(5,1) + qdg(5,1) + qc(5,1) - quc(5,1) + qdc(5,1) + q(5) =E= 0 ; (LHS = 0)
     
net_inj(6)..  - qg(6,1) - qug(6,1) + qdg(6,1) + qc(6,1) - quc(6,1) + qdc(6,1) + q(6) =E= 0 ; (LHS = 0)
     

---- sum_NI  =E=  sum of net injections

sum_NI..  q(1) + q(2) + q(3) + q(4) + q(5) + q(6) =E= 0 ; (LHS = 0)
     

---- ptdf_flow  =E=  calculates physical flows over given line

ptdf_flow(1,2)..  0.618182*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(1,2) =E= 0 ; (LHS = 92.245557376496, INFES = 92.245557376496 ****)
     
ptdf_flow(1,3)..  0.236364*q(2) + 0.472727*q(3) + 0.290909*q(4) + 0.363636*q(5) + 0.327273*q(6) + f(1,3) =E= 0 ; (LHS = 42.0981239686878, INFES = 42.0981239686878 ****)
     
ptdf_flow(1,4)..  0.145455*q(2) + 0.290909*q(3) + 0.563636*q(4) + 0.454545*q(5) + 0.509091*q(6) + f(1,4) =E= 0 ; (LHS = 230.443611416835, INFES = 230.443611416835 ****)
     
ptdf_flow(2,3)..  - 0.381818*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(2,3) =E= 0 ; (LHS = -50.1474374235072, INFES = 50.1474374235072 ****)
     
ptdf_flow(3,4)..  - 0.090909*q(2) - 0.181818*q(3) + 0.272727*q(4) + 0.090909*q(5) + 0.181818*q(6) + f(3,4) =E= 0 ; (LHS = -128.834426949738, INFES = 128.834426949738 ****)
     
ptdf_flow(3,5)..  - 0.054545*q(2) - 0.109091*q(3) + 0.163636*q(4) + 0.454545*q(5) + 0.309091*q(6) + f(3,5) =E= 0 ; (LHS = -101.608184894297, INFES = 101.608184894297 ****)
     
ptdf_flow(4,5)..  0.036364*q(2) + 0.072727*q(3) - 0.109091*q(4) + 0.363636*q(5) + 0.127273*q(6) + f(4,5) =E= 0 ; (LHS = 47.2262420554401, INFES = 47.2262420554401 ****)
     
ptdf_flow(4,6)..  0.018182*q(2) + 0.036364*q(3) - 0.054545*q(4) + 0.181818*q(5) + 0.563636*q(6) + f(4,6) =E= 0 ; (LHS = 23.6134836344153, INFES = 23.6134836344153 ****)
     
ptdf_flow(5,6)..  - 0.018182*q(2) - 0.036364*q(3) + 0.054545*q(4) - 0.181818*q(5) + 0.436364*q(6) + f(5,6) =E= 0 ; (LHS = -23.6134836344153, INFES = 23.6134836344153 ****)
     

---- fwd_lconstr  =L=  forward capacity constraint for line

fwd_lconstr(1,2)..  f(1,2) =L= 500 ; (LHS = -470.00030999938)
     
fwd_lconstr(1,3)..  f(1,3) =L= 450 ; (LHS = -420)
     
fwd_lconstr(1,4)..  f(1,4) =L= 400 ; (LHS = -82.8200856021152)
     
fwd_lconstr(2,3)..  f(2,3) =L= 50 ; (LHS = 50)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 160
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1184


     fwd_lconstr  =L=  forward capacity constraint for line

fwd_lconstr(3,4)..  f(3,4) =L= 20 ; (LHS = 20)
     
fwd_lconstr(3,5)..  f(3,5) =L= 50 ; (LHS = 50)
     
fwd_lconstr(4,5)..  f(4,5) =L= 50 ; (LHS = 50)
     
fwd_lconstr(4,6)..  f(4,6) =L= 500 ; (LHS = -149.999580770291)
     
fwd_lconstr(5,6)..  f(5,6) =L= 200 ; (LHS = -200)
     

---- bwd_lconstr  =G=  backward capacity constraint for line

bwd_lconstr(1,2)..  f(1,2) =G= -500 ; (LHS = -470.00030999938)
     
bwd_lconstr(1,3)..  f(1,3) =G= -450 ; (LHS = -420)
     
bwd_lconstr(1,4)..  f(1,4) =G= -400 ; (LHS = -82.8200856021152)
     
bwd_lconstr(2,3)..  f(2,3) =G= -50 ; (LHS = 50)
     
bwd_lconstr(3,4)..  f(3,4) =G= -20 ; (LHS = 20)
     
bwd_lconstr(3,5)..  f(3,5) =G= -50 ; (LHS = 50)
     
bwd_lconstr(4,5)..  f(4,5) =G= -50 ; (LHS = 50)
     
bwd_lconstr(4,6)..  f(4,6) =G= -500 ; (LHS = -149.999580770291)
     
bwd_lconstr(5,6)..  f(5,6) =G= -200 ; (LHS = -200)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 161
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1184


---- qg  spot market generation quantity

qg(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qg(2,1)
                (.LO, .L, .UP, .M = 662.393304799383, 662.393304799383, 662.393304799383, 0)
      (33.1197) tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qg(3,1)
                (.LO, .L, .UP, .M = 662.393304799258, 662.393304799258, 662.393304799258, 0)
      (33.1197) tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qg(4,1)
                (.LO, .L, .UP, .M = 662.393304799421, 662.393304799421, 662.393304799421, 0)
      (33.1197) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qg(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qg(6,1)
                (.LO, .L, .UP, .M = 349.999580770291, 349.999580770291, 349.999580770291, 0)
       (8.75)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qug  upregulation generation quantity

qug(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
        1       gen_redisp_up(1,1)
       -1       net_inj(1)

qug(2,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 162
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1184


     qug  upregulation generation quantity

                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (33.1197) tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qug(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (33.1197) tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qug(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (33.1197) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qug(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -1.4210854715202E-14)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
        1       gen_redisp_up(5,1)
       -1       net_inj(5)

qug(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       (8.75)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qdg  downregulation generation quantity

qdg(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       gcon_up(1,1)
       -1       gcon_lo(1,1)
        1       gen_redisp_down(1,1)
        1       net_inj(1)

qdg(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-33.1197) tot_surplus
       -1       gcon_up(2,1)
       -1       gcon_lo(2,1)
        1       net_inj(2)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 163
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1184


     qdg  downregulation generation quantity

qdg(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-33.1197) tot_surplus
       -1       gcon_up(3,1)
       -1       gcon_lo(3,1)
        1       net_inj(3)

qdg(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-33.1197) tot_surplus
       -1       gcon_up(4,1)
       -1       gcon_lo(4,1)
        1       net_inj(4)

qdg(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 1.4210854715202E-14)
       -1       gcon_up(5,1)
       -1       gcon_lo(5,1)
        1       gen_redisp_down(5,1)
        1       net_inj(5)

qdg(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (-8.75)   tot_surplus
       -1       gcon_up(6,1)
       -1       gcon_lo(6,1)
        1       net_inj(6)


---- qc  spot market consumption quantity

qc(1,1)
                (.LO, .L, .UP, .M = 1337.60669520076, 1337.60669520076, 1337.60669520076, 0)
     (-33.1197) tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -6.44783869766151E-15)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -6.44783869766151E-15)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qc(4,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 164
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1184


     qc  spot market consumption quantity

                (.LO, .L, .UP, .M = 668.803347600397, 668.803347600397, 668.803347600397, -1.07576170194079E-11)
     (-33.1197) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qc(5,1)
                (.LO, .L, .UP, .M = 330.769452367199, 330.769452367199, 330.769452367199, 0)
     (-66.9231) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)


---- quc  upregulation consumption quantity

quc(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (33.1197) tot_surplus
       -1       ccon_up(1,1)
       -1       ccon_lo(1,1)
       -1       net_inj(1)

quc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       ccon_up(2,1)
       -1       ccon_lo(2,1)
        1       con_redisp_up(2,1)
       -1       net_inj(2)

quc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       ccon_up(3,1)
       -1       ccon_lo(3,1)
        1       con_redisp_up(3,1)
       -1       net_inj(3)

quc(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 1.07576170194079E-11)
      (33.1197) tot_surplus
       -1       ccon_up(4,1)
       -1       ccon_lo(4,1)
       -1       net_inj(4)

quc(5,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 165
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1184


     quc  upregulation consumption quantity

                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (66.9231) tot_surplus
       -1       ccon_up(5,1)
       -1       ccon_lo(5,1)
       -1       net_inj(5)

quc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       ccon_up(6,1)
       -1       ccon_lo(6,1)
        1       con_redisp_up(6,1)
       -1       net_inj(6)


---- qdc  downregulation consumption quantity

qdc(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-33.1197) tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qdc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       con_redisp_down(2,1)
        1       net_inj(2)

qdc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       con_redisp_down(3,1)
        1       net_inj(3)

qdc(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -1.07576170194079E-11)
     (-33.1197) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qdc(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-66.9231) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 166
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1184


     qdc  downregulation consumption quantity

qdc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       con_redisp_down(6,1)
        1       net_inj(6)


---- q  net injection quantity

q(1)
                (.LO, .L, .UP, .M = -INF, -1337.60669520076, +INF, 7.01331464766123E-12)
        1       net_inj(1)
        1       sum_NI

q(2)
                (.LO, .L, .UP, .M = -INF, 662.393304799383, +INF, 0)
        1       net_inj(2)
        1       sum_NI
        0.6182  ptdf_flow(1,2)
        0.2364  ptdf_flow(1,3)
        0.1455  ptdf_flow(1,4)
       -0.3818  ptdf_flow(2,3)
       -0.0909  ptdf_flow(3,4)
       -0.0545  ptdf_flow(3,5)
        0.0364  ptdf_flow(4,5)
        0.0182  ptdf_flow(4,6)
       -0.0182  ptdf_flow(5,6)

q(3)
                (.LO, .L, .UP, .M = -INF, 662.393304799258, +INF, 6.24583889068174E-12)
        1       net_inj(3)
        1       sum_NI
        0.2364  ptdf_flow(1,2)
        0.4727  ptdf_flow(1,3)
        0.2909  ptdf_flow(1,4)
        0.2364  ptdf_flow(2,3)
       -0.1818  ptdf_flow(3,4)
       -0.1091  ptdf_flow(3,5)
        0.0727  ptdf_flow(4,5)
        0.0364  ptdf_flow(4,6)
       -0.0364  ptdf_flow(5,6)

q(4)
                (.LO, .L, .UP, .M = -INF, -6.41004280097633, +INF, 0)
        1       net_inj(4)
        1       sum_NI
        0.1455  ptdf_flow(1,2)
        0.2909  ptdf_flow(1,3)
        0.5636  ptdf_flow(1,4)
        0.1455  ptdf_flow(2,3)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 167
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1184


     q  net injection quantity

        0.2727  ptdf_flow(3,4)
        0.1636  ptdf_flow(3,5)
       -0.1091  ptdf_flow(4,5)
       -0.0545  ptdf_flow(4,6)
        0.0545  ptdf_flow(5,6)

q(5)
                (.LO, .L, .UP, .M = -INF, -330.769452367199, +INF, 0)
        1       net_inj(5)
        1       sum_NI
        0.1818  ptdf_flow(1,2)
        0.3636  ptdf_flow(1,3)
        0.4545  ptdf_flow(1,4)
        0.1818  ptdf_flow(2,3)
        0.0909  ptdf_flow(3,4)
        0.4545  ptdf_flow(3,5)
        0.3636  ptdf_flow(4,5)
        0.1818  ptdf_flow(4,6)
       -0.1818  ptdf_flow(5,6)

q(6)
                (.LO, .L, .UP, .M = -INF, 349.999580770291, +INF, 0)
        1       net_inj(6)
        1       sum_NI
        0.1636  ptdf_flow(1,2)
        0.3273  ptdf_flow(1,3)
        0.5091  ptdf_flow(1,4)
        0.1636  ptdf_flow(2,3)
        0.1818  ptdf_flow(3,4)
        0.3091  ptdf_flow(3,5)
        0.1273  ptdf_flow(4,5)
        0.5636  ptdf_flow(4,6)
        0.4364  ptdf_flow(5,6)


---- f  line flow

f(1,2)
                (.LO, .L, .UP, .M = -INF, -470.00030999938, +INF, 0)
        1       ptdf_flow(1,2)
        1       fwd_lconstr(1,2)
        1       bwd_lconstr(1,2)

f(1,3)
                (.LO, .L, .UP, .M = -INF, -420, +INF, 0)
        1       ptdf_flow(1,3)
        1       fwd_lconstr(1,3)
        1       bwd_lconstr(1,3)

f(1,4)
                (.LO, .L, .UP, .M = -INF, -82.8200856021153, +INF, 1.87990516204933E-12)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 168
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1184


     f  line flow

        1       ptdf_flow(1,4)
        1       fwd_lconstr(1,4)
        1       bwd_lconstr(1,4)

f(2,3)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow(2,3)
        1       fwd_lconstr(2,3)
        1       bwd_lconstr(2,3)

f(3,4)
                (.LO, .L, .UP, .M = -INF, 20, +INF, 1.87990516204933E-12)
        1       ptdf_flow(3,4)
        1       fwd_lconstr(3,4)
        1       bwd_lconstr(3,4)

f(3,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow(3,5)
        1       fwd_lconstr(3,5)
        1       bwd_lconstr(3,5)

f(4,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow(4,5)
        1       fwd_lconstr(4,5)
        1       bwd_lconstr(4,5)

f(4,6)
                (.LO, .L, .UP, .M = -INF, -149.999580770291, +INF, 0)
        1       ptdf_flow(4,6)
        1       fwd_lconstr(4,6)
        1       bwd_lconstr(4,6)

f(5,6)
                (.LO, .L, .UP, .M = -INF, -200, +INF, 0)
        1       ptdf_flow(5,6)
        1       fwd_lconstr(5,6)
        1       bwd_lconstr(5,6)


---- surplus  total benefit minus total cost

surplus
                (.LO, .L, .UP, .M = -INF, 126714.22722168, +INF, 0)
        1       tot_surplus

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 169
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE redispatch Using NLP From line 1184


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS           69
BLOCKS OF VARIABLES           9     SINGLE VARIABLES           52
NON ZERO ELEMENTS           224     NON LINEAR N-Z             21
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH                 156


GENERATION TIME      =        0.016 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 170
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE redispatch Using NLP From line 1184


               S O L V E      S U M M A R Y

     MODEL   redispatch          OBJECTIVE  surplus
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  MINOS               FROM LINE  1184

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE           117805.9091

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT        13    2000000000
 EVALUATION ERRORS              0             0

GAMS/MINOS       30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Win
M I N O S  5.6      (Jul 2016)

    GAMS/MINOS 5.6, Large Scale Nonlinear Solver
    B. A. Murtagh, University of New South Wales
    P. E. Gill, University of California at San Diego,
    W. Murray, M. A. Saunders, and M. H. Wright,
    Systems Optimization Laboratory, Stanford University

 Work space allocated           --     0.87 Mb

 EXIT - Optimal Solution found, objective:        117805.9



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
                             3  PROJECTED
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 171
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal_seq1 Using NLP From line 1261


---- tot_surplus_seq  =E=  definition of total surplus

tot_surplus_seq..  (33.119665239971)*qg(4,1) + (8.74998951925727)*qg(6,1) + (33.119665239971)*qug(4,1) + (8.74998951925727)*qug(6,1) - (33.119665239971)*qdg(4,1) - (8.74998951925727)*qdg(6,1) - (33.1196652399603)*qc(4,1) - (66.9230547632801)*qc(5,1)
     
      + (33.1196652399603)*quc(4,1) + (66.9230547632801)*quc(5,1) - (33.1196652399603)*qdc(4,1) - (66.9230547632801)*qdc(5,1) + surplus =E= 0 ; (LHS = 58184.315119178, INFES = 58184.315119178 ****)
     

---- gcon_up_seq  =L=  upper bound on final generation for the sequential model

gcon_up_seq(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =L= 10000 ; (LHS = 662.393304799421)
     
gcon_up_seq(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =L= 0 ; (LHS = 0)
     
gcon_up_seq(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =L= 10000 ; (LHS = 349.999580770291)
     

---- gcon_lo_seq  =G=  lower bound on final generation for the sequential model

gcon_lo_seq(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =G= 0 ; (LHS = 662.393304799421)
     
gcon_lo_seq(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =G= 0 ; (LHS = 0)
     
gcon_lo_seq(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =G= 0 ; (LHS = 349.999580770291)
     

---- ccon_up_seq  =L=  upper bound on final consumption for the sequential model

ccon_up_seq(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =L= 10000 ; (LHS = 668.803347600397)
     
ccon_up_seq(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =L= 10000 ; (LHS = 330.7694523672)
     
ccon_up_seq(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =L= 0 ; (LHS = 0)
     

---- ccon_lo_seq  =G=  lower bound on final consumption for the sequential model

ccon_lo_seq(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =G= 0 ; (LHS = 668.803347600397)
     
ccon_lo_seq(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =G= 0 ; (LHS = 330.769452367199)
     
ccon_lo_seq(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =G= 0 ; (LHS = 0)
     

---- net_inj_seq  =E=  net injection at nodal nodes

net_inj_seq(4)..  - qg(4,1) - qug(4,1) + qdg(4,1) + qc(4,1) - quc(4,1) + qdc(4,1) + q(4) =E= 0 ; (LHS = 246.409972801526, INFES = 246.409972801526 ****)
     
net_inj_seq(5)..  - qg(5,1) - qug(5,1) + qdg(5,1) + qc(5,1) - quc(5,1) + qdc(5,1) + q(5) =E= 0 ; (LHS = 50.7686523660892, INFES = 50.7686523660892 ****)
     
net_inj_seq(6)..  - qg(6,1) - qug(6,1) + qdg(6,1) + qc(6,1) - quc(6,1) + qdc(6,1) + q(6) =E= 0 ; (LHS = 20.000729229089, INFES = 20.000729229089 ****)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 172
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal_seq1 Using NLP From line 1261


---- sum_NI_seq  =E=  sum of day ahead zonal line flows at a hybrid node

sum_NI_seq..  q(4) + q(5) + q(6) =E= 285.714285714307 ; (LHS = 329.99943999882, INFES = 44.2851542845134 ****)
     

---- ptdf_flow_hybrid  =E=  calculates physical flows over given line connected to hybrid node

ptdf_flow_hybrid(4,5)..  - 0.109091*q(4) + 0.363636*q(5) + 0.127273*q(6) - 0.109091*f(1,4) - 0.109091*f(3,4) + 0.363636*f(3,5) + f(4,5) =E= 0 ; (LHS = 8.72722618165749, INFES = 8.72722618165749 ****)
     
ptdf_flow_hybrid(4,6)..  - 0.054545*q(4) + 0.181818*q(5) + 0.563636*q(6) - 0.054545*f(1,4) - 0.054545*f(3,4) + 0.181818*f(3,5) + f(4,6) =E= 0 ; (LHS = 4.36320309094876, INFES = 4.36320309094876 ****)
     
ptdf_flow_hybrid(5,6)..  0.054545*q(4) - 0.181818*q(5) + 0.436364*q(6) + 0.054545*f(1,4) + 0.054545*f(3,4) - 0.181818*f(3,5) + f(5,6) =E= 0 ; (LHS = -4.36320309094876, INFES = 4.36320309094876 ****)
     

---- aggr_net_export  =E=  sets aggregate constraints between nodal and zonal areas

aggr_net_export..  - f(1,4) - f(3,4) - f(3,5) =E= 285.714285714307 ; (LHS = 330, INFES = 44.2857142856934 ****)
     

---- fwd_lconstr_zonalsim  =L=  forward capacity constraint for line

fwd_lconstr_zonalsim(4,5)..  f(4,5) =L= 50 ; (LHS = 30.0000000000001)
     
fwd_lconstr_zonalsim(4,6)..  f(4,6) =L= 500 ; (LHS = -170.00030999938)
     
fwd_lconstr_zonalsim(5,6)..  f(5,6) =L= 200 ; (LHS = -200)
     

---- bwd_lconstr_zonalsim  =G=  backward capacity constraint for line

bwd_lconstr_zonalsim(4,5)..  f(4,5) =G= -50 ; (LHS = 30.0000000000001)
     
bwd_lconstr_zonalsim(4,6)..  f(4,6) =G= -500 ; (LHS = -170.00030999938)
     
bwd_lconstr_zonalsim(5,6)..  f(5,6) =G= -200 ; (LHS = -200)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 173
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_seq1 Using NLP From line 1261


---- qg  spot market generation quantity

qg(4,1)
                (.LO, .L, .UP, .M = 0, 662.393304799421, +INF, 10.9515543467339)
      (33.1197) tot_surplus_seq
        1       gcon_up_seq(4,1)
        1       gcon_lo_seq(4,1)
       -1       net_inj_seq(4)

qg(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       gcon_up_seq(5,1)
        1       gcon_lo_seq(5,1)
       -1       net_inj_seq(5)

qg(6,1)
                (.LO, .L, .UP, .M = 0, 349.999580770291, +INF, 0.500018230727225)
       (8.75)   tot_surplus_seq
        1       gcon_up_seq(6,1)
        1       gcon_lo_seq(6,1)
       -1       net_inj_seq(6)


---- qug  upregulation generation quantity

qug(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
      (33.1197) tot_surplus_seq
        1       gcon_up_seq(4,1)
        1       gcon_lo_seq(4,1)
       -1       net_inj_seq(4)

qug(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -1.30836556880724E-14)
        1       gcon_up_seq(5,1)
        1       gcon_lo_seq(5,1)
       -1       net_inj_seq(5)

qug(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (8.75)   tot_surplus_seq
        1       gcon_up_seq(6,1)
        1       gcon_lo_seq(6,1)
       -1       net_inj_seq(6)


---- qdg  downregulation generation quantity

qdg(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -10.9515543467339)
     (-33.1197) tot_surplus_seq
       -1       gcon_up_seq(4,1)
       -1       gcon_lo_seq(4,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 174
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_seq1 Using NLP From line 1261


     qdg  downregulation generation quantity

        1       net_inj_seq(4)

qdg(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 1.30836556880724E-14)
       -1       gcon_up_seq(5,1)
       -1       gcon_lo_seq(5,1)
        1       net_inj_seq(5)

qdg(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -0.500018230727225)
      (-8.75)   tot_surplus_seq
       -1       gcon_up_seq(6,1)
       -1       gcon_lo_seq(6,1)
        1       net_inj_seq(6)


---- qc  spot market consumption quantity

qc(4,1)
                (.LO, .L, .UP, .M = 0, 668.803347600397, +INF, -19.1652201067937)
     (-33.1197) tot_surplus_seq
        1       ccon_up_seq(4,1)
        1       ccon_lo_seq(4,1)
        1       net_inj_seq(4)

qc(5,1)
                (.LO, .L, .UP, .M = 0, 330.769452367199, +INF, -35.5380566562625)
     (-66.9231) tot_surplus_seq
        1       ccon_up_seq(5,1)
        1       ccon_lo_seq(5,1)
        1       net_inj_seq(5)

qc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       ccon_up_seq(6,1)
        1       ccon_lo_seq(6,1)
        1       net_inj_seq(6)


---- quc  upregulation consumption quantity

quc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 1.4210854715202E-14)
      (33.1197) tot_surplus_seq
       -1       ccon_up_seq(4,1)
       -1       ccon_lo_seq(4,1)
       -1       net_inj_seq(4)

quc(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
      (66.9231) tot_surplus_seq
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 175
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_seq1 Using NLP From line 1261


     quc  upregulation consumption quantity

       -1       ccon_up_seq(5,1)
       -1       ccon_lo_seq(5,1)
       -1       net_inj_seq(5)

quc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       ccon_up_seq(6,1)
       -1       ccon_lo_seq(6,1)
       -1       net_inj_seq(6)


---- qdc  downregulation consumption quantity

qdc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -19.1652201067937)
     (-33.1197) tot_surplus_seq
        1       ccon_up_seq(4,1)
        1       ccon_lo_seq(4,1)
        1       net_inj_seq(4)

qdc(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -35.5380566562625)
     (-66.9231) tot_surplus_seq
        1       ccon_up_seq(5,1)
        1       ccon_lo_seq(5,1)
        1       net_inj_seq(5)

qdc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       ccon_up_seq(6,1)
        1       ccon_lo_seq(6,1)
        1       net_inj_seq(6)


---- q  net injection quantity

q(4)
                (.LO, .L, .UP, .M = -INF, 239.99993000055, +INF, 0)
        1       net_inj_seq(4)
        1       sum_NI_seq
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)

q(5)
                (.LO, .L, .UP, .M = -INF, -280.00080000111, +INF, 0)
        1       net_inj_seq(5)
        1       sum_NI_seq
        0.3636  ptdf_flow_hybrid(4,5)
        0.1818  ptdf_flow_hybrid(4,6)
       -0.1818  ptdf_flow_hybrid(5,6)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 176
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_seq1 Using NLP From line 1261


     q  net injection quantity


q(6)
                (.LO, .L, .UP, .M = -INF, 370.00030999938, +INF, 0)
        1       net_inj_seq(6)
        1       sum_NI_seq
        0.1273  ptdf_flow_hybrid(4,5)
        0.5636  ptdf_flow_hybrid(4,6)
        0.4364  ptdf_flow_hybrid(5,6)


---- f  line flow

f(1,4)
                (.LO, .L, .UP, .M = -INF, -400, +INF, 0)
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)
       -1       aggr_net_export

f(3,4)
                (.LO, .L, .UP, .M = -INF, 20, +INF, 0)
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)
       -1       aggr_net_export

f(3,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        0.3636  ptdf_flow_hybrid(4,5)
        0.1818  ptdf_flow_hybrid(4,6)
       -0.1818  ptdf_flow_hybrid(5,6)
       -1       aggr_net_export

f(4,5)
                (.LO, .L, .UP, .M = -INF, 30.0000000000001, +INF, 0)
        1       ptdf_flow_hybrid(4,5)
        1       fwd_lconstr_zonalsim(4,5)
        1       bwd_lconstr_zonalsim(4,5)

f(4,6)
                (.LO, .L, .UP, .M = -INF, -170.00030999938, +INF, 0)
        1       ptdf_flow_hybrid(4,6)
        1       fwd_lconstr_zonalsim(4,6)
        1       bwd_lconstr_zonalsim(4,6)

f(5,6)
                (.LO, .L, .UP, .M = -INF, -200, +INF, 0)
        1       ptdf_flow_hybrid(5,6)
        1       fwd_lconstr_zonalsim(5,6)
        1       bwd_lconstr_zonalsim(5,6)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 177
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_seq1 Using NLP From line 1261


---- surplus  total benefit minus total cost

surplus
                (.LO, .L, .UP, .M = -INF, 117805.909109078, +INF, 0)
        1       tot_surplus_seq

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 178
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE zonal_seq1 Using NLP From line 1261


MODEL STATISTICS

BLOCKS OF EQUATIONS          11     SINGLE EQUATIONS           27
BLOCKS OF VARIABLES           9     SINGLE VARIABLES           28
NON ZERO ELEMENTS           103     NON LINEAR N-Z             12
DERIVATIVE POOL              20     CONSTANT POOL              25
CODE LENGTH                  92


GENERATION TIME      =        0.016 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.016 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 179
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE zonal_seq1 Using NLP From line 1261


               S O L V E      S U M M A R Y

     MODEL   zonal_seq1          OBJECTIVE  surplus
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  MINOS               FROM LINE  1261

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE            55345.6362

 RESOURCE USAGE, LIMIT          0.015      1000.000
 ITERATION COUNT, LIMIT         7    2000000000
 EVALUATION ERRORS              0             0

GAMS/MINOS       30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Win
M I N O S  5.6      (Jul 2016)

    GAMS/MINOS 5.6, Large Scale Nonlinear Solver
    B. A. Murtagh, University of New South Wales
    P. E. Gill, University of California at San Diego,
    W. Murray, M. A. Saunders, and M. H. Wright,
    Systems Optimization Laboratory, Stanford University

 Work space allocated           --     0.82 Mb

 EXIT - Optimal Solution found, objective:        55345.64



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 180
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1339


---- tot_surplus  =E=  definition of total surplus

tot_surplus..  (26.000015499969)*qg(2,1) + (21.9999880000035)*qg(3,1) + (45.8928766620473)*qg(4,1) + (11.2499804808075)*qg(6,1) + (26.000015499969)*qug(2,1) + (21.9999880000035)*qug(3,1) + (45.8928766620473)*qug(4,1) + (11.2499804808075)*qug(6,1)
     
      - (18.8803657599688)*qdg(2,1) - (10.8803107600441)*qdg(3,1) - (45.8928766620473)*qdg(4,1) - (11.2499804808075)*qdg(6,1) - (35.5000245000865)*qc(1,1) - (45.8928766620497)*qc(4,1) - (45.8928766620481)*qc(5,1) + (52.1625393209571)*quc(1,1)
     
      + (45.8928766620497)*quc(4,1) + (45.8928766620481)*quc(5,1) - (35.5000245000865)*qdc(1,1) - (45.8928766620497)*qdc(4,1) - (45.8928766620481)*qdc(5,1) + surplus =E= 0 ; (LHS = -73657.4857670236, INFES = 73657.4857670236 ****)
     

---- gcon_up  =L=  upper bound on final generation

gcon_up(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =L= 0 ; (LHS = 0)
     
gcon_up(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =L= 10000 ; (LHS = 520.000309999379)
     
gcon_up(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =L= 10000 ; (LHS = 439.99976000007)
     
gcon_up(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =L= 10000 ; (LHS = 917.857533240945)
     
gcon_up(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =L= 0 ; (LHS = 0)
     
gcon_up(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =L= 10000 ; (LHS = 449.999219232299)
     

---- gcon_lo  =G=  lower bound on final generation

gcon_lo(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =G= 0 ; (LHS = 0)
     
gcon_lo(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =G= 0 ; (LHS = 520.00030999938)
     
gcon_lo(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =G= 0 ; (LHS = 439.99976000007)
     
gcon_lo(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =G= 0 ; (LHS = 917.857533240945)
     
gcon_lo(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =G= 0 ; (LHS = 0)
     
gcon_lo(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =G= 0 ; (LHS = 449.999219232298)
     

---- ccon_up  =L=  upper bound on final consumption

ccon_up(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =L= 10000 ; (LHS = 1289.99950999827)
     
ccon_up(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =L= 0 ; (LHS = 0)
     
ccon_up(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =L= 0 ; (LHS = 0)
     
ccon_up(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =L= 10000 ; (LHS = 541.071233379504)
     
ccon_up(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =L= 10000 ; (LHS = 541.07123337952)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 181
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1339


     ccon_up  =L=  upper bound on final consumption

ccon_up(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =L= 0 ; (LHS = 0)
     

---- ccon_lo  =G=  lower bound on final consumption

ccon_lo(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =G= 0 ; (LHS = 1289.99950999827)
     
ccon_lo(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =G= 0 ; (LHS = 0)
     
ccon_lo(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =G= 0 ; (LHS = 0)
     
ccon_lo(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =G= 0 ; (LHS = 541.071233379503)
     
ccon_lo(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =G= 0 ; (LHS = 541.071233379519)
     
ccon_lo(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =G= 0 ; (LHS = 0)
     

---- gen_redisp_down  =E=  includes generation participating in downward regulation market

gen_redisp_down(1,1)..  qdg(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_down(5,1)..  qdg(5,1) =E= 0 ; (LHS = 0)
     

---- gen_redisp_up  =E=  includes generation participating in upward regulation market

gen_redisp_up(1,1)..  qug(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_up(5,1)..  qug(5,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_down  =E=  includes consumption participating in downward regulation market

con_redisp_down(2,1)..  qdc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(3,1)..  qdc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(6,1)..  qdc(6,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_up  =E=  includes consumption participating in upward regulation market

con_redisp_up(2,1)..  quc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(3,1)..  quc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(6,1)..  quc(6,1) =E= 0 ; (LHS = 0)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 182
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1339


---- net_inj  =E=  net injection in every node

net_inj(1)..  - qg(1,1) - qug(1,1) + qdg(1,1) + qc(1,1) - quc(1,1) + qdc(1,1) + q(1) =E= 0 ; (LHS = 2.27373675443232E-13, INFES = 2.27373675443232E-13 ****)
     
net_inj(2)..  - qg(2,1) - qug(2,1) + qdg(2,1) + qc(2,1) - quc(2,1) + qdc(2,1) + q(2) =E= 0 ; (LHS = -1.13686837721616E-13, INFES = 1.13686837721616E-13 ****)
     
net_inj(3)..  - qg(3,1) - qug(3,1) + qdg(3,1) + qc(3,1) - quc(3,1) + qdc(3,1) + q(3) =E= 0 ; (LHS = 0)
     
net_inj(4)..  - qg(4,1) - qug(4,1) + qdg(4,1) + qc(4,1) - quc(4,1) + qdc(4,1) + q(4) =E= 0 ; (LHS = 1.13686837721616E-13, INFES = 1.13686837721616E-13 ****)
     
net_inj(5)..  - qg(5,1) - qug(5,1) + qdg(5,1) + qc(5,1) - quc(5,1) + qdc(5,1) + q(5) =E= 0 ; (LHS = 1.13686837721616E-13, INFES = 1.13686837721616E-13 ****)
     
net_inj(6)..  - qg(6,1) - qug(6,1) + qdg(6,1) + qc(6,1) - quc(6,1) + qdc(6,1) + q(6) =E= 0 ; (LHS = 8.55493453855161E-11, INFES = 8.55493453855161E-11 ****)
     

---- sum_NI  =E=  sum of net injections

sum_NI..  q(1) + q(2) + q(3) + q(4) + q(5) + q(6) =E= 0 ; (LHS = -44.2851542845131, INFES = 44.2851542845131 ****)
     

---- ptdf_flow  =E=  calculates physical flows over given line

ptdf_flow(1,2)..  0.618182*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(1,2) =E= 0 ; (LHS = -14.4803411166277, INFES = 14.4803411166277 ****)
     
ptdf_flow(1,3)..  0.236364*q(2) + 0.472727*q(3) + 0.290909*q(4) + 0.363636*q(5) + 0.327273*q(6) + f(1,3) =E= 0 ; (LHS = -28.9607390207162, INFES = 28.9607390207162 ****)
     
ptdf_flow(1,4)..  0.145455*q(2) + 0.290909*q(3) + 0.563636*q(4) + 0.454545*q(5) + 0.509091*q(6) + f(1,4) =E= 0 ; (LHS = -328.398538383359, INFES = 328.398538383359 ****)
     
ptdf_flow(2,3)..  - 0.381818*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(2,3) =E= 0 ; (LHS = -14.4803411166277, INFES = 14.4803411166277 ****)
     
ptdf_flow(3,4)..  - 0.090909*q(2) - 0.181818*q(3) + 0.272727*q(4) + 0.090909*q(5) + 0.181818*q(6) + f(3,4) =E= 0 ; (LHS = 28.11692594398, INFES = 28.11692594398 ****)
     
ptdf_flow(3,5)..  - 0.054545*q(2) - 0.109091*q(3) + 0.163636*q(4) + 0.454545*q(5) + 0.309091*q(6) + f(3,5) =E= 0 ; (LHS = 300.282296724623, INFES = 300.282296724623 ****)
     
ptdf_flow(4,5)..  0.036364*q(2) + 0.072727*q(3) - 0.109091*q(4) + 0.363636*q(5) + 0.127273*q(6) + f(4,5) =E= 0 ; (LHS = -179.675068811674, INFES = 179.675068811674 ****)
     
ptdf_flow(4,6)..  0.018182*q(2) + 0.036364*q(3) - 0.054545*q(4) + 0.181818*q(5) + 0.563636*q(6) + f(4,6) =E= 0 ; (LHS = -89.8369606285942, INFES = 89.8369606285942 ****)
     
ptdf_flow(5,6)..  - 0.018182*q(2) - 0.036364*q(3) + 0.054545*q(4) - 0.181818*q(5) + 0.436364*q(6) + f(5,6) =E= 0 ; (LHS = 89.8369606285943, INFES = 89.8369606285943 ****)
     

---- fwd_lconstr  =L=  forward capacity constraint for line

fwd_lconstr(1,2)..  f(1,2) =L= 500 ; (LHS = -470.00030999938)
     
fwd_lconstr(1,3)..  f(1,3) =L= 450 ; (LHS = -420)
     
fwd_lconstr(1,4)..  f(1,4) =L= 400 ; (LHS = -727.554725306623)
     
fwd_lconstr(2,3)..  f(2,3) =L= 50 ; (LHS = 50)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 183
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1339


     fwd_lconstr  =L=  forward capacity constraint for line

fwd_lconstr(3,4)..  f(3,4) =L= 20 ; (LHS = 20)
     
fwd_lconstr(3,5)..  f(3,5) =L= 50 ; (LHS = 421.840439592316, INFES = 371.840439592316 ****)
     
fwd_lconstr(4,5)..  f(4,5) =L= 50 ; (LHS = -50)
     
fwd_lconstr(4,6)..  f(4,6) =L= 500 ; (LHS = -249.999219232369)
     
fwd_lconstr(5,6)..  f(5,6) =L= 200 ; (LHS = -200.000000000014)
     

---- bwd_lconstr  =G=  backward capacity constraint for line

bwd_lconstr(1,2)..  f(1,2) =G= -500 ; (LHS = -470.00030999938)
     
bwd_lconstr(1,3)..  f(1,3) =G= -450 ; (LHS = -420)
     
bwd_lconstr(1,4)..  f(1,4) =G= -400 ; (LHS = -727.554725306623, INFES = 327.554725306623 ****)
     
bwd_lconstr(2,3)..  f(2,3) =G= -50 ; (LHS = 50)
     
bwd_lconstr(3,4)..  f(3,4) =G= -20 ; (LHS = 20)
     
bwd_lconstr(3,5)..  f(3,5) =G= -50 ; (LHS = 421.840439592316)
     
bwd_lconstr(4,5)..  f(4,5) =G= -50 ; (LHS = -50)
     
bwd_lconstr(4,6)..  f(4,6) =G= -500 ; (LHS = -249.999219232369)
     
bwd_lconstr(5,6)..  f(5,6) =G= -200 ; (LHS = -200.000000000014)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 184
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1339


---- qg  spot market generation quantity

qg(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qg(2,1)
                (.LO, .L, .UP, .M = 662.393304799383, 662.393304799383, 662.393304799383, -7.11964974000017)
      (26)      tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qg(3,1)
                (.LO, .L, .UP, .M = 662.393304799258, 662.393304799258, 662.393304799258, -11.1196772399594)
      (22)      tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qg(4,1)
                (.LO, .L, .UP, .M = 917.857533240945, 917.857533240945, 917.857533240945, 0)
      (45.8929) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qg(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qg(6,1)
                (.LO, .L, .UP, .M = 449.999219232298, 449.999219232298, 449.999219232298, 0)
      (11.25)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qug  upregulation generation quantity

qug(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -6.90048702774986E-15)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
        1       gen_redisp_up(1,1)
       -1       net_inj(1)

qug(2,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 185
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1339


     qug  upregulation generation quantity

                (.LO, .L, .UP, .M = 0, 0, +INF, -7.11964974000017)
      (26)      tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qug(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -11.1196772399594)
      (22)      tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qug(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (45.8929) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qug(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -7.105427357601E-15)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
        1       gen_redisp_up(5,1)
       -1       net_inj(5)

qug(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -5.32907051820075E-15)
      (11.25)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qdg  downregulation generation quantity

qdg(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 6.90048702774986E-15)
       -1       gcon_up(1,1)
       -1       gcon_lo(1,1)
        1       gen_redisp_down(1,1)
        1       net_inj(1)

qdg(2,1)
                (.LO, .L, .UP, .M = 0, 142.392994800003, +INF, 0)
     (-18.8804) tot_surplus
       -1       gcon_up(2,1)
       -1       gcon_lo(2,1)
        1       net_inj(2)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 186
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1339


     qdg  downregulation generation quantity

qdg(3,1)
                (.LO, .L, .UP, .M = 0, 222.393544799188, +INF, 0)
     (-10.8803) tot_surplus
       -1       gcon_up(3,1)
       -1       gcon_lo(3,1)
        1       net_inj(3)

qdg(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-45.8929) tot_surplus
       -1       gcon_up(4,1)
       -1       gcon_lo(4,1)
        1       net_inj(4)

qdg(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 7.105427357601E-15)
       -1       gcon_up(5,1)
       -1       gcon_lo(5,1)
        1       gen_redisp_down(5,1)
        1       net_inj(5)

qdg(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 5.32907051820075E-15)
     (-11.25)   tot_surplus
       -1       gcon_up(6,1)
       -1       gcon_lo(6,1)
        1       net_inj(6)


---- qc  spot market consumption quantity

qc(1,1)
                (.LO, .L, .UP, .M = 1337.60669520076, 1337.60669520076, 1337.60669520076, -16.6625148208705)
     (-35.5)    tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 3.5527136788005E-15)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qc(4,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 187
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1339


     qc  spot market consumption quantity

                (.LO, .L, .UP, .M = 541.071233379503, 541.071233379503, 541.071233379503, 2.38742359215394E-12)
     (-45.8929) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qc(5,1)
                (.LO, .L, .UP, .M = 541.071233379519, 541.071233379519, 541.071233379519, 7.8159700933611E-13)
     (-45.8929) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -11.2499804808074)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)


---- quc  upregulation consumption quantity

quc(1,1)
                (.LO, .L, .UP, .M = 0, 47.6071852024872, +INF, 0)
      (52.1625) tot_surplus
       -1       ccon_up(1,1)
       -1       ccon_lo(1,1)
       -1       net_inj(1)

quc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       ccon_up(2,1)
       -1       ccon_lo(2,1)
        1       con_redisp_up(2,1)
       -1       net_inj(2)

quc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       ccon_up(3,1)
       -1       ccon_lo(3,1)
        1       con_redisp_up(3,1)
       -1       net_inj(3)

quc(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -2.38742359215394E-12)
      (45.8929) tot_surplus
       -1       ccon_up(4,1)
       -1       ccon_lo(4,1)
       -1       net_inj(4)

quc(5,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 188
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1339


     quc  upregulation consumption quantity

                (.LO, .L, .UP, .M = 0, 0, +INF, -7.8159700933611E-13)
      (45.8929) tot_surplus
       -1       ccon_up(5,1)
       -1       ccon_lo(5,1)
       -1       net_inj(5)

quc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 11.2499804808074)
       -1       ccon_up(6,1)
       -1       ccon_lo(6,1)
        1       con_redisp_up(6,1)
       -1       net_inj(6)


---- qdc  downregulation consumption quantity

qdc(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -16.6625148208705)
     (-35.5)    tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qdc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       con_redisp_down(2,1)
        1       net_inj(2)

qdc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       con_redisp_down(3,1)
        1       net_inj(3)

qdc(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 2.38742359215394E-12)
     (-45.8929) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qdc(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 7.8159700933611E-13)
     (-45.8929) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 189
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1339


     qdc  downregulation consumption quantity

qdc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -11.2499804808074)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       con_redisp_down(6,1)
        1       net_inj(6)


---- q  net injection quantity

q(1)
                (.LO, .L, .UP, .M = -INF, -1289.99950999827, +INF, 0)
        1       net_inj(1)
        1       sum_NI

q(2)
                (.LO, .L, .UP, .M = -INF, 520.00030999938, +INF, 0)
        1       net_inj(2)
        1       sum_NI
        0.6182  ptdf_flow(1,2)
        0.2364  ptdf_flow(1,3)
        0.1455  ptdf_flow(1,4)
       -0.3818  ptdf_flow(2,3)
       -0.0909  ptdf_flow(3,4)
       -0.0545  ptdf_flow(3,5)
        0.0364  ptdf_flow(4,5)
        0.0182  ptdf_flow(4,6)
       -0.0182  ptdf_flow(5,6)

q(3)
                (.LO, .L, .UP, .M = -INF, 439.99976000007, +INF, 0)
        1       net_inj(3)
        1       sum_NI
        0.2364  ptdf_flow(1,2)
        0.4727  ptdf_flow(1,3)
        0.2909  ptdf_flow(1,4)
        0.2364  ptdf_flow(2,3)
       -0.1818  ptdf_flow(3,4)
       -0.1091  ptdf_flow(3,5)
        0.0727  ptdf_flow(4,5)
        0.0364  ptdf_flow(4,6)
       -0.0364  ptdf_flow(5,6)

q(4)
                (.LO, .L, .UP, .M = -INF, 376.786299861442, +INF, 0)
        1       net_inj(4)
        1       sum_NI
        0.1455  ptdf_flow(1,2)
        0.2909  ptdf_flow(1,3)
        0.5636  ptdf_flow(1,4)
        0.1455  ptdf_flow(2,3)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 190
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1339


     q  net injection quantity

        0.2727  ptdf_flow(3,4)
        0.1636  ptdf_flow(3,5)
       -0.1091  ptdf_flow(4,5)
       -0.0545  ptdf_flow(4,6)
        0.0545  ptdf_flow(5,6)

q(5)
                (.LO, .L, .UP, .M = -INF, -541.071233379519, +INF, 0)
        1       net_inj(5)
        1       sum_NI
        0.1818  ptdf_flow(1,2)
        0.3636  ptdf_flow(1,3)
        0.4545  ptdf_flow(1,4)
        0.1818  ptdf_flow(2,3)
        0.0909  ptdf_flow(3,4)
        0.4545  ptdf_flow(3,5)
        0.3636  ptdf_flow(4,5)
        0.1818  ptdf_flow(4,6)
       -0.1818  ptdf_flow(5,6)

q(6)
                (.LO, .L, .UP, .M = -INF, 449.999219232384, +INF, 0)
        1       net_inj(6)
        1       sum_NI
        0.1636  ptdf_flow(1,2)
        0.3273  ptdf_flow(1,3)
        0.5091  ptdf_flow(1,4)
        0.1636  ptdf_flow(2,3)
        0.1818  ptdf_flow(3,4)
        0.3091  ptdf_flow(3,5)
        0.1273  ptdf_flow(4,5)
        0.5636  ptdf_flow(4,6)
        0.4364  ptdf_flow(5,6)


---- f  line flow

f(1,2)
                (.LO, .L, .UP, .M = -INF, -470.00030999938, +INF, 0)
        1       ptdf_flow(1,2)
        1       fwd_lconstr(1,2)
        1       bwd_lconstr(1,2)

f(1,3)
                (.LO, .L, .UP, .M = -INF, -420, +INF, 0)
        1       ptdf_flow(1,3)
        1       fwd_lconstr(1,3)
        1       bwd_lconstr(1,3)

f(1,4)
                (.LO, .L, .UP, .M = -INF, -727.554725306623, +INF, 0)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 191
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1339


     f  line flow

        1       ptdf_flow(1,4)
        1       fwd_lconstr(1,4)
        1       bwd_lconstr(1,4)

f(2,3)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow(2,3)
        1       fwd_lconstr(2,3)
        1       bwd_lconstr(2,3)

f(3,4)
                (.LO, .L, .UP, .M = -INF, 20, +INF, -1.08187450130278E-16)
        1       ptdf_flow(3,4)
        1       fwd_lconstr(3,4)
        1       bwd_lconstr(3,4)

f(3,5)
                (.LO, .L, .UP, .M = -INF, 421.840439592316, +INF, 0)
        1       ptdf_flow(3,5)
        1       fwd_lconstr(3,5)
        1       bwd_lconstr(3,5)

f(4,5)
                (.LO, .L, .UP, .M = -INF, -50, +INF, 0)
        1       ptdf_flow(4,5)
        1       fwd_lconstr(4,5)
        1       bwd_lconstr(4,5)

f(4,6)
                (.LO, .L, .UP, .M = -INF, -249.999219232369, +INF, 0)
        1       ptdf_flow(4,6)
        1       fwd_lconstr(4,6)
        1       bwd_lconstr(4,6)

f(5,6)
                (.LO, .L, .UP, .M = -INF, -200.000000000014, +INF, 0)
        1       ptdf_flow(5,6)
        1       fwd_lconstr(5,6)
        1       bwd_lconstr(5,6)


---- surplus  total benefit minus total cost

surplus
                (.LO, .L, .UP, .M = -INF, 55345.6362172699, +INF, 0)
        1       tot_surplus

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 192
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE redispatch Using NLP From line 1339


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS           69
BLOCKS OF VARIABLES           9     SINGLE VARIABLES           52
NON ZERO ELEMENTS           224     NON LINEAR N-Z             21
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH                 156


GENERATION TIME      =        0.031 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 193
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE redispatch Using NLP From line 1339


               S O L V E      S U M M A R Y

     MODEL   redispatch          OBJECTIVE  surplus
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  MINOS               FROM LINE  1339

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE            97136.9321

 RESOURCE USAGE, LIMIT          0.016      1000.000
 ITERATION COUNT, LIMIT         7    2000000000
 EVALUATION ERRORS              0             0

GAMS/MINOS       30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Win
M I N O S  5.6      (Jul 2016)

    GAMS/MINOS 5.6, Large Scale Nonlinear Solver
    B. A. Murtagh, University of New South Wales
    P. E. Gill, University of California at San Diego,
    W. Murray, M. A. Saunders, and M. H. Wright,
    Systems Optimization Laboratory, Stanford University

 Work space allocated           --     0.87 Mb

 EXIT - Optimal Solution found, objective:        97136.93



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 194
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal_seq2 Using NLP From line 1414


---- tot_surplus_seq  =E=  definition of total surplus

tot_surplus_seq..  (45.8928766620473)*qg(4,1) + (11.2499804808075)*qg(6,1) + (45.8928766620473)*qug(4,1) + (11.2499804808075)*qug(6,1) - (45.8928766620473)*qdg(4,1) - (11.2499804808075)*qdg(6,1) - (45.8928766620497)*qc(4,1) - (45.8928766620481)*qc(5,1)
     
      + (45.8928766620497)*quc(4,1) + (45.8928766620481)*quc(5,1) - (45.8928766620497)*qdc(4,1) - (45.8928766620481)*qdc(5,1) + surplus =E= 0 ; (LHS = 41791.2958392311, INFES = 41791.2958392311 ****)
     

---- gcon_up_seq  =L=  upper bound on final generation for the sequential model

gcon_up_seq(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =L= 10000 ; (LHS = 917.857533240945)
     
gcon_up_seq(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =L= 0 ; (LHS = 0)
     
gcon_up_seq(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =L= 10000 ; (LHS = 449.999219232299)
     

---- gcon_lo_seq  =G=  lower bound on final generation for the sequential model

gcon_lo_seq(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =G= 0 ; (LHS = 917.857533240945)
     
gcon_lo_seq(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =G= 0 ; (LHS = 0)
     
gcon_lo_seq(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =G= 0 ; (LHS = 449.999219232298)
     

---- ccon_up_seq  =L=  upper bound on final consumption for the sequential model

ccon_up_seq(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =L= 10000 ; (LHS = 541.071233379504)
     
ccon_up_seq(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =L= 10000 ; (LHS = 541.07123337952)
     
ccon_up_seq(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =L= 0 ; (LHS = 0)
     

---- ccon_lo_seq  =G=  lower bound on final consumption for the sequential model

ccon_lo_seq(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =G= 0 ; (LHS = 541.071233379503)
     
ccon_lo_seq(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =G= 0 ; (LHS = 541.071233379519)
     
ccon_lo_seq(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =G= 0 ; (LHS = 0)
     

---- net_inj_seq  =E=  net injection at nodal nodes

net_inj_seq(4)..  - qg(4,1) - qug(4,1) + qdg(4,1) + qc(4,1) - quc(4,1) + qdc(4,1) + q(4) =E= 0 ; (LHS = -76.7863498608061, INFES = 76.7863498608061 ****)
     
net_inj_seq(5)..  - qg(5,1) - qug(5,1) + qdg(5,1) + qc(5,1) - quc(5,1) + qdc(5,1) + q(5) =E= 0 ; (LHS = 241.070433378355, INFES = 241.070433378355 ****)
     
net_inj_seq(6)..  - qg(6,1) - qug(6,1) + qdg(6,1) + qc(6,1) - quc(6,1) + qdc(6,1) + q(6) =E= 0 ; (LHS = -99.9988692329699, INFES = 99.9988692329699 ****)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 195
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal_seq2 Using NLP From line 1414


---- sum_NI_seq  =E=  sum of day ahead zonal line flows at a hybrid node

sum_NI_seq..  q(4) + q(5) + q(6) =E= 285.714285714307 ; (LHS = 349.9994999988, INFES = 64.2852142844935 ****)
     

---- ptdf_flow_hybrid  =E=  calculates physical flows over given line connected to hybrid node

ptdf_flow_hybrid(4,5)..  - 0.109091*q(4) + 0.363636*q(5) + 0.127273*q(6) - 0.109091*f(1,4) - 0.109091*f(3,4) + 0.363636*f(3,5) + f(4,5) =E= 0 ; (LHS = 14.5454090907217, INFES = 14.5454090907217 ****)
     
ptdf_flow_hybrid(4,6)..  - 0.054545*q(4) + 0.181818*q(5) + 0.563636*q(6) - 0.054545*f(1,4) - 0.054545*f(3,4) + 0.181818*f(3,5) + f(4,6) =E= 0 ; (LHS = 7.27230454551088, INFES = 7.27230454551088 ****)
     
ptdf_flow_hybrid(5,6)..  0.054545*q(4) - 0.181818*q(5) + 0.436364*q(6) + 0.054545*f(1,4) + 0.054545*f(3,4) - 0.181818*f(3,5) + f(5,6) =E= 0 ; (LHS = -7.27230454549678, INFES = 7.27230454549678 ****)
     

---- aggr_net_export  =E=  sets aggregate constraints between nodal and zonal areas

aggr_net_export..  - f(1,4) - f(3,4) - f(3,5) =E= 285.714285714307 ; (LHS = 350, INFES = 64.2857142856932 ****)
     

---- fwd_zconstr_hybrid_2  =L=  forward capacity constraint between hybrid nodes and zone

fwd_zconstr_hybrid_2(4,1)..  - f(1,4) - f(3,4) =L= 420 ; (LHS = 400)
     
fwd_zconstr_hybrid_2(5,1)..  - f(3,5) =L= 50 ; (LHS = -50)
     

---- bwd_zconstr_hybrid_2  =G=  backward capacity constraint between hybrid nodes and zone

bwd_zconstr_hybrid_2(4,1)..  - f(1,4) - f(3,4) =G= -420 ; (LHS = 400)
     
bwd_zconstr_hybrid_2(5,1)..  - f(3,5) =G= -50 ; (LHS = -50)
     

---- fwd_lconstr_zonalsim  =L=  forward capacity constraint for line

fwd_lconstr_zonalsim(4,5)..  f(4,5) =L= 50 ; (LHS = 50)
     
fwd_lconstr_zonalsim(4,6)..  f(4,6) =L= 500 ; (LHS = -150.000349999314)
     
fwd_lconstr_zonalsim(5,6)..  f(5,6) =L= 200 ; (LHS = -200)
     

---- bwd_lconstr_zonalsim  =G=  backward capacity constraint for line

bwd_lconstr_zonalsim(4,5)..  f(4,5) =G= -50 ; (LHS = 50)
     
bwd_lconstr_zonalsim(4,6)..  f(4,6) =G= -500 ; (LHS = -150.000349999314)
     
bwd_lconstr_zonalsim(5,6)..  f(5,6) =G= -200 ; (LHS = -200)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 196
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_seq2 Using NLP From line 1414


---- qg  spot market generation quantity

qg(4,1)
                (.LO, .L, .UP, .M = 0, 917.857533240945, +INF, -3.41272666048015)
      (45.8929) tot_surplus_seq
        1       gcon_up_seq(4,1)
        1       gcon_lo_seq(4,1)
       -1       net_inj_seq(4)

qg(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       gcon_up_seq(5,1)
        1       gcon_lo_seq(5,1)
       -1       net_inj_seq(5)

qg(6,1)
                (.LO, .L, .UP, .M = 0, 449.999219232298, +INF, -2.49997173082425)
      (11.25)   tot_surplus_seq
        1       gcon_up_seq(6,1)
        1       gcon_lo_seq(6,1)
       -1       net_inj_seq(6)


---- qug  upregulation generation quantity

qug(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -3.41272666048015)
      (45.8929) tot_surplus_seq
        1       gcon_up_seq(4,1)
        1       gcon_lo_seq(4,1)
       -1       net_inj_seq(4)

qug(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       gcon_up_seq(5,1)
        1       gcon_lo_seq(5,1)
       -1       net_inj_seq(5)

qug(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -2.49997173082425)
      (11.25)   tot_surplus_seq
        1       gcon_up_seq(6,1)
        1       gcon_lo_seq(6,1)
       -1       net_inj_seq(6)


---- qdg  downregulation generation quantity

qdg(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
     (-45.8929) tot_surplus_seq
       -1       gcon_up_seq(4,1)
       -1       gcon_lo_seq(4,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 197
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_seq2 Using NLP From line 1414


     qdg  downregulation generation quantity

        1       net_inj_seq(4)

qdg(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
       -1       gcon_up_seq(5,1)
       -1       gcon_lo_seq(5,1)
        1       net_inj_seq(5)

qdg(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
     (-11.25)   tot_surplus_seq
       -1       gcon_up_seq(6,1)
       -1       gcon_lo_seq(6,1)
        1       net_inj_seq(6)


---- qc  spot market consumption quantity

qc(4,1)
                (.LO, .L, .UP, .M = 0, 541.071233379503, +INF, 5.97227165584233)
     (-45.8929) tot_surplus_seq
        1       ccon_up_seq(4,1)
        1       ccon_lo_seq(4,1)
        1       net_inj_seq(4)

qc(5,1)
                (.LO, .L, .UP, .M = 0, 541.071233379519, +INF, -168.749303364849)
     (-45.8929) tot_surplus_seq
        1       ccon_up_seq(5,1)
        1       ccon_lo_seq(5,1)
        1       net_inj_seq(5)

qc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       ccon_up_seq(6,1)
        1       ccon_lo_seq(6,1)
        1       net_inj_seq(6)


---- quc  upregulation consumption quantity

quc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -5.97227165584233)
      (45.8929) tot_surplus_seq
       -1       ccon_up_seq(4,1)
       -1       ccon_lo_seq(4,1)
       -1       net_inj_seq(4)

quc(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
      (45.8929) tot_surplus_seq
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 198
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_seq2 Using NLP From line 1414


     quc  upregulation consumption quantity

       -1       ccon_up_seq(5,1)
       -1       ccon_lo_seq(5,1)
       -1       net_inj_seq(5)

quc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       ccon_up_seq(6,1)
       -1       ccon_lo_seq(6,1)
       -1       net_inj_seq(6)


---- qdc  downregulation consumption quantity

qdc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -1.4210854715202E-14)
     (-45.8929) tot_surplus_seq
        1       ccon_up_seq(4,1)
        1       ccon_lo_seq(4,1)
        1       net_inj_seq(4)

qdc(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -168.749303364849)
     (-45.8929) tot_surplus_seq
        1       ccon_up_seq(5,1)
        1       ccon_lo_seq(5,1)
        1       net_inj_seq(5)

qdc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       ccon_up_seq(6,1)
        1       ccon_lo_seq(6,1)
        1       net_inj_seq(6)


---- q  net injection quantity

q(4)
                (.LO, .L, .UP, .M = -INF, 299.999950000636, +INF, 0)
        1       net_inj_seq(4)
        1       sum_NI_seq
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)

q(5)
                (.LO, .L, .UP, .M = -INF, -300.000800001164, +INF, 0)
        1       net_inj_seq(5)
        1       sum_NI_seq
        0.3636  ptdf_flow_hybrid(4,5)
        0.1818  ptdf_flow_hybrid(4,6)
       -0.1818  ptdf_flow_hybrid(5,6)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 199
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_seq2 Using NLP From line 1414


     q  net injection quantity


q(6)
                (.LO, .L, .UP, .M = -INF, 350.000349999328, +INF, 0)
        1       net_inj_seq(6)
        1       sum_NI_seq
        0.1273  ptdf_flow_hybrid(4,5)
        0.5636  ptdf_flow_hybrid(4,6)
        0.4364  ptdf_flow_hybrid(5,6)


---- f  line flow

f(1,4)
                (.LO, .L, .UP, .M = -INF, -400, +INF, 0)
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)
       -1       aggr_net_export
       -1       fwd_zconstr_hybrid_2(4,1)
       -1       bwd_zconstr_hybrid_2(4,1)

f(3,4)
                (.LO, .L, .UP, .M = -INF, 1.17090763237183E-13, +INF, 0)
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)
       -1       aggr_net_export
       -1       fwd_zconstr_hybrid_2(4,1)
       -1       bwd_zconstr_hybrid_2(4,1)

f(3,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        0.3636  ptdf_flow_hybrid(4,5)
        0.1818  ptdf_flow_hybrid(4,6)
       -0.1818  ptdf_flow_hybrid(5,6)
       -1       aggr_net_export
       -1       fwd_zconstr_hybrid_2(5,1)
       -1       bwd_zconstr_hybrid_2(5,1)

f(4,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow_hybrid(4,5)
        1       fwd_lconstr_zonalsim(4,5)
        1       bwd_lconstr_zonalsim(4,5)

f(4,6)
                (.LO, .L, .UP, .M = -INF, -150.000349999314, +INF, 0)
        1       ptdf_flow_hybrid(4,6)
        1       fwd_lconstr_zonalsim(4,6)
        1       bwd_lconstr_zonalsim(4,6)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 200
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_seq2 Using NLP From line 1414


     f  line flow

f(5,6)
                (.LO, .L, .UP, .M = -INF, -200, +INF, 0)
        1       ptdf_flow_hybrid(5,6)
        1       fwd_lconstr_zonalsim(5,6)
        1       bwd_lconstr_zonalsim(5,6)


---- surplus  total benefit minus total cost

surplus
                (.LO, .L, .UP, .M = -INF, 97136.932056501, +INF, 0)
        1       tot_surplus_seq

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 201
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE zonal_seq2 Using NLP From line 1414


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS           31
BLOCKS OF VARIABLES           9     SINGLE VARIABLES           28
NON ZERO ELEMENTS           109     NON LINEAR N-Z             12
DERIVATIVE POOL              20     CONSTANT POOL              25
CODE LENGTH                  92


GENERATION TIME      =        0.062 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.078 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 202
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE zonal_seq2 Using NLP From line 1414


               S O L V E      S U M M A R Y

     MODEL   zonal_seq2          OBJECTIVE  surplus
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  MINOS               FROM LINE  1414

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE            49342.2420

 RESOURCE USAGE, LIMIT          0.016      1000.000
 ITERATION COUNT, LIMIT         8    2000000000
 EVALUATION ERRORS              0             0

GAMS/MINOS       30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Win
M I N O S  5.6      (Jul 2016)

    GAMS/MINOS 5.6, Large Scale Nonlinear Solver
    B. A. Murtagh, University of New South Wales
    P. E. Gill, University of California at San Diego,
    W. Murray, M. A. Saunders, and M. H. Wright,
    Systems Optimization Laboratory, Stanford University

 Work space allocated           --     0.82 Mb

 EXIT - Optimal Solution found, objective:        49342.24



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 203
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1492


---- tot_surplus  =E=  definition of total surplus

tot_surplus..  (25.000017499965)*qg(2,1) + (19.9999850000025)*qg(3,1) + (42.2161385770405)*qg(4,1) + (8.74998951925727)*qg(6,1) + (25.000017499965)*qug(2,1) + (19.9999850000025)*qug(3,1) + (42.2161385770405)*qug(4,1) + (8.74998951925727)*qug(6,1)
     
      - (16.8803697599609)*qdg(2,1) - (6.88030476004212)*qdg(3,1) - (42.2161385770405)*qdg(4,1) - (8.74998951925727)*qdg(6,1) - (37.5000225000925)*qc(1,1) - (42.2161385770405)*qc(4,1) - (66.92305476328)*qc(5,1) + (68.1625233210049)*quc(1,1)
     
      + (42.2161385770405)*quc(4,1) + (66.92305476328)*quc(5,1) - (37.5000225000925)*qdc(1,1) - (42.2161385770405)*qdc(4,1) - (66.92305476328)*qdc(5,1) + surplus =E= 0 ; (LHS = -71963.8064038848, INFES = 71963.8064038848 ****)
     

---- gcon_up  =L=  upper bound on final generation

gcon_up(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =L= 0 ; (LHS = 0)
     
gcon_up(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =L= 10000 ; (LHS = 500.0003499993)
     
gcon_up(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =L= 10000 ; (LHS = 399.999700000051)
     
gcon_up(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =L= 10000 ; (LHS = 844.32277154081)
     
gcon_up(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =L= 0 ; (LHS = 0)
     
gcon_up(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =L= 10000 ; (LHS = 349.999580770291)
     

---- gcon_lo  =G=  lower bound on final generation

gcon_lo(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =G= 0 ; (LHS = 0)
     
gcon_lo(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =G= 0 ; (LHS = 500.0003499993)
     
gcon_lo(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =G= 0 ; (LHS = 399.99970000005)
     
gcon_lo(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =G= 0 ; (LHS = 844.32277154081)
     
gcon_lo(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =G= 0 ; (LHS = 0)
     
gcon_lo(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =G= 0 ; (LHS = 349.999580770291)
     

---- ccon_up  =L=  upper bound on final consumption

ccon_up(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =L= 10000 ; (LHS = 1249.99954999815)
     
ccon_up(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =L= 0 ; (LHS = 0)
     
ccon_up(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =L= 0 ; (LHS = 0)
     
ccon_up(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =L= 10000 ; (LHS = 577.838614229595)
     
ccon_up(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =L= 10000 ; (LHS = 330.7694523672)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 204
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1492


     ccon_up  =L=  upper bound on final consumption

ccon_up(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =L= 0 ; (LHS = 0)
     

---- ccon_lo  =G=  lower bound on final consumption

ccon_lo(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =G= 0 ; (LHS = 1249.99954999815)
     
ccon_lo(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =G= 0 ; (LHS = 0)
     
ccon_lo(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =G= 0 ; (LHS = 0)
     
ccon_lo(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =G= 0 ; (LHS = 577.838614229595)
     
ccon_lo(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =G= 0 ; (LHS = 330.769452367199)
     
ccon_lo(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =G= 0 ; (LHS = 0)
     

---- gen_redisp_down  =E=  includes generation participating in downward regulation market

gen_redisp_down(1,1)..  qdg(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_down(5,1)..  qdg(5,1) =E= 0 ; (LHS = 0)
     

---- gen_redisp_up  =E=  includes generation participating in upward regulation market

gen_redisp_up(1,1)..  qug(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_up(5,1)..  qug(5,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_down  =E=  includes consumption participating in downward regulation market

con_redisp_down(2,1)..  qdc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(3,1)..  qdc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(6,1)..  qdc(6,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_up  =E=  includes consumption participating in upward regulation market

con_redisp_up(2,1)..  quc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(3,1)..  quc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(6,1)..  quc(6,1) =E= 0 ; (LHS = 0)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 205
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1492


---- net_inj  =E=  net injection in every node

net_inj(1)..  - qg(1,1) - qug(1,1) + qdg(1,1) + qc(1,1) - quc(1,1) + qdc(1,1) + q(1) =E= 0 ; (LHS = 2.27373675443232E-13, INFES = 2.27373675443232E-13 ****)
     
net_inj(2)..  - qg(2,1) - qug(2,1) + qdg(2,1) + qc(2,1) - quc(2,1) + qdc(2,1) + q(2) =E= 0 ; (LHS = 0)
     
net_inj(3)..  - qg(3,1) - qug(3,1) + qdg(3,1) + qc(3,1) - quc(3,1) + qdc(3,1) + q(3) =E= 0 ; (LHS = -1.70530256582424E-13, INFES = 1.70530256582424E-13 ****)
     
net_inj(4)..  - qg(4,1) - qug(4,1) + qdg(4,1) + qc(4,1) - quc(4,1) + qdc(4,1) + q(4) =E= 0 ; (LHS = 1.13686837721616E-13, INFES = 1.13686837721616E-13 ****)
     
net_inj(5)..  - qg(5,1) - qug(5,1) + qdg(5,1) + qc(5,1) - quc(5,1) + qdc(5,1) + q(5) =E= 0 ; (LHS = 0)
     
net_inj(6)..  - qg(6,1) - qug(6,1) + qdg(6,1) + qc(6,1) - quc(6,1) + qdc(6,1) + q(6) =E= 0 ; (LHS = 0)
     

---- sum_NI  =E=  sum of net injections

sum_NI..  q(1) + q(2) + q(3) + q(4) + q(5) + q(6) =E= 0 ; (LHS = -64.2852142844931, INFES = 64.2852142844931 ****)
     

---- ptdf_flow  =E=  calculates physical flows over given line

ptdf_flow(1,2)..  0.618182*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(1,2) =E= 0 ; (LHS = -10.4694603350902, INFES = 10.4694603350902 ****)
     
ptdf_flow(1,3)..  0.236364*q(2) + 0.472727*q(3) + 0.290909*q(4) + 0.363636*q(5) + 0.327273*q(6) + f(1,3) =E= 0 ; (LHS = -20.938887155157, INFES = 20.938887155157 ****)
     
ptdf_flow(1,4)..  0.145455*q(2) + 0.290909*q(3) + 0.563636*q(4) + 0.454545*q(5) + 0.509091*q(6) + f(1,4) =E= 0 ; (LHS = 31.4088782600998, INFES = 31.4088782600998 ****)
     
ptdf_flow(2,3)..  - 0.381818*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(2,3) =E= 0 ; (LHS = -10.4694603350903, INFES = 10.4694603350903 ****)
     
ptdf_flow(3,4)..  - 0.090909*q(2) - 0.181818*q(3) + 0.272727*q(4) + 0.090909*q(5) + 0.181818*q(6) + f(3,4) =E= 0 ; (LHS = -11.9379488704366, INFES = 11.9379488704366 ****)
     
ptdf_flow(3,5)..  - 0.054545*q(2) - 0.109091*q(3) + 0.163636*q(4) + 0.454545*q(5) + 0.309091*q(6) + f(3,5) =E= 0 ; (LHS = -19.4703651040179, INFES = 19.4703651040179 ****)
     
ptdf_flow(4,5)..  0.036364*q(2) + 0.072727*q(3) - 0.109091*q(4) + 0.363636*q(5) + 0.127273*q(6) + f(4,5) =E= 0 ; (LHS = -7.5324162335812, INFES = 7.5324162335812 ****)
     
ptdf_flow(4,6)..  0.018182*q(2) + 0.036364*q(3) - 0.054545*q(4) + 0.181818*q(5) + 0.563636*q(6) + f(4,6) =E= 0 ; (LHS = -3.76584025979776, INFES = 3.76584025979776 ****)
     
ptdf_flow(5,6)..  - 0.018182*q(2) - 0.036364*q(3) + 0.054545*q(4) - 0.181818*q(5) + 0.436364*q(6) + f(5,6) =E= 0 ; (LHS = 3.76584025979778, INFES = 3.76584025979778 ****)
     

---- fwd_lconstr  =L=  forward capacity constraint for line

fwd_lconstr(1,2)..  f(1,2) =L= 500 ; (LHS = -450.0003499993)
     
fwd_lconstr(1,3)..  f(1,3) =L= 450 ; (LHS = -400)
     
fwd_lconstr(1,4)..  f(1,4) =L= 400 ; (LHS = -335.714285714307)
     
fwd_lconstr(2,3)..  f(2,3) =L= 50 ; (LHS = 50)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 206
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1492


     fwd_lconstr  =L=  forward capacity constraint for line

fwd_lconstr(3,4)..  f(3,4) =L= 20 ; (LHS = 1.17239551400417E-13)
     
fwd_lconstr(3,5)..  f(3,5) =L= 50 ; (LHS = 50)
     
fwd_lconstr(4,5)..  f(4,5) =L= 50 ; (LHS = 50)
     
fwd_lconstr(4,6)..  f(4,6) =L= 500 ; (LHS = -149.999580770291)
     
fwd_lconstr(5,6)..  f(5,6) =L= 200 ; (LHS = -200)
     

---- bwd_lconstr  =G=  backward capacity constraint for line

bwd_lconstr(1,2)..  f(1,2) =G= -500 ; (LHS = -450.0003499993)
     
bwd_lconstr(1,3)..  f(1,3) =G= -450 ; (LHS = -400)
     
bwd_lconstr(1,4)..  f(1,4) =G= -400 ; (LHS = -335.714285714307)
     
bwd_lconstr(2,3)..  f(2,3) =G= -50 ; (LHS = 50)
     
bwd_lconstr(3,4)..  f(3,4) =G= -20 ; (LHS = 1.17239551400417E-13)
     
bwd_lconstr(3,5)..  f(3,5) =G= -50 ; (LHS = 50)
     
bwd_lconstr(4,5)..  f(4,5) =G= -50 ; (LHS = 50)
     
bwd_lconstr(4,6)..  f(4,6) =G= -500 ; (LHS = -149.999580770291)
     
bwd_lconstr(5,6)..  f(5,6) =G= -200 ; (LHS = -200)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 207
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1492


---- qg  spot market generation quantity

qg(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qg(2,1)
                (.LO, .L, .UP, .M = 662.393304799383, 662.393304799383, 662.393304799383, -8.11964774000415)
      (25)      tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qg(3,1)
                (.LO, .L, .UP, .M = 662.393304799258, 662.393304799258, 662.393304799258, -13.1196802399604)
      (20)      tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qg(4,1)
                (.LO, .L, .UP, .M = 844.32277154081, 844.32277154081, 844.32277154081, 0)
      (42.2161) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qg(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qg(6,1)
                (.LO, .L, .UP, .M = 349.999580770291, 349.999580770291, 349.999580770291, 0)
       (8.75)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qug  upregulation generation quantity

qug(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
        1       gen_redisp_up(1,1)
       -1       net_inj(1)

qug(2,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 208
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1492


     qug  upregulation generation quantity

                (.LO, .L, .UP, .M = 0, 0, +INF, -8.11964774000415)
      (25)      tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qug(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -13.1196802399604)
      (20)      tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qug(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (42.2161) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qug(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -1.4210854715202E-14)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
        1       gen_redisp_up(5,1)
       -1       net_inj(5)

qug(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       (8.75)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qdg  downregulation generation quantity

qdg(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       gcon_up(1,1)
       -1       gcon_lo(1,1)
        1       gen_redisp_down(1,1)
        1       net_inj(1)

qdg(2,1)
                (.LO, .L, .UP, .M = 0, 162.392954800083, +INF, 0)
     (-16.8804) tot_surplus
       -1       gcon_up(2,1)
       -1       gcon_lo(2,1)
        1       net_inj(2)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 209
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1492


     qdg  downregulation generation quantity

qdg(3,1)
                (.LO, .L, .UP, .M = 0, 262.393604799208, +INF, 0)
      (-6.8803) tot_surplus
       -1       gcon_up(3,1)
       -1       gcon_lo(3,1)
        1       net_inj(3)

qdg(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-42.2161) tot_surplus
       -1       gcon_up(4,1)
       -1       gcon_lo(4,1)
        1       net_inj(4)

qdg(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 1.4210854715202E-14)
       -1       gcon_up(5,1)
       -1       gcon_lo(5,1)
        1       gen_redisp_down(5,1)
        1       net_inj(5)

qdg(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (-8.75)   tot_surplus
       -1       gcon_up(6,1)
       -1       gcon_lo(6,1)
        1       net_inj(6)


---- qc  spot market consumption quantity

qc(1,1)
                (.LO, .L, .UP, .M = 1337.60669520076, 1337.60669520076, 1337.60669520076, -30.6625008209124)
     (-37.5)    tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 3.5527136788005E-15)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 8.88178419700125E-16)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qc(4,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 210
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1492


     qc  spot market consumption quantity

                (.LO, .L, .UP, .M = 577.838614229595, 577.838614229595, 577.838614229595, 7.105427357601E-15)
     (-42.2161) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qc(5,1)
                (.LO, .L, .UP, .M = 330.769452367199, 330.769452367199, 330.769452367199, 0)
     (-66.9231) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -8.74998951925727)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)


---- quc  upregulation consumption quantity

quc(1,1)
                (.LO, .L, .UP, .M = 0, 87.6071452026068, +INF, 0)
      (68.1625) tot_surplus
       -1       ccon_up(1,1)
       -1       ccon_lo(1,1)
       -1       net_inj(1)

quc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       ccon_up(2,1)
       -1       ccon_lo(2,1)
        1       con_redisp_up(2,1)
       -1       net_inj(2)

quc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       ccon_up(3,1)
       -1       ccon_lo(3,1)
        1       con_redisp_up(3,1)
       -1       net_inj(3)

quc(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -7.105427357601E-15)
      (42.2161) tot_surplus
       -1       ccon_up(4,1)
       -1       ccon_lo(4,1)
       -1       net_inj(4)

quc(5,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 211
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1492


     quc  upregulation consumption quantity

                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (66.9231) tot_surplus
       -1       ccon_up(5,1)
       -1       ccon_lo(5,1)
       -1       net_inj(5)

quc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 8.74998951925727)
       -1       ccon_up(6,1)
       -1       ccon_lo(6,1)
        1       con_redisp_up(6,1)
       -1       net_inj(6)


---- qdc  downregulation consumption quantity

qdc(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -30.6625008209124)
     (-37.5)    tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qdc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       con_redisp_down(2,1)
        1       net_inj(2)

qdc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       con_redisp_down(3,1)
        1       net_inj(3)

qdc(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 7.105427357601E-15)
     (-42.2161) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qdc(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-66.9231) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 212
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1492


     qdc  downregulation consumption quantity

qdc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -8.74998951925727)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       con_redisp_down(6,1)
        1       net_inj(6)


---- q  net injection quantity

q(1)
                (.LO, .L, .UP, .M = -INF, -1249.99954999815, +INF, 0)
        1       net_inj(1)
        1       sum_NI

q(2)
                (.LO, .L, .UP, .M = -INF, 500.0003499993, +INF, 0)
        1       net_inj(2)
        1       sum_NI
        0.6182  ptdf_flow(1,2)
        0.2364  ptdf_flow(1,3)
        0.1455  ptdf_flow(1,4)
       -0.3818  ptdf_flow(2,3)
       -0.0909  ptdf_flow(3,4)
       -0.0545  ptdf_flow(3,5)
        0.0364  ptdf_flow(4,5)
        0.0182  ptdf_flow(4,6)
       -0.0182  ptdf_flow(5,6)

q(3)
                (.LO, .L, .UP, .M = -INF, 399.99970000005, +INF, 0)
        1       net_inj(3)
        1       sum_NI
        0.2364  ptdf_flow(1,2)
        0.4727  ptdf_flow(1,3)
        0.2909  ptdf_flow(1,4)
        0.2364  ptdf_flow(2,3)
       -0.1818  ptdf_flow(3,4)
       -0.1091  ptdf_flow(3,5)
        0.0727  ptdf_flow(4,5)
        0.0364  ptdf_flow(4,6)
       -0.0364  ptdf_flow(5,6)

q(4)
                (.LO, .L, .UP, .M = -INF, 266.484157311215, +INF, 0)
        1       net_inj(4)
        1       sum_NI
        0.1455  ptdf_flow(1,2)
        0.2909  ptdf_flow(1,3)
        0.5636  ptdf_flow(1,4)
        0.1455  ptdf_flow(2,3)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 213
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1492


     q  net injection quantity

        0.2727  ptdf_flow(3,4)
        0.1636  ptdf_flow(3,5)
       -0.1091  ptdf_flow(4,5)
       -0.0545  ptdf_flow(4,6)
        0.0545  ptdf_flow(5,6)

q(5)
                (.LO, .L, .UP, .M = -INF, -330.769452367199, +INF, 0)
        1       net_inj(5)
        1       sum_NI
        0.1818  ptdf_flow(1,2)
        0.3636  ptdf_flow(1,3)
        0.4545  ptdf_flow(1,4)
        0.1818  ptdf_flow(2,3)
        0.0909  ptdf_flow(3,4)
        0.4545  ptdf_flow(3,5)
        0.3636  ptdf_flow(4,5)
        0.1818  ptdf_flow(4,6)
       -0.1818  ptdf_flow(5,6)

q(6)
                (.LO, .L, .UP, .M = -INF, 349.999580770291, +INF, 0)
        1       net_inj(6)
        1       sum_NI
        0.1636  ptdf_flow(1,2)
        0.3273  ptdf_flow(1,3)
        0.5091  ptdf_flow(1,4)
        0.1636  ptdf_flow(2,3)
        0.1818  ptdf_flow(3,4)
        0.3091  ptdf_flow(3,5)
        0.1273  ptdf_flow(4,5)
        0.5636  ptdf_flow(4,6)
        0.4364  ptdf_flow(5,6)


---- f  line flow

f(1,2)
                (.LO, .L, .UP, .M = -INF, -450.0003499993, +INF, 0)
        1       ptdf_flow(1,2)
        1       fwd_lconstr(1,2)
        1       bwd_lconstr(1,2)

f(1,3)
                (.LO, .L, .UP, .M = -INF, -400, +INF, 0)
        1       ptdf_flow(1,3)
        1       fwd_lconstr(1,3)
        1       bwd_lconstr(1,3)

f(1,4)
                (.LO, .L, .UP, .M = -INF, -335.714285714307, +INF, 0)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 214
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1492


     f  line flow

        1       ptdf_flow(1,4)
        1       fwd_lconstr(1,4)
        1       bwd_lconstr(1,4)

f(2,3)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow(2,3)
        1       fwd_lconstr(2,3)
        1       bwd_lconstr(2,3)

f(3,4)
                (.LO, .L, .UP, .M = -INF, 1.17090763237183E-13, +INF, EPS)
        1       ptdf_flow(3,4)
        1       fwd_lconstr(3,4)
        1       bwd_lconstr(3,4)

f(3,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow(3,5)
        1       fwd_lconstr(3,5)
        1       bwd_lconstr(3,5)

f(4,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow(4,5)
        1       fwd_lconstr(4,5)
        1       bwd_lconstr(4,5)

f(4,6)
                (.LO, .L, .UP, .M = -INF, -149.999580770291, +INF, 0)
        1       ptdf_flow(4,6)
        1       fwd_lconstr(4,6)
        1       bwd_lconstr(4,6)

f(5,6)
                (.LO, .L, .UP, .M = -INF, -200, +INF, 0)
        1       ptdf_flow(5,6)
        1       fwd_lconstr(5,6)
        1       bwd_lconstr(5,6)


---- surplus  total benefit minus total cost

surplus
                (.LO, .L, .UP, .M = -INF, 49342.2420286745, +INF, 0)
        1       tot_surplus

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 215
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE redispatch Using NLP From line 1492


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS           69
BLOCKS OF VARIABLES           9     SINGLE VARIABLES           52
NON ZERO ELEMENTS           224     NON LINEAR N-Z             21
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH                 156


GENERATION TIME      =        0.031 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 216
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE redispatch Using NLP From line 1492


               S O L V E      S U M M A R Y

     MODEL   redispatch          OBJECTIVE  surplus
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  MINOS               FROM LINE  1492

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE           119473.0330

 RESOURCE USAGE, LIMIT          0.016      1000.000
 ITERATION COUNT, LIMIT         8    2000000000
 EVALUATION ERRORS              0             0

GAMS/MINOS       30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Win
M I N O S  5.6      (Jul 2016)

    GAMS/MINOS 5.6, Large Scale Nonlinear Solver
    B. A. Murtagh, University of New South Wales
    P. E. Gill, University of California at San Diego,
    W. Murray, M. A. Saunders, and M. H. Wright,
    Systems Optimization Laboratory, Stanford University

 Work space allocated           --     0.87 Mb

 EXIT - Optimal Solution found, objective:        119473.0



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 217
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal_seq3 Using NLP From line 1567


---- tot_surplus_seq  =E=  definition of total surplus

tot_surplus_seq..  (42.2161385770405)*qg(4,1) + (8.74998951925727)*qg(6,1) + (42.2161385770405)*qug(4,1) + (8.74998951925727)*qug(6,1) - (42.2161385770405)*qdg(4,1) - (8.74998951925727)*qdg(6,1) - (42.2161385770405)*qc(4,1) - (66.92305476328)*qc(5,1)
     
      + (42.2161385770405)*quc(4,1) + (66.92305476328)*quc(5,1) - (42.2161385770405)*qdc(4,1) - (66.92305476328)*qdc(5,1) + surplus =E= 0 ; (LHS = 70130.7909803989, INFES = 70130.7909803989 ****)
     

---- gcon_up_seq  =L=  upper bound on final generation for the sequential model

gcon_up_seq(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =L= 10000 ; (LHS = 844.32277154081)
     
gcon_up_seq(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =L= 0 ; (LHS = 0)
     
gcon_up_seq(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =L= 10000 ; (LHS = 349.999580770291)
     

---- gcon_lo_seq  =G=  lower bound on final generation for the sequential model

gcon_lo_seq(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =G= 0 ; (LHS = 844.32277154081)
     
gcon_lo_seq(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =G= 0 ; (LHS = 0)
     
gcon_lo_seq(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =G= 0 ; (LHS = 349.999580770291)
     

---- ccon_up_seq  =L=  upper bound on final consumption for the sequential model

ccon_up_seq(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =L= 10000 ; (LHS = 577.838614229595)
     
ccon_up_seq(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =L= 10000 ; (LHS = 330.7694523672)
     
ccon_up_seq(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =L= 0 ; (LHS = 0)
     

---- ccon_lo_seq  =G=  lower bound on final consumption for the sequential model

ccon_lo_seq(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =G= 0 ; (LHS = 577.838614229595)
     
ccon_lo_seq(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =G= 0 ; (LHS = 330.769452367199)
     
ccon_lo_seq(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =G= 0 ; (LHS = 0)
     

---- net_inj_seq  =E=  net injection at nodal nodes

net_inj_seq(4)..  - qg(4,1) - qug(4,1) + qdg(4,1) + qc(4,1) - quc(4,1) + qdc(4,1) + q(4) =E= 0 ; (LHS = -26.4842273106646, INFES = 26.4842273106646 ****)
     
net_inj_seq(5)..  - qg(5,1) - qug(5,1) + qdg(5,1) + qc(5,1) - quc(5,1) + qdc(5,1) + q(5) =E= 0 ; (LHS = 50.7686523660892, INFES = 50.7686523660892 ****)
     
net_inj_seq(6)..  - qg(6,1) - qug(6,1) + qdg(6,1) + qc(6,1) - quc(6,1) + qdc(6,1) + q(6) =E= 0 ; (LHS = 20.000729229089, INFES = 20.000729229089 ****)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 218
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal_seq3 Using NLP From line 1567


---- sum_NI_seq  =E=  sum of day ahead zonal line flows at a hybrid node

sum_NI_seq..  q(4) + q(5) + q(6) =E= 285.714285714307 ; (LHS = 329.99943999882, INFES = 44.2851542845133 ****)
     

---- ptdf_flow_hybrid  =E=  calculates physical flows over given line connected to hybrid node

ptdf_flow_hybrid(4,5)..  - 0.109091*q(4) + 0.363636*q(5) + 0.127273*q(6) - 0.109091*f(1,4) - 0.109091*f(3,4) + 0.363636*f(3,5) + f(4,5) =E= 0 ; (LHS = 8.72722618165748, INFES = 8.72722618165748 ****)
     
ptdf_flow_hybrid(4,6)..  - 0.054545*q(4) + 0.181818*q(5) + 0.563636*q(6) - 0.054545*f(1,4) - 0.054545*f(3,4) + 0.181818*f(3,5) + f(4,6) =E= 0 ; (LHS = 4.36320309094879, INFES = 4.36320309094879 ****)
     
ptdf_flow_hybrid(5,6)..  0.054545*q(4) - 0.181818*q(5) + 0.436364*q(6) + 0.054545*f(1,4) + 0.054545*f(3,4) - 0.181818*f(3,5) + f(5,6) =E= 0 ; (LHS = -4.36320309094876, INFES = 4.36320309094876 ****)
     

---- aggr_net_export  =E=  sets aggregate constraints between nodal and zonal areas

aggr_net_export..  - f(1,4) - f(3,4) - f(3,5) =E= 285.714285714307 ; (LHS = 330, INFES = 44.2857142856934 ****)
     

---- fwd_zconstr_hybrid_3  =L=  forward line capacity constraint specific to hybrid nodes and zonal nodes

fwd_zconstr_hybrid_3(1,4)..  f(1,4) =L= 400 ; (LHS = -400)
     
fwd_zconstr_hybrid_3(3,4)..  f(3,4) =L= 20 ; (LHS = 19.9999999999999)
     
fwd_zconstr_hybrid_3(3,5)..  f(3,5) =L= 50 ; (LHS = 50)
     

---- bwd_zconstr_hybrid_3  =G=  backward line capacity constraint specific to hybrid nodes and zonal nodes

bwd_zconstr_hybrid_3(1,4)..  f(1,4) =G= -400 ; (LHS = -400)
     
bwd_zconstr_hybrid_3(3,4)..  f(3,4) =G= -20 ; (LHS = 19.9999999999999)
     
bwd_zconstr_hybrid_3(3,5)..  f(3,5) =G= -50 ; (LHS = 50)
     

---- fwd_lconstr_zonalsim  =L=  forward capacity constraint for line

fwd_lconstr_zonalsim(4,5)..  f(4,5) =L= 50 ; (LHS = 30.0000000000001)
     
fwd_lconstr_zonalsim(4,6)..  f(4,6) =L= 500 ; (LHS = -170.00030999938)
     
fwd_lconstr_zonalsim(5,6)..  f(5,6) =L= 200 ; (LHS = -200)
     

---- bwd_lconstr_zonalsim  =G=  backward capacity constraint for line

bwd_lconstr_zonalsim(4,5)..  f(4,5) =G= -50 ; (LHS = 30.0000000000001)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 219
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE zonal_seq3 Using NLP From line 1567


     bwd_lconstr_zonalsim  =G=  backward capacity constraint for line

bwd_lconstr_zonalsim(4,6)..  f(4,6) =G= -500 ; (LHS = -170.00030999938)
     
bwd_lconstr_zonalsim(5,6)..  f(5,6) =G= -200 ; (LHS = -200)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 220
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_seq3 Using NLP From line 1567


---- qg  spot market generation quantity

qg(4,1)
                (.LO, .L, .UP, .M = 0, 844.32277154081, +INF, -1.17707676936288)
      (42.2161) tot_surplus_seq
        1       gcon_up_seq(4,1)
        1       gcon_lo_seq(4,1)
       -1       net_inj_seq(4)

qg(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       gcon_up_seq(5,1)
        1       gcon_lo_seq(5,1)
       -1       net_inj_seq(5)

qg(6,1)
                (.LO, .L, .UP, .M = 0, 349.999580770291, +INF, 0.500018230727223)
       (8.75)   tot_surplus_seq
        1       gcon_up_seq(6,1)
        1       gcon_lo_seq(6,1)
       -1       net_inj_seq(6)


---- qug  upregulation generation quantity

qug(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -1.17707676936288)
      (42.2161) tot_surplus_seq
        1       gcon_up_seq(4,1)
        1       gcon_lo_seq(4,1)
       -1       net_inj_seq(4)

qug(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -1.30836556880724E-14)
        1       gcon_up_seq(5,1)
        1       gcon_lo_seq(5,1)
       -1       net_inj_seq(5)

qug(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       (8.75)   tot_surplus_seq
        1       gcon_up_seq(6,1)
        1       gcon_lo_seq(6,1)
       -1       net_inj_seq(6)


---- qdg  downregulation generation quantity

qdg(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 1.4210854715202E-14)
     (-42.2161) tot_surplus_seq
       -1       gcon_up_seq(4,1)
       -1       gcon_lo_seq(4,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 221
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_seq3 Using NLP From line 1567


     qdg  downregulation generation quantity

        1       net_inj_seq(4)

qdg(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 1.30836556880724E-14)
       -1       gcon_up_seq(5,1)
       -1       gcon_lo_seq(5,1)
        1       net_inj_seq(5)

qdg(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -0.500018230727223)
      (-8.75)   tot_surplus_seq
       -1       gcon_up_seq(6,1)
       -1       gcon_lo_seq(6,1)
        1       net_inj_seq(6)


---- qc  spot market consumption quantity

qc(4,1)
                (.LO, .L, .UP, .M = 0, 577.838614229595, +INF, 2.05988434638504)
     (-42.2161) tot_surplus_seq
        1       ccon_up_seq(4,1)
        1       ccon_lo_seq(4,1)
        1       net_inj_seq(4)

qc(5,1)
                (.LO, .L, .UP, .M = 0, 330.769452367199, +INF, -35.5380566562625)
     (-66.9231) tot_surplus_seq
        1       ccon_up_seq(5,1)
        1       ccon_lo_seq(5,1)
        1       net_inj_seq(5)

qc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       ccon_up_seq(6,1)
        1       ccon_lo_seq(6,1)
        1       net_inj_seq(6)


---- quc  upregulation consumption quantity

quc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -2.05988434638504)
      (42.2161) tot_surplus_seq
       -1       ccon_up_seq(4,1)
       -1       ccon_lo_seq(4,1)
       -1       net_inj_seq(4)

quc(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
      (66.9231) tot_surplus_seq
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 222
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_seq3 Using NLP From line 1567


     quc  upregulation consumption quantity

       -1       ccon_up_seq(5,1)
       -1       ccon_lo_seq(5,1)
       -1       net_inj_seq(5)

quc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
       -1       ccon_up_seq(6,1)
       -1       ccon_lo_seq(6,1)
       -1       net_inj_seq(6)


---- qdc  downregulation consumption quantity

qdc(4,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
     (-42.2161) tot_surplus_seq
        1       ccon_up_seq(4,1)
        1       ccon_lo_seq(4,1)
        1       net_inj_seq(4)

qdc(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -35.5380566562625)
     (-66.9231) tot_surplus_seq
        1       ccon_up_seq(5,1)
        1       ccon_lo_seq(5,1)
        1       net_inj_seq(5)

qdc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       ccon_up_seq(6,1)
        1       ccon_lo_seq(6,1)
        1       net_inj_seq(6)


---- q  net injection quantity

q(4)
                (.LO, .L, .UP, .M = -INF, 239.99993000055, +INF, 0)
        1       net_inj_seq(4)
        1       sum_NI_seq
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)

q(5)
                (.LO, .L, .UP, .M = -INF, -280.00080000111, +INF, 0)
        1       net_inj_seq(5)
        1       sum_NI_seq
        0.3636  ptdf_flow_hybrid(4,5)
        0.1818  ptdf_flow_hybrid(4,6)
       -0.1818  ptdf_flow_hybrid(5,6)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 223
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_seq3 Using NLP From line 1567


     q  net injection quantity


q(6)
                (.LO, .L, .UP, .M = -INF, 370.00030999938, +INF, 0)
        1       net_inj_seq(6)
        1       sum_NI_seq
        0.1273  ptdf_flow_hybrid(4,5)
        0.5636  ptdf_flow_hybrid(4,6)
        0.4364  ptdf_flow_hybrid(5,6)


---- f  line flow

f(1,4)
                (.LO, .L, .UP, .M = -INF, -400, +INF, 0)
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)
       -1       aggr_net_export
        1       fwd_zconstr_hybrid_3(1,4)
        1       bwd_zconstr_hybrid_3(1,4)

f(3,4)
                (.LO, .L, .UP, .M = -INF, 19.9999999999999, +INF, 0)
       -0.1091  ptdf_flow_hybrid(4,5)
       -0.0545  ptdf_flow_hybrid(4,6)
        0.0545  ptdf_flow_hybrid(5,6)
       -1       aggr_net_export
        1       fwd_zconstr_hybrid_3(3,4)
        1       bwd_zconstr_hybrid_3(3,4)

f(3,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        0.3636  ptdf_flow_hybrid(4,5)
        0.1818  ptdf_flow_hybrid(4,6)
       -0.1818  ptdf_flow_hybrid(5,6)
       -1       aggr_net_export
        1       fwd_zconstr_hybrid_3(3,5)
        1       bwd_zconstr_hybrid_3(3,5)

f(4,5)
                (.LO, .L, .UP, .M = -INF, 30.0000000000001, +INF, 0)
        1       ptdf_flow_hybrid(4,5)
        1       fwd_lconstr_zonalsim(4,5)
        1       bwd_lconstr_zonalsim(4,5)

f(4,6)
                (.LO, .L, .UP, .M = -INF, -170.00030999938, +INF, 0)
        1       ptdf_flow_hybrid(4,6)
        1       fwd_lconstr_zonalsim(4,6)
        1       bwd_lconstr_zonalsim(4,6)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 224
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE zonal_seq3 Using NLP From line 1567


     f  line flow

f(5,6)
                (.LO, .L, .UP, .M = -INF, -200, +INF, 0)
        1       ptdf_flow_hybrid(5,6)
        1       fwd_lconstr_zonalsim(5,6)
        1       bwd_lconstr_zonalsim(5,6)


---- surplus  total benefit minus total cost

surplus
                (.LO, .L, .UP, .M = -INF, 119473.033009073, +INF, 0)
        1       tot_surplus_seq

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 225
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE zonal_seq3 Using NLP From line 1567


MODEL STATISTICS

BLOCKS OF EQUATIONS          13     SINGLE EQUATIONS           33
BLOCKS OF VARIABLES           9     SINGLE VARIABLES           28
NON ZERO ELEMENTS           109     NON LINEAR N-Z             12
DERIVATIVE POOL              20     CONSTANT POOL              25
CODE LENGTH                  92


GENERATION TIME      =        0.031 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 226
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE zonal_seq3 Using NLP From line 1567


               S O L V E      S U M M A R Y

     MODEL   zonal_seq3          OBJECTIVE  surplus
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  MINOS               FROM LINE  1567

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE            49342.2420

 RESOURCE USAGE, LIMIT          0.016      1000.000
 ITERATION COUNT, LIMIT         9    2000000000
 EVALUATION ERRORS              0             0

GAMS/MINOS       30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Win
M I N O S  5.6      (Jul 2016)

    GAMS/MINOS 5.6, Large Scale Nonlinear Solver
    B. A. Murtagh, University of New South Wales
    P. E. Gill, University of California at San Diego,
    W. Murray, M. A. Saunders, and M. H. Wright,
    Systems Optimization Laboratory, Stanford University

 Work space allocated           --     0.82 Mb

 EXIT - Optimal Solution found, objective:        49342.24



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
                             1  PROJECTED
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 227
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1645


---- tot_surplus  =E=  definition of total surplus

tot_surplus..  (26.000015499969)*qg(2,1) + (21.9999880000035)*qg(3,1) + (42.2161385770405)*qg(4,1) + (8.74998951925727)*qg(6,1) + (26.000015499969)*qug(2,1) + (21.9999880000035)*qug(3,1) + (42.2161385770405)*qug(4,1) + (8.74998951925727)*qug(6,1)
     
      - (18.8803657599688)*qdg(2,1) - (10.8803107600441)*qdg(3,1) - (42.2161385770405)*qdg(4,1) - (8.74998951925727)*qdg(6,1) - (35.5000245000865)*qc(1,1) - (42.2161385770405)*qc(4,1) - (66.92305476328)*qc(5,1) + (52.1625393209571)*quc(1,1)
     
      + (42.2161385770405)*quc(4,1) + (66.92305476328)*quc(5,1) - (35.5000245000865)*qdc(1,1) - (42.2161385770405)*qdc(4,1) - (66.92305476328)*qdc(5,1) + surplus =E= 0 ; (LHS = -73657.4857670236, INFES = 73657.4857670236 ****)
     

---- gcon_up  =L=  upper bound on final generation

gcon_up(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =L= 0 ; (LHS = 0)
     
gcon_up(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =L= 10000 ; (LHS = 520.000309999379)
     
gcon_up(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =L= 10000 ; (LHS = 439.99976000007)
     
gcon_up(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =L= 10000 ; (LHS = 844.32277154081)
     
gcon_up(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =L= 0 ; (LHS = 0)
     
gcon_up(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =L= 10000 ; (LHS = 349.999580770291)
     

---- gcon_lo  =G=  lower bound on final generation

gcon_lo(1,1)..  qg(1,1) + qug(1,1) - qdg(1,1) =G= 0 ; (LHS = 0)
     
gcon_lo(2,1)..  qg(2,1) + qug(2,1) - qdg(2,1) =G= 0 ; (LHS = 520.00030999938)
     
gcon_lo(3,1)..  qg(3,1) + qug(3,1) - qdg(3,1) =G= 0 ; (LHS = 439.99976000007)
     
gcon_lo(4,1)..  qg(4,1) + qug(4,1) - qdg(4,1) =G= 0 ; (LHS = 844.32277154081)
     
gcon_lo(5,1)..  qg(5,1) + qug(5,1) - qdg(5,1) =G= 0 ; (LHS = 0)
     
gcon_lo(6,1)..  qg(6,1) + qug(6,1) - qdg(6,1) =G= 0 ; (LHS = 349.999580770291)
     

---- ccon_up  =L=  upper bound on final consumption

ccon_up(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =L= 10000 ; (LHS = 1289.99950999827)
     
ccon_up(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =L= 0 ; (LHS = 0)
     
ccon_up(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =L= 0 ; (LHS = 0)
     
ccon_up(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =L= 10000 ; (LHS = 577.838614229595)
     
ccon_up(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =L= 10000 ; (LHS = 330.7694523672)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 228
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1645


     ccon_up  =L=  upper bound on final consumption

ccon_up(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =L= 0 ; (LHS = 0)
     

---- ccon_lo  =G=  lower bound on final consumption

ccon_lo(1,1)..  qc(1,1) - quc(1,1) + qdc(1,1) =G= 0 ; (LHS = 1289.99950999827)
     
ccon_lo(2,1)..  qc(2,1) - quc(2,1) + qdc(2,1) =G= 0 ; (LHS = 0)
     
ccon_lo(3,1)..  qc(3,1) - quc(3,1) + qdc(3,1) =G= 0 ; (LHS = 0)
     
ccon_lo(4,1)..  qc(4,1) - quc(4,1) + qdc(4,1) =G= 0 ; (LHS = 577.838614229595)
     
ccon_lo(5,1)..  qc(5,1) - quc(5,1) + qdc(5,1) =G= 0 ; (LHS = 330.769452367199)
     
ccon_lo(6,1)..  qc(6,1) - quc(6,1) + qdc(6,1) =G= 0 ; (LHS = 0)
     

---- gen_redisp_down  =E=  includes generation participating in downward regulation market

gen_redisp_down(1,1)..  qdg(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_down(5,1)..  qdg(5,1) =E= 0 ; (LHS = 0)
     

---- gen_redisp_up  =E=  includes generation participating in upward regulation market

gen_redisp_up(1,1)..  qug(1,1) =E= 0 ; (LHS = 0)
     
gen_redisp_up(5,1)..  qug(5,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_down  =E=  includes consumption participating in downward regulation market

con_redisp_down(2,1)..  qdc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(3,1)..  qdc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_down(6,1)..  qdc(6,1) =E= 0 ; (LHS = 0)
     

---- con_redisp_up  =E=  includes consumption participating in upward regulation market

con_redisp_up(2,1)..  quc(2,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(3,1)..  quc(3,1) =E= 0 ; (LHS = 0)
     
con_redisp_up(6,1)..  quc(6,1) =E= 0 ; (LHS = 0)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 229
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1645


---- net_inj  =E=  net injection in every node

net_inj(1)..  - qg(1,1) - qug(1,1) + qdg(1,1) + qc(1,1) - quc(1,1) + qdc(1,1) + q(1) =E= 0 ; (LHS = 0)
     
net_inj(2)..  - qg(2,1) - qug(2,1) + qdg(2,1) + qc(2,1) - quc(2,1) + qdc(2,1) + q(2) =E= 0 ; (LHS = -1.13686837721616E-13, INFES = 1.13686837721616E-13 ****)
     
net_inj(3)..  - qg(3,1) - qug(3,1) + qdg(3,1) + qc(3,1) - quc(3,1) + qdc(3,1) + q(3) =E= 0 ; (LHS = 0)
     
net_inj(4)..  - qg(4,1) - qug(4,1) + qdg(4,1) + qc(4,1) - quc(4,1) + qdc(4,1) + q(4) =E= 0 ; (LHS = -2.27373675443232E-13, INFES = 2.27373675443232E-13 ****)
     
net_inj(5)..  - qg(5,1) - qug(5,1) + qdg(5,1) + qc(5,1) - quc(5,1) + qdc(5,1) + q(5) =E= 0 ; (LHS = 0)
     
net_inj(6)..  - qg(6,1) - qug(6,1) + qdg(6,1) + qc(6,1) - quc(6,1) + qdc(6,1) + q(6) =E= 0 ; (LHS = 0)
     

---- sum_NI  =E=  sum of net injections

sum_NI..  q(1) + q(2) + q(3) + q(4) + q(5) + q(6) =E= 0 ; (LHS = -44.2851542845135, INFES = 44.2851542845135 ****)
     

---- ptdf_flow  =E=  calculates physical flows over given line

ptdf_flow(1,2)..  0.618182*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(1,2) =E= 0 ; (LHS = -8.65123088055606, INFES = 8.65123088055606 ****)
     
ptdf_flow(1,3)..  0.236364*q(2) + 0.472727*q(3) + 0.290909*q(4) + 0.363636*q(5) + 0.327273*q(6) + f(1,3) =E= 0 ; (LHS = -17.3025082460687, INFES = 17.3025082460687 ****)
     
ptdf_flow(1,4)..  0.145455*q(2) + 0.290909*q(3) + 0.563636*q(4) + 0.454545*q(5) + 0.509091*q(6) + f(1,4) =E= 0 ; (LHS = 25.9543498964571, INFES = 25.9543498964571 ****)
     
ptdf_flow(2,3)..  - 0.381818*q(2) + 0.236364*q(3) + 0.145455*q(4) + 0.181818*q(5) + 0.163636*q(6) + f(2,3) =E= 0 ; (LHS = -8.65123088055606, INFES = 8.65123088055606 ****)
     
ptdf_flow(3,4)..  - 0.090909*q(2) - 0.181818*q(3) + 0.272727*q(4) + 0.090909*q(5) + 0.181818*q(6) + f(3,4) =E= 0 ; (LHS = -1.02885614316768, INFES = 1.02885614316768 ****)
     
ptdf_flow(3,5)..  - 0.054545*q(2) - 0.109091*q(3) + 0.163636*q(4) + 0.454545*q(5) + 0.309091*q(6) + f(3,5) =E= 0 ; (LHS = -24.9249094676844, INFES = 24.9249094676844 ****)
     
ptdf_flow(4,5)..  0.036364*q(2) + 0.072727*q(3) - 0.109091*q(4) + 0.363636*q(5) + 0.127273*q(6) + f(4,5) =E= 0 ; (LHS = -3.89605332451691, INFES = 3.89605332451691 ****)
     
ptdf_flow(4,6)..  0.018182*q(2) + 0.036364*q(3) - 0.054545*q(4) + 0.181818*q(5) + 0.563636*q(6) + f(4,6) =E= 0 ; (LHS = -1.94763880523558, INFES = 1.94763880523558 ****)
     
ptdf_flow(5,6)..  - 0.018182*q(2) - 0.036364*q(3) + 0.054545*q(4) - 0.181818*q(5) + 0.436364*q(6) + f(5,6) =E= 0 ; (LHS = 1.94763880523561, INFES = 1.94763880523561 ****)
     

---- fwd_lconstr  =L=  forward capacity constraint for line

fwd_lconstr(1,2)..  f(1,2) =L= 500 ; (LHS = -470.00030999938)
     
fwd_lconstr(1,3)..  f(1,3) =L= 450 ; (LHS = -420)
     
fwd_lconstr(1,4)..  f(1,4) =L= 400 ; (LHS = -355.714285714307)
     
fwd_lconstr(2,3)..  f(2,3) =L= 50 ; (LHS = 50)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 230
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE redispatch Using NLP From line 1645


     fwd_lconstr  =L=  forward capacity constraint for line

fwd_lconstr(3,4)..  f(3,4) =L= 20 ; (LHS = 19.9999999999999)
     
fwd_lconstr(3,5)..  f(3,5) =L= 50 ; (LHS = 50)
     
fwd_lconstr(4,5)..  f(4,5) =L= 50 ; (LHS = 50)
     
fwd_lconstr(4,6)..  f(4,6) =L= 500 ; (LHS = -149.999580770291)
     
fwd_lconstr(5,6)..  f(5,6) =L= 200 ; (LHS = -200)
     

---- bwd_lconstr  =G=  backward capacity constraint for line

bwd_lconstr(1,2)..  f(1,2) =G= -500 ; (LHS = -470.00030999938)
     
bwd_lconstr(1,3)..  f(1,3) =G= -450 ; (LHS = -420)
     
bwd_lconstr(1,4)..  f(1,4) =G= -400 ; (LHS = -355.714285714307)
     
bwd_lconstr(2,3)..  f(2,3) =G= -50 ; (LHS = 50)
     
bwd_lconstr(3,4)..  f(3,4) =G= -20 ; (LHS = 19.9999999999999)
     
bwd_lconstr(3,5)..  f(3,5) =G= -50 ; (LHS = 50)
     
bwd_lconstr(4,5)..  f(4,5) =G= -50 ; (LHS = 50)
     
bwd_lconstr(4,6)..  f(4,6) =G= -500 ; (LHS = -149.999580770291)
     
bwd_lconstr(5,6)..  f(5,6) =G= -200 ; (LHS = -200)
     
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 231
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1645


---- qg  spot market generation quantity

qg(1,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
       -1       net_inj(1)

qg(2,1)
                (.LO, .L, .UP, .M = 662.393304799383, 662.393304799383, 662.393304799383, -7.11964974000017)
      (26)      tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qg(3,1)
                (.LO, .L, .UP, .M = 662.393304799258, 662.393304799258, 662.393304799258, -11.1196772399594)
      (22)      tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qg(4,1)
                (.LO, .L, .UP, .M = 844.32277154081, 844.32277154081, 844.32277154081, 0)
      (42.2161) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qg(5,1)
                (.LO, .L, .UP, .M = 0, 0, 0, 0)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
       -1       net_inj(5)

qg(6,1)
                (.LO, .L, .UP, .M = 349.999580770291, 349.999580770291, 349.999580770291, 0)
       (8.75)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qug  upregulation generation quantity

qug(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
        1       gcon_up(1,1)
        1       gcon_lo(1,1)
        1       gen_redisp_up(1,1)
       -1       net_inj(1)

qug(2,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 232
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1645


     qug  upregulation generation quantity

                (.LO, .L, .UP, .M = 0, 0, +INF, -7.11964974000017)
      (26)      tot_surplus
        1       gcon_up(2,1)
        1       gcon_lo(2,1)
       -1       net_inj(2)

qug(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -11.1196772399594)
      (22)      tot_surplus
        1       gcon_up(3,1)
        1       gcon_lo(3,1)
       -1       net_inj(3)

qug(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (42.2161) tot_surplus
        1       gcon_up(4,1)
        1       gcon_lo(4,1)
       -1       net_inj(4)

qug(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -1.4210854715202E-14)
        1       gcon_up(5,1)
        1       gcon_lo(5,1)
        1       gen_redisp_up(5,1)
       -1       net_inj(5)

qug(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       (8.75)   tot_surplus
        1       gcon_up(6,1)
        1       gcon_lo(6,1)
       -1       net_inj(6)


---- qdg  downregulation generation quantity

qdg(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       gcon_up(1,1)
       -1       gcon_lo(1,1)
        1       gen_redisp_down(1,1)
        1       net_inj(1)

qdg(2,1)
                (.LO, .L, .UP, .M = 0, 142.392994800003, +INF, 0)
     (-18.8804) tot_surplus
       -1       gcon_up(2,1)
       -1       gcon_lo(2,1)
        1       net_inj(2)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 233
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1645


     qdg  downregulation generation quantity

qdg(3,1)
                (.LO, .L, .UP, .M = 0, 222.393544799188, +INF, 0)
     (-10.8803) tot_surplus
       -1       gcon_up(3,1)
       -1       gcon_lo(3,1)
        1       net_inj(3)

qdg(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-42.2161) tot_surplus
       -1       gcon_up(4,1)
       -1       gcon_lo(4,1)
        1       net_inj(4)

qdg(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 1.4210854715202E-14)
       -1       gcon_up(5,1)
       -1       gcon_lo(5,1)
        1       gen_redisp_down(5,1)
        1       net_inj(5)

qdg(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (-8.75)   tot_surplus
       -1       gcon_up(6,1)
       -1       gcon_lo(6,1)
        1       net_inj(6)


---- qc  spot market consumption quantity

qc(1,1)
                (.LO, .L, .UP, .M = 1337.60669520076, 1337.60669520076, 1337.60669520076, -16.6625148208706)
     (-35.5)    tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qc(2,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       net_inj(2)

qc(3,1)
                (.LO, .L, .UP, .M = 0, 0, 0, EPS)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       net_inj(3)

qc(4,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 234
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1645


     qc  spot market consumption quantity

                (.LO, .L, .UP, .M = 577.838614229595, 577.838614229595, 577.838614229595, EPS)
     (-42.2161) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qc(5,1)
                (.LO, .L, .UP, .M = 330.769452367199, 330.769452367199, 330.769452367199, 0)
     (-66.9231) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

qc(6,1)
                (.LO, .L, .UP, .M = 0, 0, 0, -8.74998951925727)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       net_inj(6)


---- quc  upregulation consumption quantity

quc(1,1)
                (.LO, .L, .UP, .M = 0, 47.6071852024873, +INF, 0)
      (52.1625) tot_surplus
       -1       ccon_up(1,1)
       -1       ccon_lo(1,1)
       -1       net_inj(1)

quc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 2.67134585059888E-15)
       -1       ccon_up(2,1)
       -1       ccon_lo(2,1)
        1       con_redisp_up(2,1)
       -1       net_inj(2)

quc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
       -1       ccon_up(3,1)
       -1       ccon_lo(3,1)
        1       con_redisp_up(3,1)
       -1       net_inj(3)

quc(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (42.2161) tot_surplus
       -1       ccon_up(4,1)
       -1       ccon_lo(4,1)
       -1       net_inj(4)

quc(5,1)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 235
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1645


     quc  upregulation consumption quantity

                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
      (66.9231) tot_surplus
       -1       ccon_up(5,1)
       -1       ccon_lo(5,1)
       -1       net_inj(5)

quc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 8.74998951925727)
       -1       ccon_up(6,1)
       -1       ccon_lo(6,1)
        1       con_redisp_up(6,1)
       -1       net_inj(6)


---- qdc  downregulation consumption quantity

qdc(1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -16.6625148208706)
     (-35.5)    tot_surplus
        1       ccon_up(1,1)
        1       ccon_lo(1,1)
        1       net_inj(1)

qdc(2,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(2,1)
        1       ccon_lo(2,1)
        1       con_redisp_down(2,1)
        1       net_inj(2)

qdc(3,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       ccon_up(3,1)
        1       ccon_lo(3,1)
        1       con_redisp_down(3,1)
        1       net_inj(3)

qdc(4,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-42.2161) tot_surplus
        1       ccon_up(4,1)
        1       ccon_lo(4,1)
        1       net_inj(4)

qdc(5,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, EPS)
     (-66.9231) tot_surplus
        1       ccon_up(5,1)
        1       ccon_lo(5,1)
        1       net_inj(5)

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 236
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1645


     qdc  downregulation consumption quantity

qdc(6,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -8.74998951925727)
        1       ccon_up(6,1)
        1       ccon_lo(6,1)
        1       con_redisp_down(6,1)
        1       net_inj(6)


---- q  net injection quantity

q(1)
                (.LO, .L, .UP, .M = -INF, -1289.99950999827, +INF, 0)
        1       net_inj(1)
        1       sum_NI

q(2)
                (.LO, .L, .UP, .M = -INF, 520.00030999938, +INF, 0)
        1       net_inj(2)
        1       sum_NI
        0.6182  ptdf_flow(1,2)
        0.2364  ptdf_flow(1,3)
        0.1455  ptdf_flow(1,4)
       -0.3818  ptdf_flow(2,3)
       -0.0909  ptdf_flow(3,4)
       -0.0545  ptdf_flow(3,5)
        0.0364  ptdf_flow(4,5)
        0.0182  ptdf_flow(4,6)
       -0.0182  ptdf_flow(5,6)

q(3)
                (.LO, .L, .UP, .M = -INF, 439.99976000007, +INF, 0)
        1       net_inj(3)
        1       sum_NI
        0.2364  ptdf_flow(1,2)
        0.4727  ptdf_flow(1,3)
        0.2909  ptdf_flow(1,4)
        0.2364  ptdf_flow(2,3)
       -0.1818  ptdf_flow(3,4)
       -0.1091  ptdf_flow(3,5)
        0.0727  ptdf_flow(4,5)
        0.0364  ptdf_flow(4,6)
       -0.0364  ptdf_flow(5,6)

q(4)
                (.LO, .L, .UP, .M = -INF, 266.484157311215, +INF, 0)
        1       net_inj(4)
        1       sum_NI
        0.1455  ptdf_flow(1,2)
        0.2909  ptdf_flow(1,3)
        0.5636  ptdf_flow(1,4)
        0.1455  ptdf_flow(2,3)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 237
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1645


     q  net injection quantity

        0.2727  ptdf_flow(3,4)
        0.1636  ptdf_flow(3,5)
       -0.1091  ptdf_flow(4,5)
       -0.0545  ptdf_flow(4,6)
        0.0545  ptdf_flow(5,6)

q(5)
                (.LO, .L, .UP, .M = -INF, -330.769452367199, +INF, 0)
        1       net_inj(5)
        1       sum_NI
        0.1818  ptdf_flow(1,2)
        0.3636  ptdf_flow(1,3)
        0.4545  ptdf_flow(1,4)
        0.1818  ptdf_flow(2,3)
        0.0909  ptdf_flow(3,4)
        0.4545  ptdf_flow(3,5)
        0.3636  ptdf_flow(4,5)
        0.1818  ptdf_flow(4,6)
       -0.1818  ptdf_flow(5,6)

q(6)
                (.LO, .L, .UP, .M = -INF, 349.999580770291, +INF, 0)
        1       net_inj(6)
        1       sum_NI
        0.1636  ptdf_flow(1,2)
        0.3273  ptdf_flow(1,3)
        0.5091  ptdf_flow(1,4)
        0.1636  ptdf_flow(2,3)
        0.1818  ptdf_flow(3,4)
        0.3091  ptdf_flow(3,5)
        0.1273  ptdf_flow(4,5)
        0.5636  ptdf_flow(4,6)
        0.4364  ptdf_flow(5,6)


---- f  line flow

f(1,2)
                (.LO, .L, .UP, .M = -INF, -470.00030999938, +INF, 0)
        1       ptdf_flow(1,2)
        1       fwd_lconstr(1,2)
        1       bwd_lconstr(1,2)

f(1,3)
                (.LO, .L, .UP, .M = -INF, -420, +INF, 0)
        1       ptdf_flow(1,3)
        1       fwd_lconstr(1,3)
        1       bwd_lconstr(1,3)

f(1,4)
                (.LO, .L, .UP, .M = -INF, -355.714285714307, +INF, 0)
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 238
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE redispatch Using NLP From line 1645


     f  line flow

        1       ptdf_flow(1,4)
        1       fwd_lconstr(1,4)
        1       bwd_lconstr(1,4)

f(2,3)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow(2,3)
        1       fwd_lconstr(2,3)
        1       bwd_lconstr(2,3)

f(3,4)
                (.LO, .L, .UP, .M = -INF, 19.9999999999999, +INF, EPS)
        1       ptdf_flow(3,4)
        1       fwd_lconstr(3,4)
        1       bwd_lconstr(3,4)

f(3,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow(3,5)
        1       fwd_lconstr(3,5)
        1       bwd_lconstr(3,5)

f(4,5)
                (.LO, .L, .UP, .M = -INF, 50, +INF, 0)
        1       ptdf_flow(4,5)
        1       fwd_lconstr(4,5)
        1       bwd_lconstr(4,5)

f(4,6)
                (.LO, .L, .UP, .M = -INF, -149.999580770291, +INF, 0)
        1       ptdf_flow(4,6)
        1       fwd_lconstr(4,6)
        1       bwd_lconstr(4,6)

f(5,6)
                (.LO, .L, .UP, .M = -INF, -200, +INF, 0)
        1       ptdf_flow(5,6)
        1       fwd_lconstr(5,6)
        1       bwd_lconstr(5,6)


---- surplus  total benefit minus total cost

surplus
                (.LO, .L, .UP, .M = -INF, 49342.2420286745, +INF, 0)
        1       tot_surplus

GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 239
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE redispatch Using NLP From line 1645


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS           69
BLOCKS OF VARIABLES           9     SINGLE VARIABLES           52
NON ZERO ELEMENTS           224     NON LINEAR N-Z             21
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH                 156


GENERATION TIME      =        0.031 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 240
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE redispatch Using NLP From line 1645


               S O L V E      S U M M A R Y

     MODEL   redispatch          OBJECTIVE  surplus
     TYPE    NLP                 DIRECTION  MAXIMIZE
     SOLVER  MINOS               FROM LINE  1645

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE           119473.0330

 RESOURCE USAGE, LIMIT          0.000      1000.000
 ITERATION COUNT, LIMIT         8    2000000000
 EVALUATION ERRORS              0             0

GAMS/MINOS       30.3.0 rc5da09e Released Mar 06, 2020 WEI x86 64bit/MS Win
M I N O S  5.6      (Jul 2016)

    GAMS/MINOS 5.6, Large Scale Nonlinear Solver
    B. A. Murtagh, University of New South Wales
    P. E. Gill, University of California at San Diego,
    W. Murray, M. A. Saunders, and M. H. Wright,
    Systems Optimization Laboratory, Stanford University

 Work space allocated           --     0.87 Mb

 EXIT - Optimal Solution found, objective:        119473.0



**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
                             3  PROJECTED
GAMS 30.3.0  rc5da09e Released Mar  6, 2020 WEX-WEI x86 64bit/MS Windows                                                                                                                                                             04/04/22 13:20:43 Page 241
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


EXECUTION TIME       =        0.016 SECONDS      3 MB  30.3.0 rc5da09e WEX-WEI


USER: Small MUD - 5 User License                     S190221:1111AO-WIN
      Norwegian School of Economics, Department of Business and DC14788
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\run_models.gms
Output     C:\Users\s1274\OneDrive - Norges Handelshøyskole\Documents\Veiledning PhD\Benjamin\Hybrid model march 2022\run_models.lst
